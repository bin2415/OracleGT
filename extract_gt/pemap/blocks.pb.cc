// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blocks.proto

#include "blocks.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_blocks_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_blocks_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CalledFunction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_blocks_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Child;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_blocks_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Instruction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_blocks_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BasicBlock;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_blocks_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Function;
}  // namespace protobuf_blocks_2eproto
namespace blocks {
class moduleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<module>
      _instance;
} _module_default_instance_;
class FunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Function>
      _instance;
} _Function_default_instance_;
class CalledFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalledFunction>
      _instance;
} _CalledFunction_default_instance_;
class ChildDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Child>
      _instance;
} _Child_default_instance_;
class InstructionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instruction>
      _instance;
} _Instruction_default_instance_;
class BasicBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BasicBlock>
      _instance;
} _BasicBlock_default_instance_;
}  // namespace blocks
namespace protobuf_blocks_2eproto {
static void InitDefaultsmodule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blocks::_module_default_instance_;
    new (ptr) ::blocks::module();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blocks::module::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_module =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmodule}, {
      &protobuf_blocks_2eproto::scc_info_Function.base,}};

static void InitDefaultsFunction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blocks::_Function_default_instance_;
    new (ptr) ::blocks::Function();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blocks::Function::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Function =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFunction}, {
      &protobuf_blocks_2eproto::scc_info_BasicBlock.base,
      &protobuf_blocks_2eproto::scc_info_CalledFunction.base,}};

static void InitDefaultsCalledFunction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blocks::_CalledFunction_default_instance_;
    new (ptr) ::blocks::CalledFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blocks::CalledFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CalledFunction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCalledFunction}, {}};

static void InitDefaultsChild() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blocks::_Child_default_instance_;
    new (ptr) ::blocks::Child();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blocks::Child::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Child =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChild}, {}};

static void InitDefaultsInstruction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blocks::_Instruction_default_instance_;
    new (ptr) ::blocks::Instruction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blocks::Instruction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Instruction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstruction}, {}};

static void InitDefaultsBasicBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blocks::_BasicBlock_default_instance_;
    new (ptr) ::blocks::BasicBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blocks::BasicBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BasicBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBasicBlock}, {
      &protobuf_blocks_2eproto::scc_info_Child.base,
      &protobuf_blocks_2eproto::scc_info_Instruction.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_module.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Function.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CalledFunction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Child.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Instruction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BasicBlock.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::module, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::module, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::module, fuc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::module, text_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::module, text_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::module, split_block_),
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Function, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Function, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Function, va_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Function, bb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Function, calledfunction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Function, type_),
  0,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::CalledFunction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::CalledFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::CalledFunction, va_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Child, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Child, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Child, va_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Instruction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Instruction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Instruction, va_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Instruction, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::Instruction, call_type_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, va_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, child_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, instructions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, padding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blocks::BasicBlock, terminate_),
  0,
  1,
  ~0u,
  ~0u,
  2,
  3,
  4,
  5,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::blocks::module)},
  { 13, 22, sizeof(::blocks::Function)},
  { 26, 32, sizeof(::blocks::CalledFunction)},
  { 33, 39, sizeof(::blocks::Child)},
  { 40, 48, sizeof(::blocks::Instruction)},
  { 51, 64, sizeof(::blocks::BasicBlock)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::blocks::_module_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blocks::_Function_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blocks::_CalledFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blocks::_Child_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blocks::_Instruction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blocks::_BasicBlock_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "blocks.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014blocks.proto\022\006blocks\"o\n\006module\022\035\n\003fuc\030"
      "\001 \003(\0132\020.blocks.Function\022\025\n\ntext_start\030\002 "
      "\001(\004:\0010\022\023\n\010text_end\030\003 \001(\004:\0010\022\032\n\013split_blo"
      "ck\030\004 \001(\010:\005false\"w\n\010Function\022\n\n\002va\030\001 \002(\004\022"
      "\036\n\002bb\030\002 \003(\0132\022.blocks.BasicBlock\022.\n\016calle"
      "dFunction\030\003 \003(\0132\026.blocks.CalledFunction\022"
      "\017\n\004type\030\004 \001(\r:\0010\"\034\n\016CalledFunction\022\n\n\002va"
      "\030\001 \002(\004\"\023\n\005Child\022\n\n\002va\030\001 \002(\004\"@\n\013Instructi"
      "on\022\n\n\002va\030\001 \002(\004\022\017\n\004size\030\002 \001(\r:\0010\022\024\n\tcall_"
      "type\030\003 \001(\r:\0010\"\301\001\n\nBasicBlock\022\n\n\002va\030\001 \002(\004"
      "\022\016\n\006parent\030\002 \002(\004\022\034\n\005child\030\003 \003(\0132\r.blocks"
      ".Child\022)\n\014instructions\030\004 \003(\0132\023.blocks.In"
      "struction\022\017\n\004size\030\005 \001(\r:\0010\022\022\n\007padding\030\006 "
      "\001(\r:\0010\022\017\n\004type\030\007 \001(\r:\0010\022\030\n\tterminate\030\010 \001"
      "(\010:\005false"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 569);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "blocks.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_blocks_2eproto
namespace blocks {

// ===================================================================

void module::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int module::kFucFieldNumber;
const int module::kTextStartFieldNumber;
const int module::kTextEndFieldNumber;
const int module::kSplitBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

module::module()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blocks_2eproto::scc_info_module.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blocks.module)
}
module::module(const module& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      fuc_(from.fuc_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&text_start_, &from.text_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&split_block_) -
    reinterpret_cast<char*>(&text_start_)) + sizeof(split_block_));
  // @@protoc_insertion_point(copy_constructor:blocks.module)
}

void module::SharedCtor() {
  ::memset(&text_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_block_) -
      reinterpret_cast<char*>(&text_start_)) + sizeof(split_block_));
}

module::~module() {
  // @@protoc_insertion_point(destructor:blocks.module)
  SharedDtor();
}

void module::SharedDtor() {
}

void module::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* module::descriptor() {
  ::protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const module& module::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blocks_2eproto::scc_info_module.base);
  return *internal_default_instance();
}


void module::Clear() {
// @@protoc_insertion_point(message_clear_start:blocks.module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fuc_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&text_start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&split_block_) -
        reinterpret_cast<char*>(&text_start_)) + sizeof(split_block_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blocks.module)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .blocks.Function fuc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fuc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 text_start = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_text_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &text_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 text_end = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_text_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &text_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool split_block = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_split_block();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &split_block_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blocks.module)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blocks.module)
  return false;
#undef DO_
}

void module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blocks.module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .blocks.Function fuc = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fuc_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->fuc(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 text_start = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->text_start(), output);
  }

  // optional uint64 text_end = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->text_end(), output);
  }

  // optional bool split_block = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->split_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:blocks.module)
}

::google::protobuf::uint8* module::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blocks.module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .blocks.Function fuc = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fuc_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fuc(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 text_start = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->text_start(), target);
  }

  // optional uint64 text_end = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->text_end(), target);
  }

  // optional bool split_block = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->split_block(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blocks.module)
  return target;
}

size_t module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blocks.module)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .blocks.Function fuc = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fuc_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fuc(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 text_start = 2 [default = 0];
    if (has_text_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->text_start());
    }

    // optional uint64 text_end = 3 [default = 0];
    if (has_text_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->text_end());
    }

    // optional bool split_block = 4 [default = false];
    if (has_split_block()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void module::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blocks.module)
  GOOGLE_DCHECK_NE(&from, this);
  const module* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const module>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blocks.module)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blocks.module)
    MergeFrom(*source);
  }
}

void module::MergeFrom(const module& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blocks.module)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fuc_.MergeFrom(from.fuc_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      text_start_ = from.text_start_;
    }
    if (cached_has_bits & 0x00000002u) {
      text_end_ = from.text_end_;
    }
    if (cached_has_bits & 0x00000004u) {
      split_block_ = from.split_block_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void module::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blocks.module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void module::CopyFrom(const module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blocks.module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool module::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->fuc())) return false;
  return true;
}

void module::Swap(module* other) {
  if (other == this) return;
  InternalSwap(other);
}
void module::InternalSwap(module* other) {
  using std::swap;
  CastToBase(&fuc_)->InternalSwap(CastToBase(&other->fuc_));
  swap(text_start_, other->text_start_);
  swap(text_end_, other->text_end_);
  swap(split_block_, other->split_block_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata module::GetMetadata() const {
  protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Function::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Function::kVaFieldNumber;
const int Function::kBbFieldNumber;
const int Function::kCalledFunctionFieldNumber;
const int Function::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Function::Function()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blocks_2eproto::scc_info_Function.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blocks.Function)
}
Function::Function(const Function& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      bb_(from.bb_),
      calledfunction_(from.calledfunction_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&va_, &from.va_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&va_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:blocks.Function)
}

void Function::SharedCtor() {
  ::memset(&va_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&va_)) + sizeof(type_));
}

Function::~Function() {
  // @@protoc_insertion_point(destructor:blocks.Function)
  SharedDtor();
}

void Function::SharedDtor() {
}

void Function::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Function::descriptor() {
  ::protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Function& Function::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blocks_2eproto::scc_info_Function.base);
  return *internal_default_instance();
}


void Function::Clear() {
// @@protoc_insertion_point(message_clear_start:blocks.Function)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bb_.Clear();
  calledfunction_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&va_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&va_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Function::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blocks.Function)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 va = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_va();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &va_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .blocks.BasicBlock bb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .blocks.CalledFunction calledFunction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_calledfunction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 type = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blocks.Function)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blocks.Function)
  return false;
#undef DO_
}

void Function::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blocks.Function)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->va(), output);
  }

  // repeated .blocks.BasicBlock bb = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bb_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->bb(static_cast<int>(i)),
      output);
  }

  // repeated .blocks.CalledFunction calledFunction = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calledfunction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->calledfunction(static_cast<int>(i)),
      output);
  }

  // optional uint32 type = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:blocks.Function)
}

::google::protobuf::uint8* Function::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blocks.Function)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->va(), target);
  }

  // repeated .blocks.BasicBlock bb = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bb_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->bb(static_cast<int>(i)), deterministic, target);
  }

  // repeated .blocks.CalledFunction calledFunction = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calledfunction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->calledfunction(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 type = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blocks.Function)
  return target;
}

size_t Function::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blocks.Function)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 va = 1;
  if (has_va()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->va());
  }
  // repeated .blocks.BasicBlock bb = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->bb_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bb(static_cast<int>(i)));
    }
  }

  // repeated .blocks.CalledFunction calledFunction = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->calledfunction_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->calledfunction(static_cast<int>(i)));
    }
  }

  // optional uint32 type = 4 [default = 0];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Function::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blocks.Function)
  GOOGLE_DCHECK_NE(&from, this);
  const Function* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Function>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blocks.Function)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blocks.Function)
    MergeFrom(*source);
  }
}

void Function::MergeFrom(const Function& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blocks.Function)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bb_.MergeFrom(from.bb_);
  calledfunction_.MergeFrom(from.calledfunction_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      va_ = from.va_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Function::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blocks.Function)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Function::CopyFrom(const Function& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blocks.Function)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Function::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->bb())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->calledfunction())) return false;
  return true;
}

void Function::Swap(Function* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Function::InternalSwap(Function* other) {
  using std::swap;
  CastToBase(&bb_)->InternalSwap(CastToBase(&other->bb_));
  CastToBase(&calledfunction_)->InternalSwap(CastToBase(&other->calledfunction_));
  swap(va_, other->va_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Function::GetMetadata() const {
  protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalledFunction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalledFunction::kVaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalledFunction::CalledFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blocks_2eproto::scc_info_CalledFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blocks.CalledFunction)
}
CalledFunction::CalledFunction(const CalledFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  va_ = from.va_;
  // @@protoc_insertion_point(copy_constructor:blocks.CalledFunction)
}

void CalledFunction::SharedCtor() {
  va_ = GOOGLE_ULONGLONG(0);
}

CalledFunction::~CalledFunction() {
  // @@protoc_insertion_point(destructor:blocks.CalledFunction)
  SharedDtor();
}

void CalledFunction::SharedDtor() {
}

void CalledFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CalledFunction::descriptor() {
  ::protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalledFunction& CalledFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blocks_2eproto::scc_info_CalledFunction.base);
  return *internal_default_instance();
}


void CalledFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:blocks.CalledFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  va_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CalledFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blocks.CalledFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 va = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_va();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &va_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blocks.CalledFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blocks.CalledFunction)
  return false;
#undef DO_
}

void CalledFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blocks.CalledFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->va(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:blocks.CalledFunction)
}

::google::protobuf::uint8* CalledFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blocks.CalledFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->va(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blocks.CalledFunction)
  return target;
}

size_t CalledFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blocks.CalledFunction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 va = 1;
  if (has_va()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->va());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CalledFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blocks.CalledFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const CalledFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalledFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blocks.CalledFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blocks.CalledFunction)
    MergeFrom(*source);
  }
}

void CalledFunction::MergeFrom(const CalledFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blocks.CalledFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_va()) {
    set_va(from.va());
  }
}

void CalledFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blocks.CalledFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalledFunction::CopyFrom(const CalledFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blocks.CalledFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalledFunction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CalledFunction::Swap(CalledFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalledFunction::InternalSwap(CalledFunction* other) {
  using std::swap;
  swap(va_, other->va_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CalledFunction::GetMetadata() const {
  protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Child::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Child::kVaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Child::Child()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blocks_2eproto::scc_info_Child.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blocks.Child)
}
Child::Child(const Child& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  va_ = from.va_;
  // @@protoc_insertion_point(copy_constructor:blocks.Child)
}

void Child::SharedCtor() {
  va_ = GOOGLE_ULONGLONG(0);
}

Child::~Child() {
  // @@protoc_insertion_point(destructor:blocks.Child)
  SharedDtor();
}

void Child::SharedDtor() {
}

void Child::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Child::descriptor() {
  ::protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Child& Child::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blocks_2eproto::scc_info_Child.base);
  return *internal_default_instance();
}


void Child::Clear() {
// @@protoc_insertion_point(message_clear_start:blocks.Child)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  va_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Child::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blocks.Child)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 va = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_va();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &va_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blocks.Child)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blocks.Child)
  return false;
#undef DO_
}

void Child::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blocks.Child)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->va(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:blocks.Child)
}

::google::protobuf::uint8* Child::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blocks.Child)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->va(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blocks.Child)
  return target;
}

size_t Child::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blocks.Child)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 va = 1;
  if (has_va()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->va());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Child::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blocks.Child)
  GOOGLE_DCHECK_NE(&from, this);
  const Child* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Child>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blocks.Child)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blocks.Child)
    MergeFrom(*source);
  }
}

void Child::MergeFrom(const Child& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blocks.Child)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_va()) {
    set_va(from.va());
  }
}

void Child::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blocks.Child)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Child::CopyFrom(const Child& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blocks.Child)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Child::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Child::Swap(Child* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Child::InternalSwap(Child* other) {
  using std::swap;
  swap(va_, other->va_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Child::GetMetadata() const {
  protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Instruction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instruction::kVaFieldNumber;
const int Instruction::kSizeFieldNumber;
const int Instruction::kCallTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instruction::Instruction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blocks_2eproto::scc_info_Instruction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blocks.Instruction)
}
Instruction::Instruction(const Instruction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&va_, &from.va_,
    static_cast<size_t>(reinterpret_cast<char*>(&call_type_) -
    reinterpret_cast<char*>(&va_)) + sizeof(call_type_));
  // @@protoc_insertion_point(copy_constructor:blocks.Instruction)
}

void Instruction::SharedCtor() {
  ::memset(&va_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&call_type_) -
      reinterpret_cast<char*>(&va_)) + sizeof(call_type_));
}

Instruction::~Instruction() {
  // @@protoc_insertion_point(destructor:blocks.Instruction)
  SharedDtor();
}

void Instruction::SharedDtor() {
}

void Instruction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Instruction::descriptor() {
  ::protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Instruction& Instruction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blocks_2eproto::scc_info_Instruction.base);
  return *internal_default_instance();
}


void Instruction::Clear() {
// @@protoc_insertion_point(message_clear_start:blocks.Instruction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&va_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&call_type_) -
        reinterpret_cast<char*>(&va_)) + sizeof(call_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Instruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blocks.Instruction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 va = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_va();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &va_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 size = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 call_type = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_call_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blocks.Instruction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blocks.Instruction)
  return false;
#undef DO_
}

void Instruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blocks.Instruction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->va(), output);
  }

  // optional uint32 size = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
  }

  // optional uint32 call_type = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->call_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:blocks.Instruction)
}

::google::protobuf::uint8* Instruction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blocks.Instruction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->va(), target);
  }

  // optional uint32 size = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->size(), target);
  }

  // optional uint32 call_type = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->call_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blocks.Instruction)
  return target;
}

size_t Instruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blocks.Instruction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 va = 1;
  if (has_va()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->va());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional uint32 size = 2 [default = 0];
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size());
    }

    // optional uint32 call_type = 3 [default = 0];
    if (has_call_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->call_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Instruction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blocks.Instruction)
  GOOGLE_DCHECK_NE(&from, this);
  const Instruction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instruction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blocks.Instruction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blocks.Instruction)
    MergeFrom(*source);
  }
}

void Instruction::MergeFrom(const Instruction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blocks.Instruction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      va_ = from.va_;
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      call_type_ = from.call_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Instruction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blocks.Instruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instruction::CopyFrom(const Instruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blocks.Instruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instruction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Instruction::Swap(Instruction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instruction::InternalSwap(Instruction* other) {
  using std::swap;
  swap(va_, other->va_);
  swap(size_, other->size_);
  swap(call_type_, other->call_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Instruction::GetMetadata() const {
  protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BasicBlock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicBlock::kVaFieldNumber;
const int BasicBlock::kParentFieldNumber;
const int BasicBlock::kChildFieldNumber;
const int BasicBlock::kInstructionsFieldNumber;
const int BasicBlock::kSizeFieldNumber;
const int BasicBlock::kPaddingFieldNumber;
const int BasicBlock::kTypeFieldNumber;
const int BasicBlock::kTerminateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicBlock::BasicBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blocks_2eproto::scc_info_BasicBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blocks.BasicBlock)
}
BasicBlock::BasicBlock(const BasicBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      child_(from.child_),
      instructions_(from.instructions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&va_, &from.va_,
    static_cast<size_t>(reinterpret_cast<char*>(&terminate_) -
    reinterpret_cast<char*>(&va_)) + sizeof(terminate_));
  // @@protoc_insertion_point(copy_constructor:blocks.BasicBlock)
}

void BasicBlock::SharedCtor() {
  ::memset(&va_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&terminate_) -
      reinterpret_cast<char*>(&va_)) + sizeof(terminate_));
}

BasicBlock::~BasicBlock() {
  // @@protoc_insertion_point(destructor:blocks.BasicBlock)
  SharedDtor();
}

void BasicBlock::SharedDtor() {
}

void BasicBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BasicBlock::descriptor() {
  ::protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BasicBlock& BasicBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blocks_2eproto::scc_info_BasicBlock.base);
  return *internal_default_instance();
}


void BasicBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:blocks.BasicBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_.Clear();
  instructions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&va_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&terminate_) -
        reinterpret_cast<char*>(&va_)) + sizeof(terminate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BasicBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blocks.BasicBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 va = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_va();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &va_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 parent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_parent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &parent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .blocks.Child child = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .blocks.Instruction instructions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_instructions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 size = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 padding = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_padding();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 type = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool terminate = 8 [default = false];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_terminate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &terminate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blocks.BasicBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blocks.BasicBlock)
  return false;
#undef DO_
}

void BasicBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blocks.BasicBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->va(), output);
  }

  // required uint64 parent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->parent(), output);
  }

  // repeated .blocks.Child child = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->child(static_cast<int>(i)),
      output);
  }

  // repeated .blocks.Instruction instructions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instructions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->instructions(static_cast<int>(i)),
      output);
  }

  // optional uint32 size = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->size(), output);
  }

  // optional uint32 padding = 6 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->padding(), output);
  }

  // optional uint32 type = 7 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->type(), output);
  }

  // optional bool terminate = 8 [default = false];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->terminate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:blocks.BasicBlock)
}

::google::protobuf::uint8* BasicBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blocks.BasicBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 va = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->va(), target);
  }

  // required uint64 parent = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->parent(), target);
  }

  // repeated .blocks.Child child = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->child(static_cast<int>(i)), deterministic, target);
  }

  // repeated .blocks.Instruction instructions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instructions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->instructions(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 size = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->size(), target);
  }

  // optional uint32 padding = 6 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->padding(), target);
  }

  // optional uint32 type = 7 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->type(), target);
  }

  // optional bool terminate = 8 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->terminate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blocks.BasicBlock)
  return target;
}

size_t BasicBlock::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:blocks.BasicBlock)
  size_t total_size = 0;

  if (has_va()) {
    // required uint64 va = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->va());
  }

  if (has_parent()) {
    // required uint64 parent = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->parent());
  }

  return total_size;
}
size_t BasicBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blocks.BasicBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 va = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->va());

    // required uint64 parent = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->parent());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .blocks.Child child = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // repeated .blocks.Instruction instructions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->instructions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->instructions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 60u) {
    // optional uint32 size = 5 [default = 0];
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size());
    }

    // optional uint32 padding = 6 [default = 0];
    if (has_padding()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->padding());
    }

    // optional uint32 type = 7 [default = 0];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional bool terminate = 8 [default = false];
    if (has_terminate()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BasicBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blocks.BasicBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blocks.BasicBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blocks.BasicBlock)
    MergeFrom(*source);
  }
}

void BasicBlock::MergeFrom(const BasicBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blocks.BasicBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_.MergeFrom(from.child_);
  instructions_.MergeFrom(from.instructions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      va_ = from.va_;
    }
    if (cached_has_bits & 0x00000002u) {
      parent_ = from.parent_;
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000008u) {
      padding_ = from.padding_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      terminate_ = from.terminate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BasicBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blocks.BasicBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicBlock::CopyFrom(const BasicBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blocks.BasicBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicBlock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->child())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->instructions())) return false;
  return true;
}

void BasicBlock::Swap(BasicBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicBlock::InternalSwap(BasicBlock* other) {
  using std::swap;
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  CastToBase(&instructions_)->InternalSwap(CastToBase(&other->instructions_));
  swap(va_, other->va_);
  swap(parent_, other->parent_);
  swap(size_, other->size_);
  swap(padding_, other->padding_);
  swap(type_, other->type_);
  swap(terminate_, other->terminate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BasicBlock::GetMetadata() const {
  protobuf_blocks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blocks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace blocks
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blocks::module* Arena::CreateMaybeMessage< ::blocks::module >(Arena* arena) {
  return Arena::CreateInternal< ::blocks::module >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blocks::Function* Arena::CreateMaybeMessage< ::blocks::Function >(Arena* arena) {
  return Arena::CreateInternal< ::blocks::Function >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blocks::CalledFunction* Arena::CreateMaybeMessage< ::blocks::CalledFunction >(Arena* arena) {
  return Arena::CreateInternal< ::blocks::CalledFunction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blocks::Child* Arena::CreateMaybeMessage< ::blocks::Child >(Arena* arena) {
  return Arena::CreateInternal< ::blocks::Child >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blocks::Instruction* Arena::CreateMaybeMessage< ::blocks::Instruction >(Arena* arena) {
  return Arena::CreateInternal< ::blocks::Instruction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blocks::BasicBlock* Arena::CreateMaybeMessage< ::blocks::BasicBlock >(Arena* arena) {
  return Arena::CreateInternal< ::blocks::BasicBlock >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
