// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: refInf.proto

#include "refInf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_refInf_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_refInf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Reference;
}  // namespace protobuf_refInf_2eproto
namespace RefInf {
class RefListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefList>
      _instance;
} _RefList_default_instance_;
class ReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reference>
      _instance;
} _Reference_default_instance_;
}  // namespace RefInf
namespace protobuf_refInf_2eproto {
static void InitDefaultsRefList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RefInf::_RefList_default_instance_;
    new (ptr) ::RefInf::RefList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RefInf::RefList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RefList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRefList}, {
      &protobuf_refInf_2eproto::scc_info_Reference.base,}};

static void InitDefaultsReference() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RefInf::_Reference_default_instance_;
    new (ptr) ::RefInf::Reference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RefInf::Reference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Reference =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReference}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RefList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Reference.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, text_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, text_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, rodata_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, rodata_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, data_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, data_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, datarel_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, datarel_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, initarray_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::RefList, initarray_end_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::Reference, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::Reference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::Reference, ref_va_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::Reference, ref_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::Reference, target_va_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::Reference, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::Reference, jt_entry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RefInf::Reference, is_rela_),
  0,
  2,
  1,
  3,
  4,
  5,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(::RefInf::RefList)},
  { 27, 38, sizeof(::RefInf::Reference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::RefInf::_RefList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RefInf::_Reference_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "refInf.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014refInf.proto\022\006RefInf\"\231\002\n\007RefList\022\036\n\003re"
      "f\030\001 \003(\0132\021.RefInf.Reference\022\025\n\ntext_start"
      "\030\002 \001(\004:\0010\022\023\n\010text_end\030\003 \001(\004:\0010\022\027\n\014rodata"
      "_start\030\004 \001(\004:\0010\022\025\n\nrodata_end\030\005 \001(\004:\0010\022\025"
      "\n\ndata_start\030\006 \001(\004:\0010\022\023\n\010data_end\030\007 \001(\004:"
      "\0010\022\030\n\rdatarel_start\030\010 \001(\004:\0010\022\026\n\013datarel_"
      "end\030\t \001(\004:\0010\022\032\n\017initarray_start\030\n \001(\004:\0010"
      "\022\030\n\rinitarray_end\030\013 \001(\004:\0010\"\273\001\n\tReference"
      "\022\016\n\006ref_va\030\001 \002(\004\022\020\n\010ref_size\030\002 \002(\r\022\021\n\tta"
      "rget_va\030\003 \001(\004\022\'\n\004kind\030\004 \001(\0162\031.RefInf.Ref"
      "erence.RefKind\022\020\n\010jt_entry\030\005 \001(\010\022\017\n\007is_r"
      "ela\030\006 \001(\010\"-\n\007RefKind\022\007\n\003C2C\020\000\022\007\n\003C2D\020\001\022\007"
      "\n\003D2C\020\002\022\007\n\003D2D\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 496);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "refInf.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_refInf_2eproto
namespace RefInf {
const ::google::protobuf::EnumDescriptor* Reference_RefKind_descriptor() {
  protobuf_refInf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_refInf_2eproto::file_level_enum_descriptors[0];
}
bool Reference_RefKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Reference_RefKind Reference::C2C;
const Reference_RefKind Reference::C2D;
const Reference_RefKind Reference::D2C;
const Reference_RefKind Reference::D2D;
const Reference_RefKind Reference::RefKind_MIN;
const Reference_RefKind Reference::RefKind_MAX;
const int Reference::RefKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void RefList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefList::kRefFieldNumber;
const int RefList::kTextStartFieldNumber;
const int RefList::kTextEndFieldNumber;
const int RefList::kRodataStartFieldNumber;
const int RefList::kRodataEndFieldNumber;
const int RefList::kDataStartFieldNumber;
const int RefList::kDataEndFieldNumber;
const int RefList::kDatarelStartFieldNumber;
const int RefList::kDatarelEndFieldNumber;
const int RefList::kInitarrayStartFieldNumber;
const int RefList::kInitarrayEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefList::RefList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_refInf_2eproto::scc_info_RefList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RefInf.RefList)
}
RefList::RefList(const RefList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ref_(from.ref_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&text_start_, &from.text_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&initarray_end_) -
    reinterpret_cast<char*>(&text_start_)) + sizeof(initarray_end_));
  // @@protoc_insertion_point(copy_constructor:RefInf.RefList)
}

void RefList::SharedCtor() {
  ::memset(&text_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initarray_end_) -
      reinterpret_cast<char*>(&text_start_)) + sizeof(initarray_end_));
}

RefList::~RefList() {
  // @@protoc_insertion_point(destructor:RefInf.RefList)
  SharedDtor();
}

void RefList::SharedDtor() {
}

void RefList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RefList::descriptor() {
  ::protobuf_refInf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_refInf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefList& RefList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_refInf_2eproto::scc_info_RefList.base);
  return *internal_default_instance();
}


void RefList::Clear() {
// @@protoc_insertion_point(message_clear_start:RefInf.RefList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ref_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&text_start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&datarel_end_) -
        reinterpret_cast<char*>(&text_start_)) + sizeof(datarel_end_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&initarray_start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&initarray_end_) -
        reinterpret_cast<char*>(&initarray_start_)) + sizeof(initarray_end_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RefList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RefInf.RefList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RefInf.Reference ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 text_start = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_text_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &text_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 text_end = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_text_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &text_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 rodata_start = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_rodata_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rodata_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 rodata_end = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_rodata_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rodata_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 data_start = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_data_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 data_end = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_data_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 datarel_start = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_datarel_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &datarel_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 datarel_end = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_datarel_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &datarel_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 initarray_start = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_initarray_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &initarray_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 initarray_end = 11 [default = 0];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_initarray_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &initarray_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RefInf.RefList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RefInf.RefList)
  return false;
#undef DO_
}

void RefList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RefInf.RefList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RefInf.Reference ref = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ref_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->ref(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 text_start = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->text_start(), output);
  }

  // optional uint64 text_end = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->text_end(), output);
  }

  // optional uint64 rodata_start = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->rodata_start(), output);
  }

  // optional uint64 rodata_end = 5 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->rodata_end(), output);
  }

  // optional uint64 data_start = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->data_start(), output);
  }

  // optional uint64 data_end = 7 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->data_end(), output);
  }

  // optional uint64 datarel_start = 8 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->datarel_start(), output);
  }

  // optional uint64 datarel_end = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->datarel_end(), output);
  }

  // optional uint64 initarray_start = 10 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->initarray_start(), output);
  }

  // optional uint64 initarray_end = 11 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->initarray_end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RefInf.RefList)
}

::google::protobuf::uint8* RefList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RefInf.RefList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RefInf.Reference ref = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ref_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->ref(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 text_start = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->text_start(), target);
  }

  // optional uint64 text_end = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->text_end(), target);
  }

  // optional uint64 rodata_start = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->rodata_start(), target);
  }

  // optional uint64 rodata_end = 5 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->rodata_end(), target);
  }

  // optional uint64 data_start = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->data_start(), target);
  }

  // optional uint64 data_end = 7 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->data_end(), target);
  }

  // optional uint64 datarel_start = 8 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->datarel_start(), target);
  }

  // optional uint64 datarel_end = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->datarel_end(), target);
  }

  // optional uint64 initarray_start = 10 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->initarray_start(), target);
  }

  // optional uint64 initarray_end = 11 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->initarray_end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RefInf.RefList)
  return target;
}

size_t RefList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RefInf.RefList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .RefInf.Reference ref = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ref_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ref(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 text_start = 2 [default = 0];
    if (has_text_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->text_start());
    }

    // optional uint64 text_end = 3 [default = 0];
    if (has_text_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->text_end());
    }

    // optional uint64 rodata_start = 4 [default = 0];
    if (has_rodata_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rodata_start());
    }

    // optional uint64 rodata_end = 5 [default = 0];
    if (has_rodata_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rodata_end());
    }

    // optional uint64 data_start = 6 [default = 0];
    if (has_data_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->data_start());
    }

    // optional uint64 data_end = 7 [default = 0];
    if (has_data_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->data_end());
    }

    // optional uint64 datarel_start = 8 [default = 0];
    if (has_datarel_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->datarel_start());
    }

    // optional uint64 datarel_end = 9 [default = 0];
    if (has_datarel_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->datarel_end());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint64 initarray_start = 10 [default = 0];
    if (has_initarray_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->initarray_start());
    }

    // optional uint64 initarray_end = 11 [default = 0];
    if (has_initarray_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->initarray_end());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RefInf.RefList)
  GOOGLE_DCHECK_NE(&from, this);
  const RefList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RefInf.RefList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RefInf.RefList)
    MergeFrom(*source);
  }
}

void RefList::MergeFrom(const RefList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RefInf.RefList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ref_.MergeFrom(from.ref_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      text_start_ = from.text_start_;
    }
    if (cached_has_bits & 0x00000002u) {
      text_end_ = from.text_end_;
    }
    if (cached_has_bits & 0x00000004u) {
      rodata_start_ = from.rodata_start_;
    }
    if (cached_has_bits & 0x00000008u) {
      rodata_end_ = from.rodata_end_;
    }
    if (cached_has_bits & 0x00000010u) {
      data_start_ = from.data_start_;
    }
    if (cached_has_bits & 0x00000020u) {
      data_end_ = from.data_end_;
    }
    if (cached_has_bits & 0x00000040u) {
      datarel_start_ = from.datarel_start_;
    }
    if (cached_has_bits & 0x00000080u) {
      datarel_end_ = from.datarel_end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      initarray_start_ = from.initarray_start_;
    }
    if (cached_has_bits & 0x00000200u) {
      initarray_end_ = from.initarray_end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RefList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RefInf.RefList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefList::CopyFrom(const RefList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RefInf.RefList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->ref())) return false;
  return true;
}

void RefList::Swap(RefList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefList::InternalSwap(RefList* other) {
  using std::swap;
  CastToBase(&ref_)->InternalSwap(CastToBase(&other->ref_));
  swap(text_start_, other->text_start_);
  swap(text_end_, other->text_end_);
  swap(rodata_start_, other->rodata_start_);
  swap(rodata_end_, other->rodata_end_);
  swap(data_start_, other->data_start_);
  swap(data_end_, other->data_end_);
  swap(datarel_start_, other->datarel_start_);
  swap(datarel_end_, other->datarel_end_);
  swap(initarray_start_, other->initarray_start_);
  swap(initarray_end_, other->initarray_end_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RefList::GetMetadata() const {
  protobuf_refInf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_refInf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reference::kRefVaFieldNumber;
const int Reference::kRefSizeFieldNumber;
const int Reference::kTargetVaFieldNumber;
const int Reference::kKindFieldNumber;
const int Reference::kJtEntryFieldNumber;
const int Reference::kIsRelaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reference::Reference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_refInf_2eproto::scc_info_Reference.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RefInf.Reference)
}
Reference::Reference(const Reference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ref_va_, &from.ref_va_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_rela_) -
    reinterpret_cast<char*>(&ref_va_)) + sizeof(is_rela_));
  // @@protoc_insertion_point(copy_constructor:RefInf.Reference)
}

void Reference::SharedCtor() {
  ::memset(&ref_va_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_rela_) -
      reinterpret_cast<char*>(&ref_va_)) + sizeof(is_rela_));
}

Reference::~Reference() {
  // @@protoc_insertion_point(destructor:RefInf.Reference)
  SharedDtor();
}

void Reference::SharedDtor() {
}

void Reference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Reference::descriptor() {
  ::protobuf_refInf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_refInf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reference& Reference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_refInf_2eproto::scc_info_Reference.base);
  return *internal_default_instance();
}


void Reference::Clear() {
// @@protoc_insertion_point(message_clear_start:RefInf.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&ref_va_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_rela_) -
        reinterpret_cast<char*>(&ref_va_)) + sizeof(is_rela_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Reference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RefInf.Reference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 ref_va = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ref_va();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ref_va_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ref_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ref_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ref_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 target_va = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_target_va();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_va_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RefInf.Reference.RefKind kind = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RefInf::Reference_RefKind_IsValid(value)) {
            set_kind(static_cast< ::RefInf::Reference_RefKind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool jt_entry = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_jt_entry();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &jt_entry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_rela = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_rela();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rela_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RefInf.Reference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RefInf.Reference)
  return false;
#undef DO_
}

void Reference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RefInf.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ref_va = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ref_va(), output);
  }

  // required uint32 ref_size = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ref_size(), output);
  }

  // optional uint64 target_va = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->target_va(), output);
  }

  // optional .RefInf.Reference.RefKind kind = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->kind(), output);
  }

  // optional bool jt_entry = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->jt_entry(), output);
  }

  // optional bool is_rela = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_rela(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RefInf.Reference)
}

::google::protobuf::uint8* Reference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RefInf.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ref_va = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ref_va(), target);
  }

  // required uint32 ref_size = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ref_size(), target);
  }

  // optional uint64 target_va = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->target_va(), target);
  }

  // optional .RefInf.Reference.RefKind kind = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->kind(), target);
  }

  // optional bool jt_entry = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->jt_entry(), target);
  }

  // optional bool is_rela = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_rela(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RefInf.Reference)
  return target;
}

size_t Reference::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RefInf.Reference)
  size_t total_size = 0;

  if (has_ref_va()) {
    // required uint64 ref_va = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ref_va());
  }

  if (has_ref_size()) {
    // required uint32 ref_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ref_size());
  }

  return total_size;
}
size_t Reference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RefInf.Reference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required uint64 ref_va = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ref_va());

    // required uint32 ref_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ref_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint64 target_va = 3;
  if (has_target_va()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_va());
  }

  if (_has_bits_[0 / 32] & 56u) {
    // optional .RefInf.Reference.RefKind kind = 4;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional bool jt_entry = 5;
    if (has_jt_entry()) {
      total_size += 1 + 1;
    }

    // optional bool is_rela = 6;
    if (has_is_rela()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RefInf.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  const Reference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RefInf.Reference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RefInf.Reference)
    MergeFrom(*source);
  }
}

void Reference::MergeFrom(const Reference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RefInf.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      ref_va_ = from.ref_va_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_va_ = from.target_va_;
    }
    if (cached_has_bits & 0x00000004u) {
      ref_size_ = from.ref_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      kind_ = from.kind_;
    }
    if (cached_has_bits & 0x00000010u) {
      jt_entry_ = from.jt_entry_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_rela_ = from.is_rela_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Reference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RefInf.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reference::CopyFrom(const Reference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RefInf.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reference::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void Reference::Swap(Reference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reference::InternalSwap(Reference* other) {
  using std::swap;
  swap(ref_va_, other->ref_va_);
  swap(target_va_, other->target_va_);
  swap(ref_size_, other->ref_size_);
  swap(kind_, other->kind_);
  swap(jt_entry_, other->jt_entry_);
  swap(is_rela_, other->is_rela_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Reference::GetMetadata() const {
  protobuf_refInf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_refInf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace RefInf
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RefInf::RefList* Arena::CreateMaybeMessage< ::RefInf::RefList >(Arena* arena) {
  return Arena::CreateInternal< ::RefInf::RefList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RefInf::Reference* Arena::CreateMaybeMessage< ::RefInf::Reference >(Arena* arena) {
  return Arena::CreateInternal< ::RefInf::Reference >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
