// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blocks.proto

#ifndef PROTOBUF_INCLUDED_blocks_2eproto
#define PROTOBUF_INCLUDED_blocks_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_blocks_2eproto 

namespace protobuf_blocks_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_blocks_2eproto
namespace blocks {
class BasicBlock;
class BasicBlockDefaultTypeInternal;
extern BasicBlockDefaultTypeInternal _BasicBlock_default_instance_;
class CalledFunction;
class CalledFunctionDefaultTypeInternal;
extern CalledFunctionDefaultTypeInternal _CalledFunction_default_instance_;
class Child;
class ChildDefaultTypeInternal;
extern ChildDefaultTypeInternal _Child_default_instance_;
class Function;
class FunctionDefaultTypeInternal;
extern FunctionDefaultTypeInternal _Function_default_instance_;
class Instruction;
class InstructionDefaultTypeInternal;
extern InstructionDefaultTypeInternal _Instruction_default_instance_;
class module;
class moduleDefaultTypeInternal;
extern moduleDefaultTypeInternal _module_default_instance_;
}  // namespace blocks
namespace google {
namespace protobuf {
template<> ::blocks::BasicBlock* Arena::CreateMaybeMessage<::blocks::BasicBlock>(Arena*);
template<> ::blocks::CalledFunction* Arena::CreateMaybeMessage<::blocks::CalledFunction>(Arena*);
template<> ::blocks::Child* Arena::CreateMaybeMessage<::blocks::Child>(Arena*);
template<> ::blocks::Function* Arena::CreateMaybeMessage<::blocks::Function>(Arena*);
template<> ::blocks::Instruction* Arena::CreateMaybeMessage<::blocks::Instruction>(Arena*);
template<> ::blocks::module* Arena::CreateMaybeMessage<::blocks::module>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace blocks {

// ===================================================================

class module : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blocks.module) */ {
 public:
  module();
  virtual ~module();

  module(const module& from);

  inline module& operator=(const module& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  module(module&& from) noexcept
    : module() {
    *this = ::std::move(from);
  }

  inline module& operator=(module&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const module& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const module* internal_default_instance() {
    return reinterpret_cast<const module*>(
               &_module_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(module* other);
  friend void swap(module& a, module& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline module* New() const final {
    return CreateMaybeMessage<module>(NULL);
  }

  module* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<module>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const module& from);
  void MergeFrom(const module& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(module* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .blocks.Function fuc = 1;
  int fuc_size() const;
  void clear_fuc();
  static const int kFucFieldNumber = 1;
  ::blocks::Function* mutable_fuc(int index);
  ::google::protobuf::RepeatedPtrField< ::blocks::Function >*
      mutable_fuc();
  const ::blocks::Function& fuc(int index) const;
  ::blocks::Function* add_fuc();
  const ::google::protobuf::RepeatedPtrField< ::blocks::Function >&
      fuc() const;

  // optional uint64 text_start = 2 [default = 0];
  bool has_text_start() const;
  void clear_text_start();
  static const int kTextStartFieldNumber = 2;
  ::google::protobuf::uint64 text_start() const;
  void set_text_start(::google::protobuf::uint64 value);

  // optional uint64 text_end = 3 [default = 0];
  bool has_text_end() const;
  void clear_text_end();
  static const int kTextEndFieldNumber = 3;
  ::google::protobuf::uint64 text_end() const;
  void set_text_end(::google::protobuf::uint64 value);

  // optional bool split_block = 4 [default = false];
  bool has_split_block() const;
  void clear_split_block();
  static const int kSplitBlockFieldNumber = 4;
  bool split_block() const;
  void set_split_block(bool value);

  // @@protoc_insertion_point(class_scope:blocks.module)
 private:
  void set_has_text_start();
  void clear_has_text_start();
  void set_has_text_end();
  void clear_has_text_end();
  void set_has_split_block();
  void clear_has_split_block();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::blocks::Function > fuc_;
  ::google::protobuf::uint64 text_start_;
  ::google::protobuf::uint64 text_end_;
  bool split_block_;
  friend struct ::protobuf_blocks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Function : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blocks.Function) */ {
 public:
  Function();
  virtual ~Function();

  Function(const Function& from);

  inline Function& operator=(const Function& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Function(Function&& from) noexcept
    : Function() {
    *this = ::std::move(from);
  }

  inline Function& operator=(Function&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Function& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Function* internal_default_instance() {
    return reinterpret_cast<const Function*>(
               &_Function_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Function* other);
  friend void swap(Function& a, Function& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Function* New() const final {
    return CreateMaybeMessage<Function>(NULL);
  }

  Function* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Function>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Function& from);
  void MergeFrom(const Function& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Function* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .blocks.BasicBlock bb = 2;
  int bb_size() const;
  void clear_bb();
  static const int kBbFieldNumber = 2;
  ::blocks::BasicBlock* mutable_bb(int index);
  ::google::protobuf::RepeatedPtrField< ::blocks::BasicBlock >*
      mutable_bb();
  const ::blocks::BasicBlock& bb(int index) const;
  ::blocks::BasicBlock* add_bb();
  const ::google::protobuf::RepeatedPtrField< ::blocks::BasicBlock >&
      bb() const;

  // repeated .blocks.CalledFunction calledFunction = 3;
  int calledfunction_size() const;
  void clear_calledfunction();
  static const int kCalledFunctionFieldNumber = 3;
  ::blocks::CalledFunction* mutable_calledfunction(int index);
  ::google::protobuf::RepeatedPtrField< ::blocks::CalledFunction >*
      mutable_calledfunction();
  const ::blocks::CalledFunction& calledfunction(int index) const;
  ::blocks::CalledFunction* add_calledfunction();
  const ::google::protobuf::RepeatedPtrField< ::blocks::CalledFunction >&
      calledfunction() const;

  // required uint64 va = 1;
  bool has_va() const;
  void clear_va();
  static const int kVaFieldNumber = 1;
  ::google::protobuf::uint64 va() const;
  void set_va(::google::protobuf::uint64 value);

  // optional uint32 type = 4 [default = 0];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:blocks.Function)
 private:
  void set_has_va();
  void clear_has_va();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::blocks::BasicBlock > bb_;
  ::google::protobuf::RepeatedPtrField< ::blocks::CalledFunction > calledfunction_;
  ::google::protobuf::uint64 va_;
  ::google::protobuf::uint32 type_;
  friend struct ::protobuf_blocks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CalledFunction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blocks.CalledFunction) */ {
 public:
  CalledFunction();
  virtual ~CalledFunction();

  CalledFunction(const CalledFunction& from);

  inline CalledFunction& operator=(const CalledFunction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalledFunction(CalledFunction&& from) noexcept
    : CalledFunction() {
    *this = ::std::move(from);
  }

  inline CalledFunction& operator=(CalledFunction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalledFunction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalledFunction* internal_default_instance() {
    return reinterpret_cast<const CalledFunction*>(
               &_CalledFunction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CalledFunction* other);
  friend void swap(CalledFunction& a, CalledFunction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalledFunction* New() const final {
    return CreateMaybeMessage<CalledFunction>(NULL);
  }

  CalledFunction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CalledFunction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CalledFunction& from);
  void MergeFrom(const CalledFunction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalledFunction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 va = 1;
  bool has_va() const;
  void clear_va();
  static const int kVaFieldNumber = 1;
  ::google::protobuf::uint64 va() const;
  void set_va(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:blocks.CalledFunction)
 private:
  void set_has_va();
  void clear_has_va();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 va_;
  friend struct ::protobuf_blocks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Child : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blocks.Child) */ {
 public:
  Child();
  virtual ~Child();

  Child(const Child& from);

  inline Child& operator=(const Child& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Child(Child&& from) noexcept
    : Child() {
    *this = ::std::move(from);
  }

  inline Child& operator=(Child&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Child& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Child* internal_default_instance() {
    return reinterpret_cast<const Child*>(
               &_Child_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Child* other);
  friend void swap(Child& a, Child& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Child* New() const final {
    return CreateMaybeMessage<Child>(NULL);
  }

  Child* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Child>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Child& from);
  void MergeFrom(const Child& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Child* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 va = 1;
  bool has_va() const;
  void clear_va();
  static const int kVaFieldNumber = 1;
  ::google::protobuf::uint64 va() const;
  void set_va(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:blocks.Child)
 private:
  void set_has_va();
  void clear_has_va();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 va_;
  friend struct ::protobuf_blocks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Instruction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blocks.Instruction) */ {
 public:
  Instruction();
  virtual ~Instruction();

  Instruction(const Instruction& from);

  inline Instruction& operator=(const Instruction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Instruction(Instruction&& from) noexcept
    : Instruction() {
    *this = ::std::move(from);
  }

  inline Instruction& operator=(Instruction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Instruction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Instruction* internal_default_instance() {
    return reinterpret_cast<const Instruction*>(
               &_Instruction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Instruction* other);
  friend void swap(Instruction& a, Instruction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Instruction* New() const final {
    return CreateMaybeMessage<Instruction>(NULL);
  }

  Instruction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Instruction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Instruction& from);
  void MergeFrom(const Instruction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Instruction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 va = 1;
  bool has_va() const;
  void clear_va();
  static const int kVaFieldNumber = 1;
  ::google::protobuf::uint64 va() const;
  void set_va(::google::protobuf::uint64 value);

  // optional uint32 size = 2 [default = 0];
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional uint32 call_type = 3 [default = 0];
  bool has_call_type() const;
  void clear_call_type();
  static const int kCallTypeFieldNumber = 3;
  ::google::protobuf::uint32 call_type() const;
  void set_call_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:blocks.Instruction)
 private:
  void set_has_va();
  void clear_has_va();
  void set_has_size();
  void clear_has_size();
  void set_has_call_type();
  void clear_has_call_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 va_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 call_type_;
  friend struct ::protobuf_blocks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BasicBlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blocks.BasicBlock) */ {
 public:
  BasicBlock();
  virtual ~BasicBlock();

  BasicBlock(const BasicBlock& from);

  inline BasicBlock& operator=(const BasicBlock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BasicBlock(BasicBlock&& from) noexcept
    : BasicBlock() {
    *this = ::std::move(from);
  }

  inline BasicBlock& operator=(BasicBlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicBlock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BasicBlock* internal_default_instance() {
    return reinterpret_cast<const BasicBlock*>(
               &_BasicBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(BasicBlock* other);
  friend void swap(BasicBlock& a, BasicBlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BasicBlock* New() const final {
    return CreateMaybeMessage<BasicBlock>(NULL);
  }

  BasicBlock* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BasicBlock>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BasicBlock& from);
  void MergeFrom(const BasicBlock& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BasicBlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .blocks.Child child = 3;
  int child_size() const;
  void clear_child();
  static const int kChildFieldNumber = 3;
  ::blocks::Child* mutable_child(int index);
  ::google::protobuf::RepeatedPtrField< ::blocks::Child >*
      mutable_child();
  const ::blocks::Child& child(int index) const;
  ::blocks::Child* add_child();
  const ::google::protobuf::RepeatedPtrField< ::blocks::Child >&
      child() const;

  // repeated .blocks.Instruction instructions = 4;
  int instructions_size() const;
  void clear_instructions();
  static const int kInstructionsFieldNumber = 4;
  ::blocks::Instruction* mutable_instructions(int index);
  ::google::protobuf::RepeatedPtrField< ::blocks::Instruction >*
      mutable_instructions();
  const ::blocks::Instruction& instructions(int index) const;
  ::blocks::Instruction* add_instructions();
  const ::google::protobuf::RepeatedPtrField< ::blocks::Instruction >&
      instructions() const;

  // required uint64 va = 1;
  bool has_va() const;
  void clear_va();
  static const int kVaFieldNumber = 1;
  ::google::protobuf::uint64 va() const;
  void set_va(::google::protobuf::uint64 value);

  // required uint64 parent = 2;
  bool has_parent() const;
  void clear_parent();
  static const int kParentFieldNumber = 2;
  ::google::protobuf::uint64 parent() const;
  void set_parent(::google::protobuf::uint64 value);

  // optional uint32 size = 5 [default = 0];
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 5;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional uint32 padding = 6 [default = 0];
  bool has_padding() const;
  void clear_padding();
  static const int kPaddingFieldNumber = 6;
  ::google::protobuf::uint32 padding() const;
  void set_padding(::google::protobuf::uint32 value);

  // optional uint32 type = 7 [default = 0];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 7;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional bool terminate = 8 [default = false];
  bool has_terminate() const;
  void clear_terminate();
  static const int kTerminateFieldNumber = 8;
  bool terminate() const;
  void set_terminate(bool value);

  // @@protoc_insertion_point(class_scope:blocks.BasicBlock)
 private:
  void set_has_va();
  void clear_has_va();
  void set_has_parent();
  void clear_has_parent();
  void set_has_size();
  void clear_has_size();
  void set_has_padding();
  void clear_has_padding();
  void set_has_type();
  void clear_has_type();
  void set_has_terminate();
  void clear_has_terminate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::blocks::Child > child_;
  ::google::protobuf::RepeatedPtrField< ::blocks::Instruction > instructions_;
  ::google::protobuf::uint64 va_;
  ::google::protobuf::uint64 parent_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 padding_;
  ::google::protobuf::uint32 type_;
  bool terminate_;
  friend struct ::protobuf_blocks_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// module

// repeated .blocks.Function fuc = 1;
inline int module::fuc_size() const {
  return fuc_.size();
}
inline void module::clear_fuc() {
  fuc_.Clear();
}
inline ::blocks::Function* module::mutable_fuc(int index) {
  // @@protoc_insertion_point(field_mutable:blocks.module.fuc)
  return fuc_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::blocks::Function >*
module::mutable_fuc() {
  // @@protoc_insertion_point(field_mutable_list:blocks.module.fuc)
  return &fuc_;
}
inline const ::blocks::Function& module::fuc(int index) const {
  // @@protoc_insertion_point(field_get:blocks.module.fuc)
  return fuc_.Get(index);
}
inline ::blocks::Function* module::add_fuc() {
  // @@protoc_insertion_point(field_add:blocks.module.fuc)
  return fuc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::blocks::Function >&
module::fuc() const {
  // @@protoc_insertion_point(field_list:blocks.module.fuc)
  return fuc_;
}

// optional uint64 text_start = 2 [default = 0];
inline bool module::has_text_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void module::set_has_text_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void module::clear_has_text_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void module::clear_text_start() {
  text_start_ = GOOGLE_ULONGLONG(0);
  clear_has_text_start();
}
inline ::google::protobuf::uint64 module::text_start() const {
  // @@protoc_insertion_point(field_get:blocks.module.text_start)
  return text_start_;
}
inline void module::set_text_start(::google::protobuf::uint64 value) {
  set_has_text_start();
  text_start_ = value;
  // @@protoc_insertion_point(field_set:blocks.module.text_start)
}

// optional uint64 text_end = 3 [default = 0];
inline bool module::has_text_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void module::set_has_text_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void module::clear_has_text_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void module::clear_text_end() {
  text_end_ = GOOGLE_ULONGLONG(0);
  clear_has_text_end();
}
inline ::google::protobuf::uint64 module::text_end() const {
  // @@protoc_insertion_point(field_get:blocks.module.text_end)
  return text_end_;
}
inline void module::set_text_end(::google::protobuf::uint64 value) {
  set_has_text_end();
  text_end_ = value;
  // @@protoc_insertion_point(field_set:blocks.module.text_end)
}

// optional bool split_block = 4 [default = false];
inline bool module::has_split_block() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void module::set_has_split_block() {
  _has_bits_[0] |= 0x00000004u;
}
inline void module::clear_has_split_block() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void module::clear_split_block() {
  split_block_ = false;
  clear_has_split_block();
}
inline bool module::split_block() const {
  // @@protoc_insertion_point(field_get:blocks.module.split_block)
  return split_block_;
}
inline void module::set_split_block(bool value) {
  set_has_split_block();
  split_block_ = value;
  // @@protoc_insertion_point(field_set:blocks.module.split_block)
}

// -------------------------------------------------------------------

// Function

// required uint64 va = 1;
inline bool Function::has_va() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Function::set_has_va() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Function::clear_has_va() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Function::clear_va() {
  va_ = GOOGLE_ULONGLONG(0);
  clear_has_va();
}
inline ::google::protobuf::uint64 Function::va() const {
  // @@protoc_insertion_point(field_get:blocks.Function.va)
  return va_;
}
inline void Function::set_va(::google::protobuf::uint64 value) {
  set_has_va();
  va_ = value;
  // @@protoc_insertion_point(field_set:blocks.Function.va)
}

// repeated .blocks.BasicBlock bb = 2;
inline int Function::bb_size() const {
  return bb_.size();
}
inline void Function::clear_bb() {
  bb_.Clear();
}
inline ::blocks::BasicBlock* Function::mutable_bb(int index) {
  // @@protoc_insertion_point(field_mutable:blocks.Function.bb)
  return bb_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::blocks::BasicBlock >*
Function::mutable_bb() {
  // @@protoc_insertion_point(field_mutable_list:blocks.Function.bb)
  return &bb_;
}
inline const ::blocks::BasicBlock& Function::bb(int index) const {
  // @@protoc_insertion_point(field_get:blocks.Function.bb)
  return bb_.Get(index);
}
inline ::blocks::BasicBlock* Function::add_bb() {
  // @@protoc_insertion_point(field_add:blocks.Function.bb)
  return bb_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::blocks::BasicBlock >&
Function::bb() const {
  // @@protoc_insertion_point(field_list:blocks.Function.bb)
  return bb_;
}

// repeated .blocks.CalledFunction calledFunction = 3;
inline int Function::calledfunction_size() const {
  return calledfunction_.size();
}
inline void Function::clear_calledfunction() {
  calledfunction_.Clear();
}
inline ::blocks::CalledFunction* Function::mutable_calledfunction(int index) {
  // @@protoc_insertion_point(field_mutable:blocks.Function.calledFunction)
  return calledfunction_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::blocks::CalledFunction >*
Function::mutable_calledfunction() {
  // @@protoc_insertion_point(field_mutable_list:blocks.Function.calledFunction)
  return &calledfunction_;
}
inline const ::blocks::CalledFunction& Function::calledfunction(int index) const {
  // @@protoc_insertion_point(field_get:blocks.Function.calledFunction)
  return calledfunction_.Get(index);
}
inline ::blocks::CalledFunction* Function::add_calledfunction() {
  // @@protoc_insertion_point(field_add:blocks.Function.calledFunction)
  return calledfunction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::blocks::CalledFunction >&
Function::calledfunction() const {
  // @@protoc_insertion_point(field_list:blocks.Function.calledFunction)
  return calledfunction_;
}

// optional uint32 type = 4 [default = 0];
inline bool Function::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Function::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Function::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Function::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Function::type() const {
  // @@protoc_insertion_point(field_get:blocks.Function.type)
  return type_;
}
inline void Function::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:blocks.Function.type)
}

// -------------------------------------------------------------------

// CalledFunction

// required uint64 va = 1;
inline bool CalledFunction::has_va() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalledFunction::set_has_va() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalledFunction::clear_has_va() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalledFunction::clear_va() {
  va_ = GOOGLE_ULONGLONG(0);
  clear_has_va();
}
inline ::google::protobuf::uint64 CalledFunction::va() const {
  // @@protoc_insertion_point(field_get:blocks.CalledFunction.va)
  return va_;
}
inline void CalledFunction::set_va(::google::protobuf::uint64 value) {
  set_has_va();
  va_ = value;
  // @@protoc_insertion_point(field_set:blocks.CalledFunction.va)
}

// -------------------------------------------------------------------

// Child

// required uint64 va = 1;
inline bool Child::has_va() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Child::set_has_va() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Child::clear_has_va() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Child::clear_va() {
  va_ = GOOGLE_ULONGLONG(0);
  clear_has_va();
}
inline ::google::protobuf::uint64 Child::va() const {
  // @@protoc_insertion_point(field_get:blocks.Child.va)
  return va_;
}
inline void Child::set_va(::google::protobuf::uint64 value) {
  set_has_va();
  va_ = value;
  // @@protoc_insertion_point(field_set:blocks.Child.va)
}

// -------------------------------------------------------------------

// Instruction

// required uint64 va = 1;
inline bool Instruction::has_va() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Instruction::set_has_va() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Instruction::clear_has_va() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Instruction::clear_va() {
  va_ = GOOGLE_ULONGLONG(0);
  clear_has_va();
}
inline ::google::protobuf::uint64 Instruction::va() const {
  // @@protoc_insertion_point(field_get:blocks.Instruction.va)
  return va_;
}
inline void Instruction::set_va(::google::protobuf::uint64 value) {
  set_has_va();
  va_ = value;
  // @@protoc_insertion_point(field_set:blocks.Instruction.va)
}

// optional uint32 size = 2 [default = 0];
inline bool Instruction::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Instruction::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Instruction::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Instruction::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 Instruction::size() const {
  // @@protoc_insertion_point(field_get:blocks.Instruction.size)
  return size_;
}
inline void Instruction::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:blocks.Instruction.size)
}

// optional uint32 call_type = 3 [default = 0];
inline bool Instruction::has_call_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Instruction::set_has_call_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Instruction::clear_has_call_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Instruction::clear_call_type() {
  call_type_ = 0u;
  clear_has_call_type();
}
inline ::google::protobuf::uint32 Instruction::call_type() const {
  // @@protoc_insertion_point(field_get:blocks.Instruction.call_type)
  return call_type_;
}
inline void Instruction::set_call_type(::google::protobuf::uint32 value) {
  set_has_call_type();
  call_type_ = value;
  // @@protoc_insertion_point(field_set:blocks.Instruction.call_type)
}

// -------------------------------------------------------------------

// BasicBlock

// required uint64 va = 1;
inline bool BasicBlock::has_va() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicBlock::set_has_va() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicBlock::clear_has_va() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicBlock::clear_va() {
  va_ = GOOGLE_ULONGLONG(0);
  clear_has_va();
}
inline ::google::protobuf::uint64 BasicBlock::va() const {
  // @@protoc_insertion_point(field_get:blocks.BasicBlock.va)
  return va_;
}
inline void BasicBlock::set_va(::google::protobuf::uint64 value) {
  set_has_va();
  va_ = value;
  // @@protoc_insertion_point(field_set:blocks.BasicBlock.va)
}

// required uint64 parent = 2;
inline bool BasicBlock::has_parent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicBlock::set_has_parent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicBlock::clear_has_parent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicBlock::clear_parent() {
  parent_ = GOOGLE_ULONGLONG(0);
  clear_has_parent();
}
inline ::google::protobuf::uint64 BasicBlock::parent() const {
  // @@protoc_insertion_point(field_get:blocks.BasicBlock.parent)
  return parent_;
}
inline void BasicBlock::set_parent(::google::protobuf::uint64 value) {
  set_has_parent();
  parent_ = value;
  // @@protoc_insertion_point(field_set:blocks.BasicBlock.parent)
}

// repeated .blocks.Child child = 3;
inline int BasicBlock::child_size() const {
  return child_.size();
}
inline void BasicBlock::clear_child() {
  child_.Clear();
}
inline ::blocks::Child* BasicBlock::mutable_child(int index) {
  // @@protoc_insertion_point(field_mutable:blocks.BasicBlock.child)
  return child_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::blocks::Child >*
BasicBlock::mutable_child() {
  // @@protoc_insertion_point(field_mutable_list:blocks.BasicBlock.child)
  return &child_;
}
inline const ::blocks::Child& BasicBlock::child(int index) const {
  // @@protoc_insertion_point(field_get:blocks.BasicBlock.child)
  return child_.Get(index);
}
inline ::blocks::Child* BasicBlock::add_child() {
  // @@protoc_insertion_point(field_add:blocks.BasicBlock.child)
  return child_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::blocks::Child >&
BasicBlock::child() const {
  // @@protoc_insertion_point(field_list:blocks.BasicBlock.child)
  return child_;
}

// repeated .blocks.Instruction instructions = 4;
inline int BasicBlock::instructions_size() const {
  return instructions_.size();
}
inline void BasicBlock::clear_instructions() {
  instructions_.Clear();
}
inline ::blocks::Instruction* BasicBlock::mutable_instructions(int index) {
  // @@protoc_insertion_point(field_mutable:blocks.BasicBlock.instructions)
  return instructions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::blocks::Instruction >*
BasicBlock::mutable_instructions() {
  // @@protoc_insertion_point(field_mutable_list:blocks.BasicBlock.instructions)
  return &instructions_;
}
inline const ::blocks::Instruction& BasicBlock::instructions(int index) const {
  // @@protoc_insertion_point(field_get:blocks.BasicBlock.instructions)
  return instructions_.Get(index);
}
inline ::blocks::Instruction* BasicBlock::add_instructions() {
  // @@protoc_insertion_point(field_add:blocks.BasicBlock.instructions)
  return instructions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::blocks::Instruction >&
BasicBlock::instructions() const {
  // @@protoc_insertion_point(field_list:blocks.BasicBlock.instructions)
  return instructions_;
}

// optional uint32 size = 5 [default = 0];
inline bool BasicBlock::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicBlock::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicBlock::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicBlock::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 BasicBlock::size() const {
  // @@protoc_insertion_point(field_get:blocks.BasicBlock.size)
  return size_;
}
inline void BasicBlock::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:blocks.BasicBlock.size)
}

// optional uint32 padding = 6 [default = 0];
inline bool BasicBlock::has_padding() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicBlock::set_has_padding() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicBlock::clear_has_padding() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicBlock::clear_padding() {
  padding_ = 0u;
  clear_has_padding();
}
inline ::google::protobuf::uint32 BasicBlock::padding() const {
  // @@protoc_insertion_point(field_get:blocks.BasicBlock.padding)
  return padding_;
}
inline void BasicBlock::set_padding(::google::protobuf::uint32 value) {
  set_has_padding();
  padding_ = value;
  // @@protoc_insertion_point(field_set:blocks.BasicBlock.padding)
}

// optional uint32 type = 7 [default = 0];
inline bool BasicBlock::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicBlock::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicBlock::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicBlock::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BasicBlock::type() const {
  // @@protoc_insertion_point(field_get:blocks.BasicBlock.type)
  return type_;
}
inline void BasicBlock::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:blocks.BasicBlock.type)
}

// optional bool terminate = 8 [default = false];
inline bool BasicBlock::has_terminate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicBlock::set_has_terminate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicBlock::clear_has_terminate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicBlock::clear_terminate() {
  terminate_ = false;
  clear_has_terminate();
}
inline bool BasicBlock::terminate() const {
  // @@protoc_insertion_point(field_get:blocks.BasicBlock.terminate)
  return terminate_;
}
inline void BasicBlock::set_terminate(bool value) {
  set_has_terminate();
  terminate_ = value;
  // @@protoc_insertion_point(field_set:blocks.BasicBlock.terminate)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace blocks

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_blocks_2eproto
