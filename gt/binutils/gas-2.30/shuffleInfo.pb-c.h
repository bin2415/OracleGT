/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: shuffleInfo.proto */

#ifndef PROTOBUF_C_shuffleInfo_2eproto__INCLUDED
#define PROTOBUF_C_shuffleInfo_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct ShuffleInfo__ReorderInfo ShuffleInfo__ReorderInfo;
typedef struct ShuffleInfo__ReorderInfo__BinaryInfo ShuffleInfo__ReorderInfo__BinaryInfo;
typedef struct ShuffleInfo__ReorderInfo__LayoutInfo ShuffleInfo__ReorderInfo__LayoutInfo;
typedef struct ShuffleInfo__ReorderInfo__FixupInfo ShuffleInfo__ReorderInfo__FixupInfo;
typedef struct ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple;
typedef struct ShuffleInfo__ReorderInfo__SourceInfo ShuffleInfo__ReorderInfo__SourceInfo;


/* --- enums --- */


/* --- messages --- */

/*
 * Binary info from ld or ld.gold; reordering range and main offset
 */
struct  ShuffleInfo__ReorderInfo__BinaryInfo
{
  ProtobufCMessage base;
  /*
   * PLACEHOLDER FOR LINKER
   */
  protobuf_c_boolean has_rand_obj_offset;
  uint32_t rand_obj_offset;
  /*
   * PLACEHOLDER FOR LINKER
   */
  protobuf_c_boolean has_main_addr_offset;
  uint32_t main_addr_offset;
  /*
   * Verification purpose
   */
  protobuf_c_boolean has_obj_sz;
  uint32_t obj_sz;
  /*
   * See the SourceInfo message
   */
  protobuf_c_boolean has_src_type;
  uint32_t src_type;
};
#define SHUFFLE_INFO__REORDER_INFO__BINARY_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__binary_info__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


/*
 * Code layout Info (.text) from LLVM
 * Embeded info ([#func|#fixup]/obj, [#bbk|#fixup]/func, objSz/ea, funcSz/ea)
 */
struct  ShuffleInfo__ReorderInfo__LayoutInfo
{
  ProtobufCMessage base;
  /*
   * UPDATE AT LINKTIME WITH OBJ ALIGNMENTs
   */
  protobuf_c_boolean has_bb_size;
  uint32_t bb_size;
  /*
   * All alignments between fn/bbl are included here
   */
  /*
   * Represents the end of [OBJ|FUN|BBL]
   */
  protobuf_c_boolean has_type;
  uint32_t type;
  protobuf_c_boolean has_num_fixups;
  uint32_t num_fixups;
  protobuf_c_boolean has_bb_fallthrough;
  protobuf_c_boolean bb_fallthrough;
  /*
   * section identifier for c++ mutiple sections
   */
  char *section_name;
  /*
   * update at linking when combining sections
   */
  protobuf_c_boolean has_offset;
  uint32_t offset;
  protobuf_c_boolean has_padding_size;
  uint32_t padding_size;
  /*
   * assemble type: 0(normal basic block type), 1(contains inline assemble code)
   */
  protobuf_c_boolean has_assemble_type;
  uint32_t assemble_type;
};
#define SHUFFLE_INFO__REORDER_INFO__LAYOUT_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__layout_info__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0, 0, 0u }


struct  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple
{
  ProtobufCMessage base;
  /*
   * UPDATE AT LINKTIME WHEN COMBINING SECTIONS
   */
  uint32_t offset;
  uint32_t deref_sz;
  protobuf_c_boolean is_rela;
  /*
   * c2c, c2d, d2c, d2d = (0-3)
   */
  protobuf_c_boolean has_type;
  uint32_t type;
  /*
   * section identifier for c++ mutiple sections
   */
  char *section_name;
  /*
   * fixup has a jump table (.rodata) for pic/pie use
   */
  /*
   * number of the jump table entries
   */
  protobuf_c_boolean has_num_jt_entries;
  uint32_t num_jt_entries;
  /*
   * size of each jump table entry in byte
   */
  protobuf_c_boolean has_jt_entry_sz;
  uint32_t jt_entry_sz;
};
#define SHUFFLE_INFO__REORDER_INFO__FIXUP_INFO__FIXUP_TUPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__fixup_info__fixup_tuple__descriptor) \
    , 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0 }


/*
 * Fixup info in ELF from LLVM
 */
struct  ShuffleInfo__ReorderInfo__FixupInfo
{
  ProtobufCMessage base;
  size_t n_text;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **text;
  size_t n_rodata;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **rodata;
  size_t n_data;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **data;
  size_t n_datarel;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **datarel;
  size_t n_initarray;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **initarray;
};
#define SHUFFLE_INFO__REORDER_INFO__FIXUP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__fixup_info__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/*
 * Source info [generalSource(=0) | hasInlineAssembly(=1) | standaloneAssembly(=2)]
 */
struct  ShuffleInfo__ReorderInfo__SourceInfo
{
  ProtobufCMessage base;
  /*
   * the src_type placeholder for linker
   */
  size_t n_src_type;
  uint32_t *src_type;
};
#define SHUFFLE_INFO__REORDER_INFO__SOURCE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__source_info__descriptor) \
    , 0,NULL }


struct  ShuffleInfo__ReorderInfo
{
  ProtobufCMessage base;
  ShuffleInfo__ReorderInfo__BinaryInfo *bin;
  size_t n_layout;
  ShuffleInfo__ReorderInfo__LayoutInfo **layout;
  size_t n_fixup;
  ShuffleInfo__ReorderInfo__FixupInfo **fixup;
  ShuffleInfo__ReorderInfo__SourceInfo *source;
};
#define SHUFFLE_INFO__REORDER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__descriptor) \
    , NULL, 0,NULL, 0,NULL, NULL }


/* ShuffleInfo__ReorderInfo__BinaryInfo methods */
void   shuffle_info__reorder_info__binary_info__init
                     (ShuffleInfo__ReorderInfo__BinaryInfo         *message);
/* ShuffleInfo__ReorderInfo__LayoutInfo methods */
void   shuffle_info__reorder_info__layout_info__init
                     (ShuffleInfo__ReorderInfo__LayoutInfo         *message);
/* ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple methods */
void   shuffle_info__reorder_info__fixup_info__fixup_tuple__init
                     (ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple         *message);
/* ShuffleInfo__ReorderInfo__FixupInfo methods */
void   shuffle_info__reorder_info__fixup_info__init
                     (ShuffleInfo__ReorderInfo__FixupInfo         *message);
/* ShuffleInfo__ReorderInfo__SourceInfo methods */
void   shuffle_info__reorder_info__source_info__init
                     (ShuffleInfo__ReorderInfo__SourceInfo         *message);
/* ShuffleInfo__ReorderInfo methods */
void   shuffle_info__reorder_info__init
                     (ShuffleInfo__ReorderInfo         *message);
size_t shuffle_info__reorder_info__get_packed_size
                     (const ShuffleInfo__ReorderInfo   *message);
size_t shuffle_info__reorder_info__pack
                     (const ShuffleInfo__ReorderInfo   *message,
                      uint8_t             *out);
size_t shuffle_info__reorder_info__pack_to_buffer
                     (const ShuffleInfo__ReorderInfo   *message,
                      ProtobufCBuffer     *buffer);
ShuffleInfo__ReorderInfo *
       shuffle_info__reorder_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   shuffle_info__reorder_info__free_unpacked
                     (ShuffleInfo__ReorderInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ShuffleInfo__ReorderInfo__BinaryInfo_Closure)
                 (const ShuffleInfo__ReorderInfo__BinaryInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo__LayoutInfo_Closure)
                 (const ShuffleInfo__ReorderInfo__LayoutInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple_Closure)
                 (const ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo__FixupInfo_Closure)
                 (const ShuffleInfo__ReorderInfo__FixupInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo__SourceInfo_Closure)
                 (const ShuffleInfo__ReorderInfo__SourceInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo_Closure)
                 (const ShuffleInfo__ReorderInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__binary_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__layout_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__fixup_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__fixup_info__fixup_tuple__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__source_info__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_shuffleInfo_2eproto__INCLUDED */
