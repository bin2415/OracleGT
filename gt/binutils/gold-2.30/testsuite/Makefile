# Makefile.in generated by automake 1.11.6 from Makefile.am.
# testsuite/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Process this file with automake to generate Makefile.in

# As far as I can tell automake testing support assumes that the build
# system and the host system are the same.  So these tests will not
# work when building with a cross-compiler.

am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/gold
pkgincludedir = $(includedir)/gold
pkglibdir = $(libdir)/gold
pkglibexecdir = $(libexecdir)/gold
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = armv7l-unknown-linux-gnueabihf
host_triplet = armv7l-unknown-linux-gnueabihf
target_triplet = armv7l-unknown-linux-gnueabihf
check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8) $(am__EXEEXT_9) \
	$(am__EXEEXT_10) $(am__EXEEXT_11) $(am__EXEEXT_12) \
	$(am__EXEEXT_13) $(am__EXEEXT_14) $(am__EXEEXT_15) \
	$(am__EXEEXT_16) $(am__EXEEXT_17) $(am__EXEEXT_18) \
	$(am__EXEEXT_19) $(am__EXEEXT_20) $(am__EXEEXT_21) \
	$(am__EXEEXT_22) $(am__EXEEXT_23) $(am__EXEEXT_24) \
	$(am__EXEEXT_25) $(am__EXEEXT_26) $(am__EXEEXT_27) \
	$(am__EXEEXT_28) $(am__EXEEXT_29) $(am__EXEEXT_30) \
	$(am__EXEEXT_31) $(am__EXEEXT_32) $(am__EXEEXT_33) \
	$(am__EXEEXT_34) $(am__EXEEXT_35) $(am__EXEEXT_36) \
	$(am__EXEEXT_37) $(am__EXEEXT_38) $(am__EXEEXT_39) \
	$(am__EXEEXT_40) $(am__EXEEXT_41)
am__append_1 = object_unittest \
	binary_unittest leb128_unittest \
	overflow_unittest

# ---------------------------------------------------------------------
# These tests test the output of gold (end-to-end tests).  In
# particular, they make sure that gold can link "difficult" object
# files, and the resulting object files run correctly.  These can only
# run if we've built ld-new for the native architecture (that is,
# we're not cross-compiling it), since we run ld-new as part of these
# tests.  We use the gcc-specific flag '-B' to use our linker instead
# of the default linker, which is why we only run our tests under gcc.

# Test empty command line error conditions.
am__append_2 =  \
	empty_command_line_test.sh \
	incremental_test.sh \
	gc_comdat_test.sh gc_tls_test.sh \
	gc_orphan_section_test.sh \
	pr14265.sh pr20717.sh \
	gc_dynamic_list_test.sh \
	icf_test.sh \
	icf_keep_unique_test.sh \
	icf_safe_test.sh \
	icf_safe_pie_test.sh \
	icf_safe_so_test.sh \
	final_layout.sh \
	text_section_grouping.sh \
	section_sorting_name.sh \
	text_unlikely_segment.sh \
	icf_preemptible_functions_test.sh \
	icf_string_merge_test.sh \
	icf_sht_rel_addend_test.sh \
	merge_string_literals.sh \
	eh_test_2.sh two_file_shared.sh \
	weak_plt.sh
am__append_3 = incremental_test.stdout \
	gc_comdat_test.stdout \
	gc_tls_test.stdout \
	gc_orphan_section_test.stdout \
	pr14265.stdout pr20717.stdout \
	gc_dynamic_list_test.stdout \
	icf_test.map \
	icf_keep_unique_test.stdout \
	icf_safe_test_1.stdout \
	icf_safe_test_2.stdout \
	icf_safe_test.map \
	icf_safe_pie_test_1.stdout \
	icf_safe_pie_test_2.stdout \
	icf_safe_pie_test.map \
	icf_safe_so_test_1.stdout \
	icf_safe_so_test_2.stdout \
	icf_safe_so_test.map \
	final_layout.stdout \
	text_section_grouping.stdout \
	text_section_no_grouping.stdout \
	section_sorting_name.stdout \
	text_unlikely_segment_readelf.stdout \
	icf_preemptible_functions_test.stdout \
	icf_string_merge_test.stdout \
	icf_sht_rel_addend_test.stdout \
	merge_string_literals.stdout \
	eh_test_2.sects \
	two_file_shared.dbg \
	weak_plt_shared.so
am__append_4 = incremental_test \
	incremental_test.cmdline \
	gc_comdat_test gc_tls_test \
	gc_orphan_section_test pr14265 \
	pr20717 gc_dynamic_list_test \
	icf_test icf_test.map \
	icf_keep_unique_test \
	icf_safe_test icf_safe_test.map \
	icf_safe_pie_test \
	icf_safe_pie_test.map \
	icf_safe_so_test \
	icf_safe_so_test.map \
	final_layout \
	final_layout_sequence.txt \
	final_layout_script.lds \
	text_section_grouping \
	text_section_no_grouping \
	section_sorting_name \
	text_unlikely_segment \
	icf_virtual_function_folding_test \
	icf_virtual_function_folding_test.map \
	icf_preemptible_functions_test \
	icf_string_merge_test \
	icf_sht_rel_addend_test \
	merge_string_literals eh_test_2 \
	eh_test_2.sects \
	two_file_shared.dbg \
	alt/weak_undef_lib.so \
	libweak_undef_2.a
am__append_5 = icf_virtual_function_folding_test \
	large_symbol_alignment \
	basic_test basic_pic_test \
	eh_test
#large_symbol_alignment_DEPENDENCIES =
#large_symbol_alignment_DEPENDENCIES =
am__append_6 = basic_static_test \
	basic_static_pic_test
am__append_7 = basic_pie_test \
	constructor_test
#constructor_test_DEPENDENCIES =
#constructor_test_DEPENDENCIES =
am__append_8 = constructor_static_test
am__append_9 = two_file_test \
	two_file_pic_test
#two_file_test_DEPENDENCIES =
#two_file_test_DEPENDENCIES =
am__append_10 = two_file_static_test
am__append_11 = two_file_shared_1_test \
	two_file_shared_2_test \
	two_file_shared_1_pic_2_test \
	two_file_shared_2_pic_1_test \
	two_file_same_shared_test \
	two_file_separate_shared_12_test \
	two_file_separate_shared_21_test \
	two_file_relocatable_test \
	two_file_pie_test \
	pie_copyrelocs_test \
	weak_unresolved_symbols_test

# The nonpic tests will fail on platforms which can not put non-PIC
# code into shared libraries, so we just don't run them in that case.
am__append_12 = two_file_shared_1_nonpic_test \
	two_file_shared_2_nonpic_test \
	two_file_same_shared_nonpic_test \
	two_file_separate_shared_12_nonpic_test \
	two_file_separate_shared_21_nonpic_test \
	two_file_mixed_shared_test \
	two_file_mixed_2_shared_test \
	two_file_mixed_pie_test
am__append_13 = two_file_strip_test \
	two_file_same_shared_strip_test \
	common_test_1 common_test_2 \
	exception_test \
	exception_shared_1_test \
	exception_shared_2_test \
	exception_same_shared_test \
	exception_separate_shared_12_test \
	exception_separate_shared_21_test
#common_test_1_DEPENDENCIES =
#common_test_1_DEPENDENCIES =
#exception_test_DEPENDENCIES =
#exception_test_DEPENDENCIES =
am__append_14 = exception_static_test
am__append_15 = weak_test \
	weak_undef_test \
	weak_undef_test_2
#weak_test_DEPENDENCIES =
#weak_test_DEPENDENCIES =
am__append_16 = weak_undef_nonpic_test
am__append_17 = alt/weak_undef_lib_nonpic.so
am__append_18 = weak_alias_test weak_plt \
	copy_test copy_test_relro
am__append_19 = copy_test_protected.sh
am__append_20 = copy_test_protected.err
am__append_21 = copy_test_protected.err
am__append_22 = tls_test \
	tls_pic_test \
	tls_pie_test \
	tls_pie_pic_test \
	tls_shared_test \
	tls_shared_ie_test \
	tls_shared_gd_to_ie_test
am__append_23 = tls_pie_test.sh
am__append_24 = tls_pie_test.stdout
am__append_25 = tls_shared_gnu2_gd_to_ie_test
am__append_26 = tls_shared_gnu2_test
am__append_27 = tls_static_test \
	tls_static_pic_test
am__append_28 = tls_shared_nonpic_test
#am__append_29 = x86_64_mov_to_lea.sh \
#	x86_64_indirect_call_to_direct.sh \
#	x86_64_overflow_pc32.sh \
#	x32_overflow_pc32.sh
#am__append_30 = x86_64_mov_to_lea1.stdout \
#	x86_64_mov_to_lea2.stdout \
#	x86_64_mov_to_lea3.stdout \
#	x86_64_mov_to_lea4.stdout \
#	x86_64_mov_to_lea5.stdout \
#	x86_64_mov_to_lea6.stdout \
#	x86_64_mov_to_lea7.stdout \
#	x86_64_mov_to_lea8.stdout \
#	x86_64_mov_to_lea9.stdout \
#	x86_64_mov_to_lea10.stdout \
#	x86_64_mov_to_lea11.stdout \
#	x86_64_mov_to_lea12.stdout \
#	x86_64_mov_to_lea13.stdout \
#	x86_64_mov_to_lea14.stdout \
#	x86_64_indirect_call_to_direct1.stdout \
#	x86_64_indirect_jump_to_direct1.stdout \
#	x86_64_overflow_pc32.err \
#	x32_overflow_pc32.err
#am__append_31 = x86_64_mov_to_lea1 \
#	x86_64_mov_to_lea2 \
#	x86_64_mov_to_lea3 \
#	x86_64_mov_to_lea4 \
#	x86_64_mov_to_lea5 \
#	x86_64_mov_to_lea6 \
#	x86_64_mov_to_lea7 \
#	x86_64_mov_to_lea8 \
#	x86_64_mov_to_lea9 \
#	x86_64_mov_to_lea10 \
#	x86_64_mov_to_lea11 \
#	x86_64_mov_to_lea12 \
#	x86_64_mov_to_lea13 \
#	x86_64_mov_to_lea14 \
#	x86_64_indirect_call_to_direct1 \
#	x86_64_indirect_jump_to_direct1 \
#	x86_64_overflow_pc32.err \
#	x32_overflow_pc32.err
#am__append_32 = pr17704a_test
#am__append_33 = pr20216a_test \
#	pr20216b_test \
#	pr20216c_test \
#	pr20216d_test \
#	pr20216e_test
#am__append_34 = pr20216a.so pr20216b.so
#am__append_35 = i386_mov_to_lea.sh
#am__append_36 = i386_mov_to_lea1.stdout  i386_mov_to_lea2.stdout \
#	i386_mov_to_lea3.stdout  i386_mov_to_lea4.stdout \
#	i386_mov_to_lea5.stdout i386_mov_to_lea6.stdout \
#	i386_mov_to_lea7.stdout i386_mov_to_lea8.stdout

#am__append_37 = i386_mov_to_lea1 \
#	i386_mov_to_lea2 \
#	i386_mov_to_lea3 \
#	i386_mov_to_lea4 \
#	i386_mov_to_lea5 \
#	i386_mov_to_lea6 \
#	i386_mov_to_lea7 \
#	i386_mov_to_lea8 \
#	pr20308a.so \
#	pr20308b.so
#am__append_38 = pr20308a_test \
#	pr20308b_test \
#	pr20308c_test \
#	pr20308d_test \
#	pr20308e_test

# Test -o when emitting to a special file (such as something in /dev).

# Test --compress-debug-sections.

# Test --compress-debug-sections with --build-id=tree.

# The specialfile output has a tricky case when we also compress debug
# sections, because it requires output-file resizing.

# Test -TText and -Tdata.

# Test symbol versioning.

# Test scripts with a relocatable link.
# The -g option is necessary to trigger a bug where a section
# declared in a script file is assigned a non-zero starting address.

# Test difference between "*(a b)" and "*(a) *(b)" in input section spec.
am__append_39 = many_sections_test \
	many_sections_r_test initpri1 \
	initpri2 initpri3a \
	flagstest_o_specialfile \
	flagstest_compress_debug_sections_none \
	flagstest_compress_debug_sections \
	flagstest_compress_debug_sections_and_build_id_tree \
	flagstest_compress_debug_sections_gnu \
	flagstest_compress_debug_sections_gabi \
	flagstest_o_specialfile_and_compress_debug_sections \
	flagstest_o_ttext_1 ver_test \
	ver_test_2 ver_test_6 ver_test_8 \
	ver_test_9 ver_test_11 \
	ver_test_12 protected_1 \
	protected_2 relro_test \
	relro_now_test relro_strip_test \
	relro_script_test script_test_1 \
	script_test_2 justsyms \
	justsyms_exec binary_test \
	script_test_3 \
	tls_phdrs_script_test \
	tls_script_test script_test_11 \
	script_test_12 script_test_12i \
	dynamic_list_2 \
	thin_archive_test_1 \
	thin_archive_test_2
#many_sections_test_DEPENDENCIES =
#many_sections_test_DEPENDENCIES =
am__append_40 = many_sections_define.h \
	many_sections_check.h
am__append_41 = many_sections_define.h \
	many_sections_check.h \
	file_in_many_sections \
	debug_msg.err \
	missing_key_func.err \
	debug_msg_cdebug.err \
	debug_msg_cdebug_gabi.err \
	debug_msg_so.err \
	debug_msg_ndebug.err \
	undef_symbol.err \
	flagstest_compress_debug_sections.check \
	flagstest_compress_debug_sections.cmp \
	flagstest_compress_debug_sections_gnu.check \
	flagstest_compress_debug_sections_gnu.cmp \
	flagstest_compress_debug_sections_gabi.cmp \
	flagstest_compress_debug_sections_gabi.check \
	pr18689a.o pr18689b.o \
	flagstest_o_ttext_2 \
	ver_test_11.a protected_3.err \
	justsyms_lib binary.txt \
	ver_matching_test.stdout \
	script_test_3.stdout \
	script_test_4 script_test_5 \
	script_test_6 script_test_7 \
	script_test_8 script_test_9 \
	script_test_13 script_test_14 \
	script_test_15a script_test_15b \
	script_test_15c dynamic_list \
	dynamic_list.stdout libthin1.a \
	libthin3.a libthinall.a \
	alt/thin_archive_test_2.o \
	alt/thin_archive_test_4.o \
	alt/libthin2.a alt/libthin4.a

# This test fails on targets not using .ctors and .dtors sections (e.g. ARM
# EABI). Given that gcc is moving towards using .init_array in all cases,
# this test is commented out.  A better fix would be checking whether gcc
# uses .ctors or .init_array sections in configure.

# check_PROGRAMS += initpri3b
# initpri3b_SOURCES = initpri3.c
# initpri3b_DEPENDENCIES = gcctestdir/ld
# initpri3b_LDFLAGS = -Bgcctestdir/ -Wl,--no-ctors-in-init-array
# initpri3b_LDADD =

# Test --detect-odr-violations

# Test error message when a vtable is undefined.

# Similar to --detect-odr-violations: check for undefined symbols in .so's

# Test for ordering internally created sections with a linker script.

# Test for SORT_BY_INIT_PRIORITY.

# Test BSS section placement at end of segment.

# Test BSS section placement in middle of segment.

# Test orphan BSS section placement.

# Test --dynamic-list, --dynamic-list-data, --dynamic-list-cpp-new,
# and --dynamic-list-cpp-typeinfo
am__append_42 =  \
	file_in_many_sections_test.sh \
	debug_msg.sh missing_key_func.sh \
	undef_symbol.sh pr18689.sh \
	ver_test_1.sh ver_test_2.sh \
	ver_test_4.sh ver_test_5.sh \
	ver_test_7.sh ver_test_8.sh \
	ver_test_10.sh ver_test_13.sh \
	relro_test.sh \
	ver_matching_test.sh \
	script_test_3.sh \
	script_test_4.sh \
	script_test_5.sh \
	script_test_6.sh \
	script_test_7.sh \
	script_test_8.sh \
	script_test_9.sh \
	script_test_13.sh \
	script_test_14.sh \
	script_test_15a.sh \
	script_test_15b.sh \
	script_test_15c.sh \
	dynamic_list.sh

# Create the data files that debug_msg.sh analyzes.

# Check that --detect-odr-violations works with compressed debug sections.

# See if we can also detect problems when we're linking .so's, not .o's.

# We also want to make sure we do something reasonable when there's no
# debug info available.  For the best test, we use .so's.

# This version won't be runnable, because there is no way to put the
# PT_PHDR segment at file offset 0.  We just make sure that we can
# build it without error.
am__append_43 =  \
	file_in_many_sections.stdout \
	debug_msg.err \
	missing_key_func.err \
	debug_msg_cdebug.err \
	debug_msg_cdebug_gabi.err \
	debug_msg_so.err \
	debug_msg_ndebug.err \
	undef_symbol.err \
	flagstest_compress_debug_sections_none.stdout \
	flagstest_compress_debug_sections.stdout \
	flagstest_compress_debug_sections.cmp \
	flagstest_compress_debug_sections.check \
	flagstest_compress_debug_sections_gnu.stdout \
	flagstest_compress_debug_sections_gnu.cmp \
	flagstest_compress_debug_sections_gnu.check \
	flagstest_compress_debug_sections_gabi.stdout \
	flagstest_compress_debug_sections_gabi.cmp \
	flagstest_compress_debug_sections_gabi.check \
	pr18689.stdout \
	flagstest_o_ttext_2 \
	ver_test_1.syms ver_test_2.syms \
	ver_test_4.syms ver_test_5.syms \
	ver_test_7.syms \
	ver_test_8_2.so.syms \
	ver_test_10.syms \
	ver_test_13.syms protected_3.err \
	relro_test.stdout \
	ver_matching_test.stdout \
	script_test_3.stdout \
	script_test_4.stdout \
	script_test_5.stdout \
	script_test_6.stdout \
	script_test_7.stdout \
	script_test_8.stdout \
	script_test_9.stdout \
	script_test_13.stdout \
	script_test_14.stdout \
	script_test_15a.stdout \
	script_test_15b.stdout \
	script_test_15c.stdout \
	dynamic_list.stdout
#initpri1_DEPENDENCIES =
#initpri1_DEPENDENCIES =
#initpri2_DEPENDENCIES =
#initpri2_DEPENDENCIES =
#initpri3a_DEPENDENCIES =
#initpri3a_DEPENDENCIES =
#script_test_1_DEPENDENCIES =
#script_test_1_DEPENDENCIES =
#script_test_2_DEPENDENCIES =
#script_test_2_DEPENDENCIES =
#justsyms_DEPENDENCIES =
#justsyms_DEPENDENCIES =
#justsyms_exec_DEPENDENCIES =
#justsyms_exec_DEPENDENCIES =
#binary_test_DEPENDENCIES =
#binary_test_DEPENDENCIES =
#thin_archive_test_2_DEPENDENCIES =
#thin_archive_test_2_DEPENDENCIES =

# Test plugins with -r.
am__append_44 =  \
	plugin_test_1 \
	plugin_test_2 \
	plugin_test_3 \
	plugin_test_4 \
	plugin_test_5 \
	plugin_test_6 \
	plugin_test_7 \
	plugin_test_8 \
	plugin_test_10 \
	plugin_test_11 \
	plugin_test_12 \
	plugin_test_start_lib
am__append_45 =  \
	plugin_test_1.sh \
	plugin_test_2.sh \
	plugin_test_3.sh \
	plugin_test_4.sh \
	plugin_test_6.sh \
	plugin_test_7.sh \
	plugin_test_10.sh \
	plugin_test_11.sh \
	plugin_test_12.sh \
	plugin_test_start_lib.sh

# Test that symbols known in the IR file but not in the replacement file
# produce an unresolved symbol error.

# As above, but check COMDAT case, where a non-IR file contains a duplicate
# of a COMDAT group in an IR file.
am__append_46 =  \
	plugin_test_1.err \
	plugin_test_2.err \
	plugin_test_3.err \
	plugin_test_4.err \
	plugin_test_6.err \
	plugin_test_7.err \
	plugin_test_7.o.syms \
	plugin_test_9.err \
	plugin_test_9b.err \
	plugin_test_10.sections \
	plugin_test_11.err \
	plugin_test_12.err \
	plugin_test_start_lib.err
# Make a copy of two_file_test_1.o, which does not define the symbol _Z4t16av.
am__append_47 =  \
	plugin_test_1.err \
	plugin_test_2.err \
	plugin_test_3.err \
	plugin_test_4.a \
	plugin_test_4.err \
	plugin_test_6.err \
	plugin_test_7.err \
	plugin_test_9.err \
	two_file_test_1c.o \
	plugin_test_9b.err \
	plugin_test_10.sections \
	plugin_test_11.err \
	plugin_test_thin.a \
	plugin_test_12.err \
	plugin_test_start_lib.err
am__append_48 = plugin_test_tls
am__append_49 = plugin_test_tls.sh
am__append_50 = plugin_test_tls.err
am__append_51 = plugin_test_tls.err
am__append_52 = unused.c \
	plugin_final_layout \
	plugin_layout_new_file \
	plugin_layout_with_alignment
am__append_53 = plugin_final_layout.sh \
	plugin_layout_with_alignment.sh

# Uses the plugin_final_layout.sh script above to avoid duplication
am__append_54 = plugin_final_layout.stdout \
	plugin_final_layout_readelf.stdout \
	plugin_layout_new_file.stdout \
	plugin_layout_new_file_readelf.stdout \
	plugin_layout_with_alignment.stdout
am__append_55 = exclude_libs_test \
	local_labels_test \
	discard_locals_test

# Test that hidden and internal symbols in the main program cannot be
# referenced by a shared library.

# Test -retain-symbols-file.

# Test that no .gnu.version sections are created when
# symbol versioning is not used.
am__append_56 = exclude_libs_test.sh \
	discard_locals_test.sh \
	hidden_test.sh \
	retain_symbols_file_test.sh \
	no_version_test.sh
am__append_57 = exclude_libs_test.syms \
	discard_locals_test.syms \
	discard_locals_relocatable_test1.syms \
	discard_locals_relocatable_test2.syms \
	hidden_test.err \
	retain_symbols_file_test.stdout \
	no_version_test.stdout
am__append_58 = exclude_libs_test.syms \
	libexclude_libs_test_1.a \
	libexclude_libs_test_2.a \
	alt/libexclude_libs_test_3.a \
	discard_locals_test.syms \
	discard_locals_relocatable_test1.syms \
	discard_locals_relocatable_test2.syms \
	discard_locals_relocatable_test1.out \
	discard_locals_relocatable_test2.out \
	hidden_test hidden_test.err \
	hidden_test.syms \
	retain_symbols_file_test \
	retain_symbols_file_test.in \
	retain_symbols_file_test.stdout \
	searched_file_test \
	searched_file_test_lib.o \
	alt/searched_file_test_lib.a \
	libno_version_test.so \
	no_version_test.stdout \
	strong_ref_weak_def_1.so \
	strong_ref_weak_def_2.so \
	strong_ref_weak_def.stdout \
	dyn_weak_ref_1.so \
	dyn_weak_ref_2.so \
	dyn_weak_ref.stdout \
	libstart_lib_test.a \
	memory_test.stdout memory_test \
	memory_test.o \
	memory_test_inc_1.t \
	memory_test_inc_2.t \
	memory_test_inc_3.t \
	memory_test_2
#am__append_59 = large
#large_DEPENDENCIES =
large_DEPENDENCIES =
#large_DEPENDENCIES =

# Test that if the output file already exists and is empty,
# it will get execute permission.

# Check -l:foo.a
am__append_60 = permission_test \
	searched_file_test
#searched_file_test_DEPENDENCIES =
#searched_file_test_DEPENDENCIES =
am__append_61 = ifuncmain1static \
	ifuncmain1picstatic
am__append_62 = ifuncmod1.sh
am__append_63 = ifuncmod1.so.stderr
am__append_64 = ifuncmain1 \
	ifuncmain1pic \
	ifuncmain1vis \
	ifuncmain1vispic \
	ifuncmain1staticpic \
	ifuncmain1pie \
	ifuncmain1vispie \
	ifuncmain1staticpie
am__append_65 = ifuncmain2static \
	ifuncmain2picstatic
#ifuncmain2static_DEPENDENCIES =
#ifuncmain2static_DEPENDENCIES =
#ifuncmain2static_DEPENDENCIES =
#ifuncmain2static_DEPENDENCIES =
#ifuncmain2static_DEPENDENCIES =
am__append_66 = ifuncmain2 \
	ifuncmain2pic \
	ifuncmain3
#ifuncmain2_DEPENDENCIES =
#ifuncmain2_DEPENDENCIES =
#ifuncmain2_DEPENDENCIES =
#ifuncmain3_DEPENDENCIES =
#ifuncmain3_DEPENDENCIES =
#ifuncmain3_DEPENDENCIES =
am__append_67 = ifuncmain4static \
	ifuncmain4picstatic
#ifuncmain4static_DEPENDENCIES =
#ifuncmain4static_DEPENDENCIES =
#ifuncmain4static_DEPENDENCIES =
#ifuncmain4static_DEPENDENCIES =
#ifuncmain4static_DEPENDENCIES =
am__append_68 = ifuncmain4
#ifuncmain4_DEPENDENCIES =
#ifuncmain4_DEPENDENCIES =
#ifuncmain4_DEPENDENCIES =
am__append_69 = ifuncmain5static \
	ifuncmain5picstatic
am__append_70 = ifuncmain5 \
	ifuncmain5pic \
	ifuncmain5staticpic \
	ifuncmain5pie \
	ifuncmain6pie
am__append_71 = ifuncmain7static \
	ifuncmain7picstatic
#ifuncmain7static_DEPENDENCIES =
#ifuncmain7static_DEPENDENCIES =
#ifuncmain7static_DEPENDENCIES =
#ifuncmain7static_DEPENDENCIES =
#ifuncmain7static_DEPENDENCIES =
am__append_72 = ifuncmain7 \
	ifuncmain7pic \
	ifuncmain7pie \
	ifuncvar
#ifuncmain7_DEPENDENCIES =
#ifuncmain7_DEPENDENCIES =
#ifuncmain7_DEPENDENCIES =

# Test that strong reference to a weak symbol in a DSO remains strong.

# Test that a strong weak reference remains strong if there is another
# weak reference in a DSO.

# Test that MEMORY region support works.
am__append_73 = strong_ref_weak_def.sh \
	dyn_weak_ref.sh memory_test.sh

# Test INCLUDE directives in linker scripts.
# The binary isn't runnable, so we just check that we can build it without errors.
am__append_74 =  \
	strong_ref_weak_def.stdout \
	dyn_weak_ref.stdout \
	memory_test.stdout memory_test_2

# Test that --start-lib and --end-lib function correctly.

# Test that __ehdr_start is defined correctly.

# Test that __ehdr_start is defined correctly with a weak reference.

# Test that __ehdr_start is defined correctly when used with a linker script.

# Test that __ehdr_start is not overridden when supplied by the user.

# Test that the -d option (force common allocation) works correctly.
am__append_75 = start_lib_test \
	ehdr_start_test_1 \
	ehdr_start_test_2 \
	ehdr_start_test_3 \
	ehdr_start_test_5 pr20976

# Test that --gdb-index functions correctly without gcc-generated pubnames.

# Test that --gdb-index functions correctly with compressed debug sections.

# Another simple C test (DW_AT_high_pc encoding) for --gdb-index.

# Test that --gdb-index functions correctly with gcc-generated pubnames.
am__append_76 = gdb_index_test_1.sh \
	gdb_index_test_2.sh \
	gdb_index_test_2_gabi.sh \
	gdb_index_test_3.sh \
	gdb_index_test_4.sh
am__append_77 = gdb_index_test_1.stdout \
	gdb_index_test_2.stdout \
	gdb_index_test_2_gabi.stdout \
	gdb_index_test_3.stdout \
	gdb_index_test_4.stdout
am__append_78 = gdb_index_test_1.stdout \
	gdb_index_test_1 \
	gdb_index_test_2.stdout \
	gdb_index_test_2 \
	gdb_index_test_2_gabi \
	gdb_index_test_2.stdout \
	gdb_index_test_2 \
	gdb_index_test_3.stdout \
	gdb_index_test_3 \
	gdb_index_test_4.stdout \
	gdb_index_test_4
#ehdr_start_test_1_DEPENDENCIES =
#ehdr_start_test_1_DEPENDENCIES =
#ehdr_start_test_2_DEPENDENCIES =
#ehdr_start_test_2_DEPENDENCIES =
#ehdr_start_test_3_DEPENDENCIES =
#ehdr_start_test_3_DEPENDENCIES =

# Test that __ehdr_start is left undefined when the text segment is not
# appropriately aligned.

# Test that the --defsym option copies the symbol type and visibility.
am__append_79 = ehdr_start_test_4.sh \
	defsym_test.sh
am__append_80 = ehdr_start_test_4.syms \
	defsym_test.syms
am__append_81 = ehdr_start_test_4 \
	defsym_test defsym_test.syms
#ehdr_start_test_5_DEPENDENCIES =
#ehdr_start_test_5_DEPENDENCIES =

# Test the --incremental-unchanged flag with an archive library.
# The second link should not update the library.
#am__append_82 = incremental_test_2 \
#	incremental_test_3 \
#	incremental_test_4 \
#	incremental_test_5 \
#	incremental_test_6 \
#	incremental_copy_test \
#	incremental_common_test_1 \
#	incremental_comdat_test_1 \
#	exception_x86_64_bnd_test
#am__append_83 = two_file_test_tmp_2.o \
#	two_file_test_tmp_3.o \
#	incremental_test_4.base \
#	two_file_test_tmp_4.o \
#	two_file_test_5.a \
#	two_file_test_6.a
am__append_84 = pr22266

# These tests work with native and cross linkers.

# Test script section order.
am__append_85 = script_test_10.sh
am__append_86 = script_test_10.stdout
am__append_87 = script_test_10

# These tests work with cross linkers only.
#am__append_88 = split_i386.sh
#am__append_89 = split_i386_1.stdout split_i386_2.stdout \
#	split_i386_3.stdout split_i386_4.stdout split_i386_r.stdout

#am__append_90 = split_i386_1 split_i386_2 split_i386_3 \
#	split_i386_4 split_i386_r

#am__append_91 = split_x86_64.sh \
#	bnd_plt_1.sh \
#	bnd_ifunc_1.sh \
#	bnd_ifunc_2.sh
#am__append_92 = split_x86_64_1.stdout \
#	split_x86_64_2.stdout \
#	split_x86_64_3.stdout \
#	split_x86_64_4.stdout \
#	split_x86_64_r.stdout \
#	bnd_plt_1.stdout \
#	bnd_ifunc_1.stdout \
#	bnd_ifunc_2.stdout
#am__append_93 = split_x86_64_1 split_x86_64_2 split_x86_64_3 \
#	split_x86_64_4 split_x86_64_r

#am__append_94 = split_x32.sh
#am__append_95 = split_x32_1.stdout split_x32_2.stdout \
#	split_x32_3.stdout split_x32_4.stdout split_x32_r.stdout

#am__append_96 = split_x32_1 split_x32_2 split_x32_3 \
#	split_x32_4 split_x32_r


# ARM1176 workaround test.

# Cortex-A8 workaround test.

# Check ARM to ARM farcall veneers

# Check ARM to Thumb farcall veneers

# Check Thumb to Thumb farcall veneers

#Check ARM to ARM farcall veneers in the be8 mode addressing

#Check THUMB  to  THUMB farcall veneers in the be8 mode addressing

# Check Thumb to ARM farcall veneers

# Check handling of --target1-abs, --target1-rel and --target2 options
am__append_97 = arm_abs_global.sh \
	arm_branch_in_range.sh \
	arm_branch_out_of_range.sh \
	arm_fix_v4bx.sh \
	arm_attr_merge.sh \
	arm_fix_1176.sh \
	arm_cortex_a8.sh \
	arm_exidx_test.sh \
	pr12826.sh \
	arm_unaligned_reloc.sh \
	arm_farcall_arm_arm.sh \
	arm_farcall_arm_thumb.sh \
	arm_farcall_thumb_thumb.sh \
	arm_farcall_arm_arm_be8.sh \
	arm_farcall_thumb_thumb_be8.sh \
	arm_farcall_thumb_arm.sh \
	arm_target1_abs.sh \
	arm_target1_rel.sh \
	arm_target2_rel.sh \
	arm_target2_abs.sh \
	arm_target2_got_rel.sh

# The test demonstrates why the constructor of a target object should not access options.
am__append_98 = arm_abs_global.stdout \
	arm_bl_in_range.stdout \
	arm_bl_out_of_range.stdout \
	thumb_bl_in_range.stdout \
	thumb_bl_out_of_range.stdout \
	thumb2_bl_in_range.stdout \
	thumb2_bl_out_of_range.stdout \
	thumb_blx_in_range.stdout \
	thumb_blx_out_of_range.stdout \
	thumb2_blx_in_range.stdout \
	thumb2_blx_out_of_range.stdout \
	thumb_bl_out_of_range_local.stdout \
	arm_thm_jump11.stdout \
	arm_thm_jump8.stdout \
	arm_fix_v4bx.stdout \
	arm_fix_v4bx_interworking.stdout \
	arm_no_fix_v4bx.stdout \
	arm_attr_merge_6.stdout \
	arm_attr_merge_6r.stdout \
	arm_attr_merge_7.stdout \
	arm_fix_1176_default_v6z.stdout \
	arm_fix_1176_on_v6z.stdout \
	arm_fix_1176_off_v6z.stdout \
	arm_fix_1176_default_v5te.stdout \
	arm_fix_1176_default_v7a.stdout \
	arm_fix_1176_default_1156t2f_s.stdout \
	arm_cortex_a8_b_cond.stdout \
	arm_cortex_a8_b.stdout \
	arm_cortex_a8_bl.stdout \
	arm_cortex_a8_blx.stdout \
	arm_cortex_a8_local.stdout \
	arm_cortex_a8_local_reloc.stdout \
	arm_exidx_test.stdout \
	pr12826.stdout \
	arm_unaligned_reloc.stdout \
	arm_unaligned_reloc_r.stdout \
	arm_farcall_arm_arm.stdout \
	arm_farcall_arm_thumb.stdout \
	arm_farcall_arm_thumb_5t.stdout \
	arm_farcall_thumb_thumb.stdout \
	arm_farcall_thumb_thumb_5t.stdout \
	arm_farcall_thumb_thumb_7m.stdout \
	arm_farcall_thumb_thumb_6m.stdout \
	arm_farcall_arm_arm_be8.stdout \
	arm_farcall_thumb_thumb_be8.stdout \
	arm_farcall_thumb_arm.stdout \
	arm_farcall_thumb_arm_5t.stdout \
	arm_target1_abs.stdout \
	arm_target1_rel.stdout \
	arm_target2_rel.stdout \
	arm_target2_abs.stdout \
	arm_target2_got_rel.stdout \
	arm_target_lazy_init
am__append_99 = arm_abs_global \
	arm_bl_in_range \
	arm_bl_out_of_range \
	thumb_bl_in_range \
	thumb_bl_out_of_range \
	thumb2_bl_in_range \
	thumb2_bl_out_of_range \
	thumb_blx_in_range \
	thumb_blx_out_of_range \
	thumb2_blx_in_range \
	thumb2_blx_out_of_range \
	thumb_bl_out_of_range_local \
	arm_thm_jump11 \
	arm_thm_jump8 \
	arm_fix_v4bx \
	arm_fix_v4bx_interworking \
	arm_no_fix_v4bx \
	arm_attr_merge_6 \
	arm_attr_merge_6r \
	arm_attr_merge_7 \
	arm_fix_1176_default_v6z \
	arm_fix_1176_on_v6z \
	arm_fix_1176_off_v6z \
	arm_fix_1176_default_v5te \
	arm_fix_1176_default_v7a \
	arm_fix_1176_default_1156t2f_s \
	arm_cortex_a8_b_cond \
	arm_cortex_a8_b \
	arm_cortex_a8_bl \
	arm_cortex_a8_blx \
	arm_cortex_a8_local \
	arm_cortex_a8_local_reloc \
	arm_unaligned_reloc \
	arm_unaligned_reloc_r \
	arm_farcall_arm_arm \
	arm_farcall_arm_thumb \
	arm_farcall_arm_thumb_5t \
	arm_farcall_thumb_thumb \
	arm_farcall_thumb_thumb_5t \
	arm_farcall_thumb_thumb_7m \
	arm_farcall_thumb_thumb_6m \
	arm_farcall_arm_arm_be8 \
	arm_farcall_thumb_thumb_be8 \
	arm_farcall_thumb_arm \
	arm_farcall_thumb_arm_5t \
	arm_target1_abs \
	arm_target1_rel \
	arm_target2_rel \
	arm_target2_abs \
	arm_target2_got_rel \
	arm_target_lazy_init
#am__append_100 = aarch64_reloc_none.sh \
#	aarch64_relocs.sh \
#	pr21430.sh \
#	aarch64_tlsdesc.sh
#am__append_101 = aarch64_reloc_none.stdout \
#	aarch64_relocs.stdout \
#	pr21430.stdout \
#	aarch64_tlsdesc.stdout
#am__append_102 = aarch64_reloc_none \
#	aarch64_relocs \
#	pr21430 \
#	aarch64_tlsdesc
#am__append_103 = split_s390.sh
#am__append_104 = split_s390_z1.stdout split_s390_z2.stdout split_s390_z3.stdout \
#	split_s390_z4.stdout split_s390_n1.stdout split_s390_n2.stdout \
#	split_s390_a1.stdout split_s390_a2.stdout split_s390_z1_ns.stdout \
#	split_s390_z2_ns.stdout split_s390_z3_ns.stdout split_s390_z4_ns.stdout \
#	split_s390_n1_ns.stdout split_s390_n2_ns.stdout split_s390_r.stdout \
#	split_s390x_z1.stdout split_s390x_z2.stdout split_s390x_z3.stdout \
#	split_s390x_z4.stdout split_s390x_n1.stdout split_s390x_n2.stdout \
#	split_s390x_a1.stdout split_s390x_a2.stdout split_s390x_z1_ns.stdout \
#	split_s390x_z2_ns.stdout split_s390x_z3_ns.stdout \
#	split_s390x_z4_ns.stdout split_s390x_n1_ns.stdout \
#	split_s390x_n2_ns.stdout split_s390x_r.stdout

#am__append_105 = split_s390_z1 split_s390_z2 split_s390_z3 \
#	split_s390_z4 split_s390_n1 split_s390_n2 split_s390_a1 \
#	split_s390_a2 split_s390_z1_ns split_s390_z2_ns split_s390_z3_ns \
#	split_s390_z4_ns split_s390_n1_ns split_s390_n2_ns split_s390_r \
#	split_s390x_z1 split_s390x_z2 split_s390x_z3 split_s390x_z4 \
#	split_s390x_n1 split_s390x_n2 split_s390x_a1 split_s390x_a2 \
#	split_s390x_z1_ns split_s390x_z2_ns split_s390x_z3_ns \
#	split_s390x_z4_ns split_s390x_n1_ns split_s390x_n2_ns split_s390x_r

#am__append_106 = *.dwo *.dwp
#am__append_107 = dwp_test_1.sh \
#	dwp_test_2.sh
#am__append_108 = dwp_test_1.stdout \
#	dwp_test_2.stdout
subdir = testsuite
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \
	$(top_srcdir)/../config/gettext-sister.m4 \
	$(top_srcdir)/../config/lcmessage.m4 \
	$(top_srcdir)/../config/lead-dot.m4 \
	$(top_srcdir)/../config/nls.m4 \
	$(top_srcdir)/../config/override.m4 \
	$(top_srcdir)/../config/po.m4 \
	$(top_srcdir)/../config/progtest.m4 \
	$(top_srcdir)/../config/zlib.m4 \
	$(top_srcdir)/../bfd/warning.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AR = ar
ARFLAGS = cru
libgoldtest_a_AR = $(AR) $(ARFLAGS)
libgoldtest_a_LIBADD =
am_libgoldtest_a_OBJECTS = test.$(OBJEXT) testmain.$(OBJEXT) \
	testfile.$(OBJEXT)
libgoldtest_a_OBJECTS = $(am_libgoldtest_a_OBJECTS)
am__EXEEXT_1 = object_unittest$(EXEEXT) \
	binary_unittest$(EXEEXT) \
	leb128_unittest$(EXEEXT) \
	overflow_unittest$(EXEEXT)
am__EXEEXT_2 = icf_virtual_function_folding_test$(EXEEXT) \
	large_symbol_alignment$(EXEEXT) \
	basic_test$(EXEEXT) \
	basic_pic_test$(EXEEXT) \
	eh_test$(EXEEXT)
am__EXEEXT_3 = basic_static_test$(EXEEXT) \
	basic_static_pic_test$(EXEEXT)
am__EXEEXT_4 = basic_pie_test$(EXEEXT) \
	constructor_test$(EXEEXT)
am__EXEEXT_5 = constructor_static_test$(EXEEXT)
am__EXEEXT_6 = two_file_test$(EXEEXT) \
	two_file_pic_test$(EXEEXT)
am__EXEEXT_7 = two_file_static_test$(EXEEXT)
am__EXEEXT_8 =  \
	two_file_shared_1_test$(EXEEXT) \
	two_file_shared_2_test$(EXEEXT) \
	two_file_shared_1_pic_2_test$(EXEEXT) \
	two_file_shared_2_pic_1_test$(EXEEXT) \
	two_file_same_shared_test$(EXEEXT) \
	two_file_separate_shared_12_test$(EXEEXT) \
	two_file_separate_shared_21_test$(EXEEXT) \
	two_file_relocatable_test$(EXEEXT) \
	two_file_pie_test$(EXEEXT) \
	pie_copyrelocs_test$(EXEEXT) \
	weak_unresolved_symbols_test$(EXEEXT)
am__EXEEXT_9 = two_file_shared_1_nonpic_test$(EXEEXT) \
	two_file_shared_2_nonpic_test$(EXEEXT) \
	two_file_same_shared_nonpic_test$(EXEEXT) \
	two_file_separate_shared_12_nonpic_test$(EXEEXT) \
	two_file_separate_shared_21_nonpic_test$(EXEEXT) \
	two_file_mixed_shared_test$(EXEEXT) \
	two_file_mixed_2_shared_test$(EXEEXT) \
	two_file_mixed_pie_test$(EXEEXT)
am__EXEEXT_10 =  \
	two_file_strip_test$(EXEEXT) \
	two_file_same_shared_strip_test$(EXEEXT) \
	common_test_1$(EXEEXT) \
	common_test_2$(EXEEXT) \
	exception_test$(EXEEXT) \
	exception_shared_1_test$(EXEEXT) \
	exception_shared_2_test$(EXEEXT) \
	exception_same_shared_test$(EXEEXT) \
	exception_separate_shared_12_test$(EXEEXT) \
	exception_separate_shared_21_test$(EXEEXT)
am__EXEEXT_11 = exception_static_test$(EXEEXT)
am__EXEEXT_12 = weak_test$(EXEEXT) \
	weak_undef_test$(EXEEXT) \
	weak_undef_test_2$(EXEEXT)
am__EXEEXT_13 = weak_undef_nonpic_test$(EXEEXT)
am__EXEEXT_14 =  \
	weak_alias_test$(EXEEXT) \
	weak_plt$(EXEEXT) \
	copy_test$(EXEEXT) \
	copy_test_relro$(EXEEXT)
am__EXEEXT_15 =  \
	tls_test$(EXEEXT) \
	tls_pic_test$(EXEEXT) \
	tls_pie_test$(EXEEXT) \
	tls_pie_pic_test$(EXEEXT) \
	tls_shared_test$(EXEEXT) \
	tls_shared_ie_test$(EXEEXT) \
	tls_shared_gd_to_ie_test$(EXEEXT)
am__EXEEXT_16 = tls_shared_gnu2_gd_to_ie_test$(EXEEXT)
am__EXEEXT_17 = tls_shared_gnu2_test$(EXEEXT)
am__EXEEXT_18 = tls_static_test$(EXEEXT) \
	tls_static_pic_test$(EXEEXT)
am__EXEEXT_19 = tls_shared_nonpic_test$(EXEEXT)
#am__EXEEXT_20 = pr17704a_test$(EXEEXT)
#am__EXEEXT_21 = pr20216a_test$(EXEEXT) \
#	pr20216b_test$(EXEEXT) \
#	pr20216c_test$(EXEEXT) \
#	pr20216d_test$(EXEEXT) \
#	pr20216e_test$(EXEEXT)
#am__EXEEXT_22 = pr20308a_test$(EXEEXT) \
#	pr20308b_test$(EXEEXT) \
#	pr20308c_test$(EXEEXT) \
#	pr20308d_test$(EXEEXT) \
#	pr20308e_test$(EXEEXT)
am__EXEEXT_23 =  \
	many_sections_test$(EXEEXT) \
	many_sections_r_test$(EXEEXT) \
	initpri1$(EXEEXT) \
	initpri2$(EXEEXT) \
	initpri3a$(EXEEXT) \
	flagstest_o_specialfile$(EXEEXT) \
	flagstest_compress_debug_sections_none$(EXEEXT) \
	flagstest_compress_debug_sections$(EXEEXT) \
	flagstest_compress_debug_sections_and_build_id_tree$(EXEEXT) \
	flagstest_compress_debug_sections_gnu$(EXEEXT) \
	flagstest_compress_debug_sections_gabi$(EXEEXT) \
	flagstest_o_specialfile_and_compress_debug_sections$(EXEEXT) \
	flagstest_o_ttext_1$(EXEEXT) \
	ver_test$(EXEEXT) \
	ver_test_2$(EXEEXT) \
	ver_test_6$(EXEEXT) \
	ver_test_8$(EXEEXT) \
	ver_test_9$(EXEEXT) \
	ver_test_11$(EXEEXT) \
	ver_test_12$(EXEEXT) \
	protected_1$(EXEEXT) \
	protected_2$(EXEEXT) \
	relro_test$(EXEEXT) \
	relro_now_test$(EXEEXT) \
	relro_strip_test$(EXEEXT) \
	relro_script_test$(EXEEXT) \
	script_test_1$(EXEEXT) \
	script_test_2$(EXEEXT) \
	justsyms$(EXEEXT) \
	justsyms_exec$(EXEEXT) \
	binary_test$(EXEEXT) \
	script_test_3$(EXEEXT) \
	tls_phdrs_script_test$(EXEEXT) \
	tls_script_test$(EXEEXT) \
	script_test_11$(EXEEXT) \
	script_test_12$(EXEEXT) \
	script_test_12i$(EXEEXT) \
	dynamic_list_2$(EXEEXT) \
	thin_archive_test_1$(EXEEXT) \
	thin_archive_test_2$(EXEEXT)
am__EXEEXT_24 = plugin_test_1$(EXEEXT) \
	plugin_test_2$(EXEEXT) \
	plugin_test_3$(EXEEXT) \
	plugin_test_4$(EXEEXT) \
	plugin_test_5$(EXEEXT) \
	plugin_test_6$(EXEEXT) \
	plugin_test_7$(EXEEXT) \
	plugin_test_8$(EXEEXT) \
	plugin_test_10$(EXEEXT) \
	plugin_test_11$(EXEEXT) \
	plugin_test_12$(EXEEXT) \
	plugin_test_start_lib$(EXEEXT)
am__EXEEXT_25 = plugin_test_tls$(EXEEXT)
am__EXEEXT_26 =  \
	exclude_libs_test$(EXEEXT) \
	local_labels_test$(EXEEXT) \
	discard_locals_test$(EXEEXT)
#am__EXEEXT_27 = large$(EXEEXT)
am__EXEEXT_28 =  \
	permission_test$(EXEEXT) \
	searched_file_test$(EXEEXT)
am__EXEEXT_29 = ifuncmain1static$(EXEEXT) \
	ifuncmain1picstatic$(EXEEXT)
am__EXEEXT_30 =  \
	ifuncmain1$(EXEEXT) \
	ifuncmain1pic$(EXEEXT) \
	ifuncmain1vis$(EXEEXT) \
	ifuncmain1vispic$(EXEEXT) \
	ifuncmain1staticpic$(EXEEXT) \
	ifuncmain1pie$(EXEEXT) \
	ifuncmain1vispie$(EXEEXT) \
	ifuncmain1staticpie$(EXEEXT)
am__EXEEXT_31 = ifuncmain2static$(EXEEXT) \
	ifuncmain2picstatic$(EXEEXT)
am__EXEEXT_32 =  \
	ifuncmain2$(EXEEXT) \
	ifuncmain2pic$(EXEEXT) \
	ifuncmain3$(EXEEXT)
am__EXEEXT_33 = ifuncmain4static$(EXEEXT) \
	ifuncmain4picstatic$(EXEEXT)
am__EXEEXT_34 =  \
	ifuncmain4$(EXEEXT)
am__EXEEXT_35 = ifuncmain5static$(EXEEXT) \
	ifuncmain5picstatic$(EXEEXT)
am__EXEEXT_36 =  \
	ifuncmain5$(EXEEXT) \
	ifuncmain5pic$(EXEEXT) \
	ifuncmain5staticpic$(EXEEXT) \
	ifuncmain5pie$(EXEEXT) \
	ifuncmain6pie$(EXEEXT)
am__EXEEXT_37 = ifuncmain7static$(EXEEXT) \
	ifuncmain7picstatic$(EXEEXT)
am__EXEEXT_38 =  \
	ifuncmain7$(EXEEXT) \
	ifuncmain7pic$(EXEEXT) \
	ifuncmain7pie$(EXEEXT) \
	ifuncvar$(EXEEXT)
am__EXEEXT_39 = start_lib_test$(EXEEXT) \
	ehdr_start_test_1$(EXEEXT) \
	ehdr_start_test_2$(EXEEXT) \
	ehdr_start_test_3$(EXEEXT) \
	ehdr_start_test_5$(EXEEXT) \
	pr20976$(EXEEXT)
#am__EXEEXT_40 = incremental_test_2$(EXEEXT) \
#	incremental_test_3$(EXEEXT) \
#	incremental_test_4$(EXEEXT) \
#	incremental_test_5$(EXEEXT) \
#	incremental_test_6$(EXEEXT) \
#	incremental_copy_test$(EXEEXT) \
#	incremental_common_test_1$(EXEEXT) \
#	incremental_comdat_test_1$(EXEEXT) \
#	exception_x86_64_bnd_test$(EXEEXT)
am__EXEEXT_41 = pr22266$(EXEEXT)
basic_pic_test_SOURCES = basic_pic_test.c
basic_pic_test_OBJECTS = basic_pic_test.$(OBJEXT)
basic_pic_test_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
basic_pic_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
basic_pie_test_SOURCES = basic_pie_test.c
basic_pie_test_OBJECTS = basic_pie_test.$(OBJEXT)
basic_pie_test_LDADD = $(LDADD)
basic_pie_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
basic_static_pic_test_SOURCES = basic_static_pic_test.c
basic_static_pic_test_OBJECTS = basic_static_pic_test.$(OBJEXT)
basic_static_pic_test_LDADD = $(LDADD)
basic_static_pic_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
basic_static_test_SOURCES = basic_static_test.c
basic_static_test_OBJECTS = basic_static_test.$(OBJEXT)
basic_static_test_LDADD = $(LDADD)
basic_static_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
basic_test_SOURCES = basic_test.c
basic_test_OBJECTS = basic_test.$(OBJEXT)
basic_test_LDADD = $(LDADD)
basic_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_binary_test_OBJECTS =  \
	binary_test.$(OBJEXT)
binary_test_OBJECTS = $(am_binary_test_OBJECTS)
binary_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(binary_test_LDFLAGS) $(LDFLAGS) -o $@
am_binary_unittest_OBJECTS =  \
	binary_unittest.$(OBJEXT)
binary_unittest_OBJECTS = $(am_binary_unittest_OBJECTS)
binary_unittest_LDADD = $(LDADD)
binary_unittest_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_common_test_1_OBJECTS =  \
	common_test_1.$(OBJEXT)
common_test_1_OBJECTS = $(am_common_test_1_OBJECTS)
common_test_1_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(common_test_1_LDFLAGS) $(LDFLAGS) -o $@
am_common_test_2_OBJECTS =  \
	common_test_1.$(OBJEXT)
common_test_2_OBJECTS = $(am_common_test_2_OBJECTS)
common_test_2_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(common_test_2_LDFLAGS) $(LDFLAGS) -o $@
am__objects_1 =  \
	constructor_test.$(OBJEXT)
am_constructor_static_test_OBJECTS = $(am__objects_1)
constructor_static_test_OBJECTS =  \
	$(am_constructor_static_test_OBJECTS)
constructor_static_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(constructor_static_test_LDFLAGS) $(LDFLAGS) -o $@
am_constructor_test_OBJECTS =  \
	constructor_test.$(OBJEXT)
constructor_test_OBJECTS = $(am_constructor_test_OBJECTS)
constructor_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(constructor_test_LDFLAGS) $(LDFLAGS) -o $@
am_copy_test_OBJECTS =  \
	copy_test.$(OBJEXT)
copy_test_OBJECTS = $(am_copy_test_OBJECTS)
copy_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(copy_test_LDFLAGS) $(LDFLAGS) -o $@
am_copy_test_relro_OBJECTS =  \
	copy_test_relro.$(OBJEXT)
copy_test_relro_OBJECTS = $(am_copy_test_relro_OBJECTS)
copy_test_relro_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(copy_test_relro_LDFLAGS) $(LDFLAGS) -o $@
am_discard_locals_test_OBJECTS =  \
	discard_locals_test.$(OBJEXT)
discard_locals_test_OBJECTS = $(am_discard_locals_test_OBJECTS)
discard_locals_test_LDADD = $(LDADD)
discard_locals_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
discard_locals_test_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(discard_locals_test_LDFLAGS) $(LDFLAGS) -o $@
am_dynamic_list_2_OBJECTS =  \
	dynamic_list_2.$(OBJEXT)
dynamic_list_2_OBJECTS = $(am_dynamic_list_2_OBJECTS)
dynamic_list_2_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(dynamic_list_2_LDFLAGS) $(LDFLAGS) -o $@
eh_test_SOURCES = eh_test.c
eh_test_OBJECTS = eh_test.$(OBJEXT)
eh_test_LDADD = $(LDADD)
eh_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ehdr_start_test_1_OBJECTS = ehdr_start_test_1-ehdr_start_test.$(OBJEXT)
ehdr_start_test_1_OBJECTS = $(am_ehdr_start_test_1_OBJECTS)
ehdr_start_test_1_LINK = $(CXXLD) $(ehdr_start_test_1_CXXFLAGS) \
	$(CXXFLAGS) $(ehdr_start_test_1_LDFLAGS) $(LDFLAGS) -o $@
am_ehdr_start_test_2_OBJECTS = ehdr_start_test_2-ehdr_start_test.$(OBJEXT)
ehdr_start_test_2_OBJECTS = $(am_ehdr_start_test_2_OBJECTS)
ehdr_start_test_2_LINK = $(CXXLD) $(ehdr_start_test_2_CXXFLAGS) \
	$(CXXFLAGS) $(ehdr_start_test_2_LDFLAGS) $(LDFLAGS) -o $@
am_ehdr_start_test_3_OBJECTS = ehdr_start_test_3-ehdr_start_test.$(OBJEXT)
ehdr_start_test_3_OBJECTS = $(am_ehdr_start_test_3_OBJECTS)
ehdr_start_test_3_LINK = $(CXXLD) $(ehdr_start_test_3_CXXFLAGS) \
	$(CXXFLAGS) $(ehdr_start_test_3_LDFLAGS) $(LDFLAGS) -o $@
am_ehdr_start_test_5_OBJECTS = ehdr_start_test_5-ehdr_start_test.$(OBJEXT) \
	ehdr_start_test_5-ehdr_start_def.$(OBJEXT)
ehdr_start_test_5_OBJECTS = $(am_ehdr_start_test_5_OBJECTS)
ehdr_start_test_5_LINK = $(CXXLD) $(ehdr_start_test_5_CXXFLAGS) \
	$(CXXFLAGS) $(ehdr_start_test_5_LDFLAGS) $(LDFLAGS) -o $@
am_exception_same_shared_test_OBJECTS =  \
	exception_test_main.$(OBJEXT)
exception_same_shared_test_OBJECTS =  \
	$(am_exception_same_shared_test_OBJECTS)
exception_same_shared_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(exception_same_shared_test_LDFLAGS) $(LDFLAGS) -o $@
am_exception_separate_shared_12_test_OBJECTS =  \
	exception_test_main.$(OBJEXT)
exception_separate_shared_12_test_OBJECTS =  \
	$(am_exception_separate_shared_12_test_OBJECTS)
exception_separate_shared_12_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(exception_separate_shared_12_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_exception_separate_shared_21_test_OBJECTS =  \
	exception_test_main.$(OBJEXT)
exception_separate_shared_21_test_OBJECTS =  \
	$(am_exception_separate_shared_21_test_OBJECTS)
exception_separate_shared_21_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(exception_separate_shared_21_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_exception_shared_1_test_OBJECTS =  \
	exception_test_2.$(OBJEXT) \
	exception_test_main.$(OBJEXT)
exception_shared_1_test_OBJECTS =  \
	$(am_exception_shared_1_test_OBJECTS)
exception_shared_1_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(exception_shared_1_test_LDFLAGS) $(LDFLAGS) -o $@
am_exception_shared_2_test_OBJECTS =  \
	exception_test_1.$(OBJEXT) \
	exception_test_main.$(OBJEXT)
exception_shared_2_test_OBJECTS =  \
	$(am_exception_shared_2_test_OBJECTS)
exception_shared_2_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(exception_shared_2_test_LDFLAGS) $(LDFLAGS) -o $@
am__objects_2 =  \
	exception_test_main.$(OBJEXT) \
	exception_test_1.$(OBJEXT) \
	exception_test_2.$(OBJEXT)
am_exception_static_test_OBJECTS = $(am__objects_2)
exception_static_test_OBJECTS = $(am_exception_static_test_OBJECTS)
exception_static_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(exception_static_test_LDFLAGS) $(LDFLAGS) -o $@
am_exception_test_OBJECTS =  \
	exception_test_main.$(OBJEXT) \
	exception_test_1.$(OBJEXT) \
	exception_test_2.$(OBJEXT)
exception_test_OBJECTS = $(am_exception_test_OBJECTS)
exception_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(exception_test_LDFLAGS) $(LDFLAGS) -o $@
#am_exception_x86_64_bnd_test_OBJECTS = exception_test_main.$(OBJEXT)
exception_x86_64_bnd_test_OBJECTS =  \
	$(am_exception_x86_64_bnd_test_OBJECTS)
exception_x86_64_bnd_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(exception_x86_64_bnd_test_LDFLAGS) $(LDFLAGS) -o $@
am_exclude_libs_test_OBJECTS =  \
	exclude_libs_test.$(OBJEXT)
exclude_libs_test_OBJECTS = $(am_exclude_libs_test_OBJECTS)
exclude_libs_test_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(exclude_libs_test_LDFLAGS) $(LDFLAGS) -o $@
flagstest_compress_debug_sections_SOURCES =  \
	flagstest_compress_debug_sections.c
flagstest_compress_debug_sections_OBJECTS =  \
	flagstest_compress_debug_sections.$(OBJEXT)
flagstest_compress_debug_sections_LDADD = $(LDADD)
flagstest_compress_debug_sections_DEPENDENCIES = libgoldtest.a \
	../libgold.a ../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
flagstest_compress_debug_sections_and_build_id_tree_SOURCES =  \
	flagstest_compress_debug_sections_and_build_id_tree.c
flagstest_compress_debug_sections_and_build_id_tree_OBJECTS =  \
	flagstest_compress_debug_sections_and_build_id_tree.$(OBJEXT)
flagstest_compress_debug_sections_and_build_id_tree_LDADD = $(LDADD)
flagstest_compress_debug_sections_and_build_id_tree_DEPENDENCIES =  \
	libgoldtest.a ../libgold.a ../../libiberty/libiberty.a \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
flagstest_compress_debug_sections_gabi_SOURCES =  \
	flagstest_compress_debug_sections_gabi.c
flagstest_compress_debug_sections_gabi_OBJECTS =  \
	flagstest_compress_debug_sections_gabi.$(OBJEXT)
flagstest_compress_debug_sections_gabi_LDADD = $(LDADD)
flagstest_compress_debug_sections_gabi_DEPENDENCIES = libgoldtest.a \
	../libgold.a ../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
flagstest_compress_debug_sections_gnu_SOURCES =  \
	flagstest_compress_debug_sections_gnu.c
flagstest_compress_debug_sections_gnu_OBJECTS =  \
	flagstest_compress_debug_sections_gnu.$(OBJEXT)
flagstest_compress_debug_sections_gnu_LDADD = $(LDADD)
flagstest_compress_debug_sections_gnu_DEPENDENCIES = libgoldtest.a \
	../libgold.a ../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
flagstest_compress_debug_sections_none_SOURCES =  \
	flagstest_compress_debug_sections_none.c
flagstest_compress_debug_sections_none_OBJECTS =  \
	flagstest_compress_debug_sections_none.$(OBJEXT)
flagstest_compress_debug_sections_none_LDADD = $(LDADD)
flagstest_compress_debug_sections_none_DEPENDENCIES = libgoldtest.a \
	../libgold.a ../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
flagstest_o_specialfile_SOURCES = flagstest_o_specialfile.c
flagstest_o_specialfile_OBJECTS = flagstest_o_specialfile.$(OBJEXT)
flagstest_o_specialfile_LDADD = $(LDADD)
flagstest_o_specialfile_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
flagstest_o_specialfile_and_compress_debug_sections_SOURCES =  \
	flagstest_o_specialfile_and_compress_debug_sections.c
flagstest_o_specialfile_and_compress_debug_sections_OBJECTS =  \
	flagstest_o_specialfile_and_compress_debug_sections.$(OBJEXT)
flagstest_o_specialfile_and_compress_debug_sections_LDADD = $(LDADD)
flagstest_o_specialfile_and_compress_debug_sections_DEPENDENCIES =  \
	libgoldtest.a ../libgold.a ../../libiberty/libiberty.a \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
flagstest_o_ttext_1_SOURCES = flagstest_o_ttext_1.c
flagstest_o_ttext_1_OBJECTS = flagstest_o_ttext_1.$(OBJEXT)
flagstest_o_ttext_1_LDADD = $(LDADD)
flagstest_o_ttext_1_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
icf_virtual_function_folding_test_SOURCES =  \
	icf_virtual_function_folding_test.c
icf_virtual_function_folding_test_OBJECTS =  \
	icf_virtual_function_folding_test.$(OBJEXT)
icf_virtual_function_folding_test_LDADD = $(LDADD)
icf_virtual_function_folding_test_DEPENDENCIES = libgoldtest.a \
	../libgold.a ../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain1_OBJECTS = ifuncmain1.$(OBJEXT)
ifuncmain1_OBJECTS = $(am_ifuncmain1_OBJECTS)
ifuncmain1_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ifuncmain1_LDFLAGS) \
	$(LDFLAGS) -o $@
ifuncmain1pic_SOURCES = ifuncmain1pic.c
ifuncmain1pic_OBJECTS = ifuncmain1pic.$(OBJEXT)
ifuncmain1pic_LDADD = $(LDADD)
ifuncmain1pic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain1picstatic_SOURCES = ifuncmain1picstatic.c
ifuncmain1picstatic_OBJECTS = ifuncmain1picstatic.$(OBJEXT)
ifuncmain1picstatic_LDADD = $(LDADD)
ifuncmain1picstatic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain1pie_SOURCES = ifuncmain1pie.c
ifuncmain1pie_OBJECTS = ifuncmain1pie.$(OBJEXT)
ifuncmain1pie_LDADD = $(LDADD)
ifuncmain1pie_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain1static_OBJECTS = ifuncmain1.$(OBJEXT)
ifuncmain1static_OBJECTS = $(am_ifuncmain1static_OBJECTS)
ifuncmain1static_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ifuncmain1static_LDFLAGS) $(LDFLAGS) -o $@
ifuncmain1staticpic_SOURCES = ifuncmain1staticpic.c
ifuncmain1staticpic_OBJECTS = ifuncmain1staticpic.$(OBJEXT)
ifuncmain1staticpic_LDADD = $(LDADD)
ifuncmain1staticpic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain1staticpie_SOURCES = ifuncmain1staticpie.c
ifuncmain1staticpie_OBJECTS = ifuncmain1staticpie.$(OBJEXT)
ifuncmain1staticpie_LDADD = $(LDADD)
ifuncmain1staticpie_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain1vis_OBJECTS = ifuncmain1vis.$(OBJEXT)
ifuncmain1vis_OBJECTS = $(am_ifuncmain1vis_OBJECTS)
ifuncmain1vis_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ifuncmain1vis_LDFLAGS) $(LDFLAGS) -o $@
ifuncmain1vispic_SOURCES = ifuncmain1vispic.c
ifuncmain1vispic_OBJECTS = ifuncmain1vispic.$(OBJEXT)
ifuncmain1vispic_LDADD = $(LDADD)
ifuncmain1vispic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain1vispie_SOURCES = ifuncmain1vispie.c
ifuncmain1vispie_OBJECTS = ifuncmain1vispie.$(OBJEXT)
ifuncmain1vispie_LDADD = $(LDADD)
ifuncmain1vispie_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain2_OBJECTS = ifuncmain2.$(OBJEXT) \
	ifuncdep2.$(OBJEXT)
ifuncmain2_OBJECTS = $(am_ifuncmain2_OBJECTS)
ifuncmain2_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ifuncmain2_LDFLAGS) \
	$(LDFLAGS) -o $@
ifuncmain2pic_SOURCES = ifuncmain2pic.c
ifuncmain2pic_OBJECTS = ifuncmain2pic.$(OBJEXT)
ifuncmain2pic_LDADD = $(LDADD)
ifuncmain2pic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain2picstatic_SOURCES = ifuncmain2picstatic.c
ifuncmain2picstatic_OBJECTS = ifuncmain2picstatic.$(OBJEXT)
ifuncmain2picstatic_LDADD = $(LDADD)
ifuncmain2picstatic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain2static_OBJECTS = ifuncmain2.$(OBJEXT) \
	ifuncdep2.$(OBJEXT)
ifuncmain2static_OBJECTS = $(am_ifuncmain2static_OBJECTS)
ifuncmain2static_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ifuncmain2static_LDFLAGS) $(LDFLAGS) -o $@
am_ifuncmain3_OBJECTS = ifuncmain3.$(OBJEXT)
ifuncmain3_OBJECTS = $(am_ifuncmain3_OBJECTS)
ifuncmain3_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ifuncmain3_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ifuncmain4_OBJECTS = ifuncmain4.$(OBJEXT)
ifuncmain4_OBJECTS = $(am_ifuncmain4_OBJECTS)
ifuncmain4_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ifuncmain4_LDFLAGS) \
	$(LDFLAGS) -o $@
ifuncmain4picstatic_SOURCES = ifuncmain4picstatic.c
ifuncmain4picstatic_OBJECTS = ifuncmain4picstatic.$(OBJEXT)
ifuncmain4picstatic_LDADD = $(LDADD)
ifuncmain4picstatic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain4static_OBJECTS = ifuncmain4.$(OBJEXT)
ifuncmain4static_OBJECTS = $(am_ifuncmain4static_OBJECTS)
ifuncmain4static_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ifuncmain4static_LDFLAGS) $(LDFLAGS) -o $@
am_ifuncmain5_OBJECTS = ifuncmain5.$(OBJEXT)
ifuncmain5_OBJECTS = $(am_ifuncmain5_OBJECTS)
ifuncmain5_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ifuncmain5_LDFLAGS) \
	$(LDFLAGS) -o $@
ifuncmain5pic_SOURCES = ifuncmain5pic.c
ifuncmain5pic_OBJECTS = ifuncmain5pic.$(OBJEXT)
ifuncmain5pic_LDADD = $(LDADD)
ifuncmain5pic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain5picstatic_SOURCES = ifuncmain5picstatic.c
ifuncmain5picstatic_OBJECTS = ifuncmain5picstatic.$(OBJEXT)
ifuncmain5picstatic_LDADD = $(LDADD)
ifuncmain5picstatic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain5pie_SOURCES = ifuncmain5pie.c
ifuncmain5pie_OBJECTS = ifuncmain5pie.$(OBJEXT)
ifuncmain5pie_LDADD = $(LDADD)
ifuncmain5pie_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain5static_OBJECTS = ifuncmain5.$(OBJEXT)
ifuncmain5static_OBJECTS = $(am_ifuncmain5static_OBJECTS)
ifuncmain5static_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ifuncmain5static_LDFLAGS) $(LDFLAGS) -o $@
ifuncmain5staticpic_SOURCES = ifuncmain5staticpic.c
ifuncmain5staticpic_OBJECTS = ifuncmain5staticpic.$(OBJEXT)
ifuncmain5staticpic_LDADD = $(LDADD)
ifuncmain5staticpic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain6pie_SOURCES = ifuncmain6pie.c
ifuncmain6pie_OBJECTS = ifuncmain6pie.$(OBJEXT)
ifuncmain6pie_LDADD = $(LDADD)
ifuncmain6pie_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain7_OBJECTS = ifuncmain7.$(OBJEXT)
ifuncmain7_OBJECTS = $(am_ifuncmain7_OBJECTS)
ifuncmain7_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ifuncmain7_LDFLAGS) \
	$(LDFLAGS) -o $@
ifuncmain7pic_SOURCES = ifuncmain7pic.c
ifuncmain7pic_OBJECTS = ifuncmain7pic.$(OBJEXT)
ifuncmain7pic_LDADD = $(LDADD)
ifuncmain7pic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain7picstatic_SOURCES = ifuncmain7picstatic.c
ifuncmain7picstatic_OBJECTS = ifuncmain7picstatic.$(OBJEXT)
ifuncmain7picstatic_LDADD = $(LDADD)
ifuncmain7picstatic_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
ifuncmain7pie_SOURCES = ifuncmain7pie.c
ifuncmain7pie_OBJECTS = ifuncmain7pie.$(OBJEXT)
ifuncmain7pie_LDADD = $(LDADD)
ifuncmain7pie_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ifuncmain7static_OBJECTS = ifuncmain7.$(OBJEXT)
ifuncmain7static_OBJECTS = $(am_ifuncmain7static_OBJECTS)
ifuncmain7static_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ifuncmain7static_LDFLAGS) $(LDFLAGS) -o $@
am_ifuncvar_OBJECTS =  \
	ifuncvar3.$(OBJEXT)
ifuncvar_OBJECTS = $(am_ifuncvar_OBJECTS)
ifuncvar_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ifuncvar_LDFLAGS) \
	$(LDFLAGS) -o $@
incremental_comdat_test_1_SOURCES = incremental_comdat_test_1.c
incremental_comdat_test_1_OBJECTS =  \
	incremental_comdat_test_1.$(OBJEXT)
incremental_comdat_test_1_LDADD = $(LDADD)
incremental_comdat_test_1_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
incremental_common_test_1_SOURCES = incremental_common_test_1.c
incremental_common_test_1_OBJECTS =  \
	incremental_common_test_1.$(OBJEXT)
incremental_common_test_1_LDADD = $(LDADD)
incremental_common_test_1_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
incremental_copy_test_SOURCES = incremental_copy_test.c
incremental_copy_test_OBJECTS = incremental_copy_test.$(OBJEXT)
incremental_copy_test_LDADD = $(LDADD)
incremental_copy_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
incremental_test_2_SOURCES = incremental_test_2.c
incremental_test_2_OBJECTS = incremental_test_2.$(OBJEXT)
incremental_test_2_LDADD = $(LDADD)
incremental_test_2_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
incremental_test_3_SOURCES = incremental_test_3.c
incremental_test_3_OBJECTS = incremental_test_3.$(OBJEXT)
incremental_test_3_LDADD = $(LDADD)
incremental_test_3_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
incremental_test_4_SOURCES = incremental_test_4.c
incremental_test_4_OBJECTS = incremental_test_4.$(OBJEXT)
incremental_test_4_LDADD = $(LDADD)
incremental_test_4_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
incremental_test_5_SOURCES = incremental_test_5.c
incremental_test_5_OBJECTS = incremental_test_5.$(OBJEXT)
incremental_test_5_LDADD = $(LDADD)
incremental_test_5_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
incremental_test_6_SOURCES = incremental_test_6.c
incremental_test_6_OBJECTS = incremental_test_6.$(OBJEXT)
incremental_test_6_LDADD = $(LDADD)
incremental_test_6_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_initpri1_OBJECTS =  \
	initpri1.$(OBJEXT)
initpri1_OBJECTS = $(am_initpri1_OBJECTS)
initpri1_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(initpri1_LDFLAGS) \
	$(LDFLAGS) -o $@
am_initpri2_OBJECTS =  \
	initpri2.$(OBJEXT)
initpri2_OBJECTS = $(am_initpri2_OBJECTS)
initpri2_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(initpri2_LDFLAGS) \
	$(LDFLAGS) -o $@
am_initpri3a_OBJECTS =  \
	initpri3.$(OBJEXT)
initpri3a_OBJECTS = $(am_initpri3a_OBJECTS)
initpri3a_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(initpri3a_LDFLAGS) \
	$(LDFLAGS) -o $@
am_justsyms_OBJECTS =  \
	justsyms_1.$(OBJEXT)
justsyms_OBJECTS = $(am_justsyms_OBJECTS)
justsyms_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(justsyms_LDFLAGS) $(LDFLAGS) -o $@
am_justsyms_exec_OBJECTS =  \
	justsyms_exec.$(OBJEXT)
justsyms_exec_OBJECTS = $(am_justsyms_exec_OBJECTS)
justsyms_exec_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(justsyms_exec_LDFLAGS) $(LDFLAGS) -o $@
#am_large_OBJECTS = large-large.$(OBJEXT)
large_OBJECTS = $(am_large_OBJECTS)
large_LINK = $(CCLD) $(large_CFLAGS) $(CFLAGS) $(large_LDFLAGS) \
	$(LDFLAGS) -o $@
am_large_symbol_alignment_OBJECTS = large_symbol_alignment.$(OBJEXT)
large_symbol_alignment_OBJECTS = $(am_large_symbol_alignment_OBJECTS)
large_symbol_alignment_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(large_symbol_alignment_LDFLAGS) $(LDFLAGS) -o $@
am_leb128_unittest_OBJECTS =  \
	leb128_unittest.$(OBJEXT)
leb128_unittest_OBJECTS = $(am_leb128_unittest_OBJECTS)
leb128_unittest_LDADD = $(LDADD)
leb128_unittest_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
local_labels_test_SOURCES = local_labels_test.c
local_labels_test_OBJECTS = local_labels_test.$(OBJEXT)
local_labels_test_LDADD = $(LDADD)
local_labels_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
many_sections_r_test_SOURCES = many_sections_r_test.c
many_sections_r_test_OBJECTS = many_sections_r_test.$(OBJEXT)
many_sections_r_test_LDADD = $(LDADD)
many_sections_r_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_many_sections_test_OBJECTS =  \
	many_sections_test.$(OBJEXT)
many_sections_test_OBJECTS = $(am_many_sections_test_OBJECTS)
many_sections_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(many_sections_test_LDFLAGS) $(LDFLAGS) -o $@
am_object_unittest_OBJECTS =  \
	object_unittest.$(OBJEXT)
object_unittest_OBJECTS = $(am_object_unittest_OBJECTS)
object_unittest_LDADD = $(LDADD)
object_unittest_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_overflow_unittest_OBJECTS =  \
	overflow_unittest.$(OBJEXT)
overflow_unittest_OBJECTS = $(am_overflow_unittest_OBJECTS)
overflow_unittest_LDADD = $(LDADD)
overflow_unittest_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
permission_test_SOURCES = permission_test.c
permission_test_OBJECTS = permission_test.$(OBJEXT)
permission_test_LDADD = $(LDADD)
permission_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_pie_copyrelocs_test_OBJECTS = pie_copyrelocs_test-pie_copyrelocs_test.$(OBJEXT)
pie_copyrelocs_test_OBJECTS = $(am_pie_copyrelocs_test_OBJECTS)
pie_copyrelocs_test_LINK = $(CXXLD) $(pie_copyrelocs_test_CXXFLAGS) \
	$(CXXFLAGS) $(pie_copyrelocs_test_LDFLAGS) $(LDFLAGS) -o $@
plugin_test_1_SOURCES = plugin_test_1.c
plugin_test_1_OBJECTS = plugin_test_1.$(OBJEXT)
plugin_test_1_LDADD = $(LDADD)
plugin_test_1_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_10_SOURCES = plugin_test_10.c
plugin_test_10_OBJECTS = plugin_test_10.$(OBJEXT)
plugin_test_10_LDADD = $(LDADD)
plugin_test_10_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_11_SOURCES = plugin_test_11.c
plugin_test_11_OBJECTS = plugin_test_11.$(OBJEXT)
plugin_test_11_LDADD = $(LDADD)
plugin_test_11_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_12_SOURCES = plugin_test_12.c
plugin_test_12_OBJECTS = plugin_test_12.$(OBJEXT)
plugin_test_12_LDADD = $(LDADD)
plugin_test_12_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_2_SOURCES = plugin_test_2.c
plugin_test_2_OBJECTS = plugin_test_2.$(OBJEXT)
plugin_test_2_LDADD = $(LDADD)
plugin_test_2_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_3_SOURCES = plugin_test_3.c
plugin_test_3_OBJECTS = plugin_test_3.$(OBJEXT)
plugin_test_3_LDADD = $(LDADD)
plugin_test_3_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_4_SOURCES = plugin_test_4.c
plugin_test_4_OBJECTS = plugin_test_4.$(OBJEXT)
plugin_test_4_LDADD = $(LDADD)
plugin_test_4_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_5_SOURCES = plugin_test_5.c
plugin_test_5_OBJECTS = plugin_test_5.$(OBJEXT)
plugin_test_5_LDADD = $(LDADD)
plugin_test_5_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_6_SOURCES = plugin_test_6.c
plugin_test_6_OBJECTS = plugin_test_6.$(OBJEXT)
plugin_test_6_LDADD = $(LDADD)
plugin_test_6_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_7_SOURCES = plugin_test_7.c
plugin_test_7_OBJECTS = plugin_test_7.$(OBJEXT)
plugin_test_7_LDADD = $(LDADD)
plugin_test_7_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_8_SOURCES = plugin_test_8.c
plugin_test_8_OBJECTS = plugin_test_8.$(OBJEXT)
plugin_test_8_LDADD = $(LDADD)
plugin_test_8_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_start_lib_SOURCES = plugin_test_start_lib.c
plugin_test_start_lib_OBJECTS = plugin_test_start_lib.$(OBJEXT)
plugin_test_start_lib_LDADD = $(LDADD)
plugin_test_start_lib_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
plugin_test_tls_SOURCES = plugin_test_tls.c
plugin_test_tls_OBJECTS = plugin_test_tls.$(OBJEXT)
plugin_test_tls_LDADD = $(LDADD)
plugin_test_tls_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
pr17704a_test_SOURCES = pr17704a_test.c
pr17704a_test_OBJECTS = pr17704a_test.$(OBJEXT)
pr17704a_test_LDADD = $(LDADD)
pr17704a_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
#am_pr20216a_test_OBJECTS = pr20216a_test-pr20216_main.$(OBJEXT) \
#	pr20216a_test-pr20216_def.$(OBJEXT)
pr20216a_test_OBJECTS = $(am_pr20216a_test_OBJECTS)
pr20216a_test_LINK = $(CCLD) $(pr20216a_test_CFLAGS) $(CFLAGS) \
	$(pr20216a_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20216b_test_OBJECTS = pr20216b_test-pr20216_main.$(OBJEXT) \
#	pr20216b_test-pr20216_def.$(OBJEXT)
pr20216b_test_OBJECTS = $(am_pr20216b_test_OBJECTS)
pr20216b_test_LINK = $(CCLD) $(pr20216b_test_CFLAGS) $(CFLAGS) \
	$(pr20216b_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20216c_test_OBJECTS = pr20216c_test-pr20216_main.$(OBJEXT) \
#	pr20216c_test-pr20216_def.$(OBJEXT)
pr20216c_test_OBJECTS = $(am_pr20216c_test_OBJECTS)
pr20216c_test_LINK = $(CCLD) $(pr20216c_test_CFLAGS) $(CFLAGS) \
	$(pr20216c_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20216d_test_OBJECTS = pr20216d_test-pr20216_main.$(OBJEXT) \
#	pr20216d_test-pr20216_def.$(OBJEXT)
pr20216d_test_OBJECTS = $(am_pr20216d_test_OBJECTS)
pr20216d_test_LINK = $(CCLD) $(pr20216d_test_CFLAGS) $(CFLAGS) \
	$(pr20216d_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20216e_test_OBJECTS = pr20216e_test-pr20216_main.$(OBJEXT)
pr20216e_test_OBJECTS = $(am_pr20216e_test_OBJECTS)
pr20216e_test_LINK = $(CCLD) $(pr20216e_test_CFLAGS) $(CFLAGS) \
	$(pr20216e_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20308a_test_OBJECTS = pr20308a_test-pr20308_main.$(OBJEXT) \
#	pr20308a_test-pr20308_def.$(OBJEXT)
pr20308a_test_OBJECTS = $(am_pr20308a_test_OBJECTS)
pr20308a_test_LINK = $(CCLD) $(pr20308a_test_CFLAGS) $(CFLAGS) \
	$(pr20308a_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20308b_test_OBJECTS = pr20308b_test-pr20308_main.$(OBJEXT) \
#	pr20308b_test-pr20308_def.$(OBJEXT)
pr20308b_test_OBJECTS = $(am_pr20308b_test_OBJECTS)
pr20308b_test_LINK = $(CCLD) $(pr20308b_test_CFLAGS) $(CFLAGS) \
	$(pr20308b_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20308c_test_OBJECTS = pr20308c_test-pr20308_main.$(OBJEXT) \
#	pr20308c_test-pr20308_def.$(OBJEXT)
pr20308c_test_OBJECTS = $(am_pr20308c_test_OBJECTS)
pr20308c_test_LINK = $(CCLD) $(pr20308c_test_CFLAGS) $(CFLAGS) \
	$(pr20308c_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20308d_test_OBJECTS = pr20308d_test-pr20308_main.$(OBJEXT) \
#	pr20308d_test-pr20308_def.$(OBJEXT)
pr20308d_test_OBJECTS = $(am_pr20308d_test_OBJECTS)
pr20308d_test_LINK = $(CCLD) $(pr20308d_test_CFLAGS) $(CFLAGS) \
	$(pr20308d_test_LDFLAGS) $(LDFLAGS) -o $@
#am_pr20308e_test_OBJECTS = pr20308e_test-pr20308_main.$(OBJEXT)
pr20308e_test_OBJECTS = $(am_pr20308e_test_OBJECTS)
pr20308e_test_LINK = $(CCLD) $(pr20308e_test_CFLAGS) $(CFLAGS) \
	$(pr20308e_test_LDFLAGS) $(LDFLAGS) -o $@
pr20976_SOURCES = pr20976.c
pr20976_OBJECTS = pr20976.$(OBJEXT)
pr20976_LDADD = $(LDADD)
pr20976_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
pr22266_SOURCES = pr22266.c
pr22266_OBJECTS = pr22266.$(OBJEXT)
pr22266_LDADD = $(LDADD)
pr22266_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_protected_1_OBJECTS =  \
	protected_main_1.$(OBJEXT) \
	protected_main_2.$(OBJEXT) \
	protected_main_3.$(OBJEXT)
protected_1_OBJECTS = $(am_protected_1_OBJECTS)
protected_1_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(protected_1_LDFLAGS) $(LDFLAGS) -o $@
am_protected_2_OBJECTS =  \
	protected_main_1.$(OBJEXT) \
	protected_3.$(OBJEXT)
protected_2_OBJECTS = $(am_protected_2_OBJECTS)
protected_2_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(protected_2_LDFLAGS) $(LDFLAGS) -o $@
am_relro_now_test_OBJECTS =  \
	relro_test_main.$(OBJEXT)
relro_now_test_OBJECTS = $(am_relro_now_test_OBJECTS)
relro_now_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(relro_now_test_LDFLAGS) $(LDFLAGS) -o $@
am_relro_script_test_OBJECTS =  \
	relro_test_main.$(OBJEXT)
relro_script_test_OBJECTS = $(am_relro_script_test_OBJECTS)
relro_script_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(relro_script_test_LDFLAGS) $(LDFLAGS) -o $@
am_relro_strip_test_OBJECTS =  \
	relro_test_main.$(OBJEXT)
relro_strip_test_OBJECTS = $(am_relro_strip_test_OBJECTS)
relro_strip_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(relro_strip_test_LDFLAGS) $(LDFLAGS) -o $@
am_relro_test_OBJECTS =  \
	relro_test_main.$(OBJEXT)
relro_test_OBJECTS = $(am_relro_test_OBJECTS)
relro_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(relro_test_LDFLAGS) $(LDFLAGS) -o $@
am_script_test_1_OBJECTS =  \
	script_test_1a.$(OBJEXT) \
	script_test_1b.$(OBJEXT)
script_test_1_OBJECTS = $(am_script_test_1_OBJECTS)
script_test_1_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(script_test_1_LDFLAGS) $(LDFLAGS) -o $@
script_test_11_SOURCES = script_test_11.c
script_test_11_OBJECTS = script_test_11.$(OBJEXT)
script_test_11_LDADD = $(LDADD)
script_test_11_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
script_test_12_SOURCES = script_test_12.c
script_test_12_OBJECTS = script_test_12.$(OBJEXT)
script_test_12_LDADD = $(LDADD)
script_test_12_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
script_test_12i_SOURCES = script_test_12i.c
script_test_12i_OBJECTS = script_test_12i.$(OBJEXT)
script_test_12i_LDADD = $(LDADD)
script_test_12i_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_script_test_2_OBJECTS =  \
	script_test_2.$(OBJEXT) \
	script_test_2a.$(OBJEXT) \
	script_test_2b.$(OBJEXT)
script_test_2_OBJECTS = $(am_script_test_2_OBJECTS)
script_test_2_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(script_test_2_LDFLAGS) $(LDFLAGS) -o $@
script_test_3_SOURCES = script_test_3.c
script_test_3_OBJECTS = script_test_3.$(OBJEXT)
script_test_3_LDADD = $(LDADD)
script_test_3_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_searched_file_test_OBJECTS =  \
	searched_file_test.$(OBJEXT)
searched_file_test_OBJECTS = $(am_searched_file_test_OBJECTS)
searched_file_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(searched_file_test_LDFLAGS) $(LDFLAGS) -o $@
start_lib_test_SOURCES = start_lib_test.c
start_lib_test_OBJECTS = start_lib_test.$(OBJEXT)
start_lib_test_LDADD = $(LDADD)
start_lib_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_thin_archive_test_1_OBJECTS =  \
	thin_archive_main.$(OBJEXT)
thin_archive_test_1_OBJECTS = $(am_thin_archive_test_1_OBJECTS)
thin_archive_test_1_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(thin_archive_test_1_LDFLAGS) $(LDFLAGS) -o $@
am_thin_archive_test_2_OBJECTS =  \
	thin_archive_main.$(OBJEXT)
thin_archive_test_2_OBJECTS = $(am_thin_archive_test_2_OBJECTS)
thin_archive_test_2_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(thin_archive_test_2_LDFLAGS) $(LDFLAGS) -o $@
am__objects_3 =  \
	tls_test.$(OBJEXT) \
	tls_test_file2.$(OBJEXT) \
	tls_test_main.$(OBJEXT)
am_tls_phdrs_script_test_OBJECTS =  \
	$(am__objects_3)
tls_phdrs_script_test_OBJECTS = $(am_tls_phdrs_script_test_OBJECTS)
am__DEPENDENCIES_2 =  \
	tls_test_c.o
tls_phdrs_script_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_phdrs_script_test_LDFLAGS) $(LDFLAGS) -o $@
am_tls_pic_test_OBJECTS = tls_test_main.$(OBJEXT)
tls_pic_test_OBJECTS = $(am_tls_pic_test_OBJECTS)
tls_pic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_pic_test_LDFLAGS) $(LDFLAGS) -o $@
tls_pie_pic_test_SOURCES = tls_pie_pic_test.c
tls_pie_pic_test_OBJECTS = tls_pie_pic_test.$(OBJEXT)
tls_pie_pic_test_LDADD = $(LDADD)
tls_pie_pic_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
tls_pie_test_SOURCES = tls_pie_test.c
tls_pie_test_OBJECTS = tls_pie_test.$(OBJEXT)
tls_pie_test_LDADD = $(LDADD)
tls_pie_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_tls_script_test_OBJECTS =  \
	$(am__objects_3)
tls_script_test_OBJECTS = $(am_tls_script_test_OBJECTS)
tls_script_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_script_test_LDFLAGS) $(LDFLAGS) -o $@
am_tls_shared_gd_to_ie_test_OBJECTS = tls_test_main.$(OBJEXT)
tls_shared_gd_to_ie_test_OBJECTS =  \
	$(am_tls_shared_gd_to_ie_test_OBJECTS)
tls_shared_gd_to_ie_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_shared_gd_to_ie_test_LDFLAGS) $(LDFLAGS) -o $@
am_tls_shared_gnu2_gd_to_ie_test_OBJECTS = tls_test_main.$(OBJEXT)
tls_shared_gnu2_gd_to_ie_test_OBJECTS =  \
	$(am_tls_shared_gnu2_gd_to_ie_test_OBJECTS)
tls_shared_gnu2_gd_to_ie_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(tls_shared_gnu2_gd_to_ie_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tls_shared_gnu2_test_OBJECTS = tls_test_main.$(OBJEXT)
tls_shared_gnu2_test_OBJECTS = $(am_tls_shared_gnu2_test_OBJECTS)
tls_shared_gnu2_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_shared_gnu2_test_LDFLAGS) $(LDFLAGS) -o $@
am_tls_shared_ie_test_OBJECTS = tls_test_main.$(OBJEXT)
tls_shared_ie_test_OBJECTS = $(am_tls_shared_ie_test_OBJECTS)
tls_shared_ie_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_shared_ie_test_LDFLAGS) $(LDFLAGS) -o $@
am_tls_shared_nonpic_test_OBJECTS = tls_test_main.$(OBJEXT)
tls_shared_nonpic_test_OBJECTS = $(am_tls_shared_nonpic_test_OBJECTS)
tls_shared_nonpic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_shared_nonpic_test_LDFLAGS) $(LDFLAGS) -o $@
am_tls_shared_test_OBJECTS = tls_test_main.$(OBJEXT)
tls_shared_test_OBJECTS = $(am_tls_shared_test_OBJECTS)
tls_shared_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_shared_test_LDFLAGS) $(LDFLAGS) -o $@
am__objects_4 = tls_test_main.$(OBJEXT)
am_tls_static_pic_test_OBJECTS = $(am__objects_4)
tls_static_pic_test_OBJECTS = $(am_tls_static_pic_test_OBJECTS)
am__DEPENDENCIES_3 =  \
	tls_test_pic.o \
	tls_test_file2_pic.o \
	tls_test_c_pic.o
tls_static_pic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_static_pic_test_LDFLAGS) $(LDFLAGS) -o $@
am_tls_static_test_OBJECTS = $(am__objects_3)
tls_static_test_OBJECTS = $(am_tls_static_test_OBJECTS)
tls_static_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_static_test_LDFLAGS) $(LDFLAGS) -o $@
am_tls_test_OBJECTS =  \
	tls_test.$(OBJEXT) \
	tls_test_file2.$(OBJEXT) \
	tls_test_main.$(OBJEXT)
tls_test_OBJECTS = $(am_tls_test_OBJECTS)
tls_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(tls_test_LDFLAGS) $(LDFLAGS) -o $@
am_two_file_mixed_2_shared_test_OBJECTS = two_file_test_main.$(OBJEXT)
two_file_mixed_2_shared_test_OBJECTS =  \
	$(am_two_file_mixed_2_shared_test_OBJECTS)
two_file_mixed_2_shared_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_mixed_2_shared_test_LDFLAGS) $(LDFLAGS) \
	-o $@
two_file_mixed_pie_test_SOURCES = two_file_mixed_pie_test.c
two_file_mixed_pie_test_OBJECTS = two_file_mixed_pie_test.$(OBJEXT)
two_file_mixed_pie_test_LDADD = $(LDADD)
two_file_mixed_pie_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_two_file_mixed_shared_test_OBJECTS = two_file_test_main.$(OBJEXT)
two_file_mixed_shared_test_OBJECTS =  \
	$(am_two_file_mixed_shared_test_OBJECTS)
two_file_mixed_shared_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(two_file_mixed_shared_test_LDFLAGS) $(LDFLAGS) -o $@
am_two_file_pic_test_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
two_file_pic_test_OBJECTS = $(am_two_file_pic_test_OBJECTS)
two_file_pic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(two_file_pic_test_LDFLAGS) $(LDFLAGS) -o $@
two_file_pie_test_SOURCES = two_file_pie_test.c
two_file_pie_test_OBJECTS = two_file_pie_test.$(OBJEXT)
two_file_pie_test_LDADD = $(LDADD)
two_file_pie_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_two_file_relocatable_test_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
two_file_relocatable_test_OBJECTS =  \
	$(am_two_file_relocatable_test_OBJECTS)
two_file_relocatable_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(two_file_relocatable_test_LDFLAGS) $(LDFLAGS) -o $@
am_two_file_same_shared_nonpic_test_OBJECTS = two_file_test_main.$(OBJEXT)
two_file_same_shared_nonpic_test_OBJECTS =  \
	$(am_two_file_same_shared_nonpic_test_OBJECTS)
two_file_same_shared_nonpic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_same_shared_nonpic_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_file_same_shared_strip_test_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
two_file_same_shared_strip_test_OBJECTS =  \
	$(am_two_file_same_shared_strip_test_OBJECTS)
two_file_same_shared_strip_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_same_shared_strip_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_file_same_shared_test_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
two_file_same_shared_test_OBJECTS =  \
	$(am_two_file_same_shared_test_OBJECTS)
two_file_same_shared_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(two_file_same_shared_test_LDFLAGS) $(LDFLAGS) -o $@
am_two_file_separate_shared_12_nonpic_test_OBJECTS = two_file_test_main.$(OBJEXT)
two_file_separate_shared_12_nonpic_test_OBJECTS =  \
	$(am_two_file_separate_shared_12_nonpic_test_OBJECTS)
two_file_separate_shared_12_nonpic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_separate_shared_12_nonpic_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_file_separate_shared_12_test_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
two_file_separate_shared_12_test_OBJECTS =  \
	$(am_two_file_separate_shared_12_test_OBJECTS)
two_file_separate_shared_12_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_separate_shared_12_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_file_separate_shared_21_nonpic_test_OBJECTS = two_file_test_main.$(OBJEXT)
two_file_separate_shared_21_nonpic_test_OBJECTS =  \
	$(am_two_file_separate_shared_21_nonpic_test_OBJECTS)
two_file_separate_shared_21_nonpic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_separate_shared_21_nonpic_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_file_separate_shared_21_test_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
two_file_separate_shared_21_test_OBJECTS =  \
	$(am_two_file_separate_shared_21_test_OBJECTS)
two_file_separate_shared_21_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_separate_shared_21_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_file_shared_1_nonpic_test_OBJECTS = two_file_test_2.$(OBJEXT) \
	two_file_test_main.$(OBJEXT)
two_file_shared_1_nonpic_test_OBJECTS =  \
	$(am_two_file_shared_1_nonpic_test_OBJECTS)
two_file_shared_1_nonpic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_shared_1_nonpic_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_file_shared_1_pic_2_test_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
two_file_shared_1_pic_2_test_OBJECTS =  \
	$(am_two_file_shared_1_pic_2_test_OBJECTS)
two_file_shared_1_pic_2_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_shared_1_pic_2_test_LDFLAGS) $(LDFLAGS) \
	-o $@
am_two_file_shared_1_test_OBJECTS =  \
	two_file_test_2.$(OBJEXT) \
	two_file_test_main.$(OBJEXT)
two_file_shared_1_test_OBJECTS = $(am_two_file_shared_1_test_OBJECTS)
two_file_shared_1_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(two_file_shared_1_test_LDFLAGS) $(LDFLAGS) -o $@
am_two_file_shared_2_nonpic_test_OBJECTS = two_file_test_1.$(OBJEXT) \
	two_file_test_1b.$(OBJEXT) \
	two_file_test_main.$(OBJEXT)
two_file_shared_2_nonpic_test_OBJECTS =  \
	$(am_two_file_shared_2_nonpic_test_OBJECTS)
two_file_shared_2_nonpic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_shared_2_nonpic_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_two_file_shared_2_pic_1_test_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
two_file_shared_2_pic_1_test_OBJECTS =  \
	$(am_two_file_shared_2_pic_1_test_OBJECTS)
two_file_shared_2_pic_1_test_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(two_file_shared_2_pic_1_test_LDFLAGS) $(LDFLAGS) \
	-o $@
am_two_file_shared_2_test_OBJECTS =  \
	two_file_test_1.$(OBJEXT) \
	two_file_test_1b.$(OBJEXT) \
	two_file_test_main.$(OBJEXT)
two_file_shared_2_test_OBJECTS = $(am_two_file_shared_2_test_OBJECTS)
two_file_shared_2_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(two_file_shared_2_test_LDFLAGS) $(LDFLAGS) -o $@
am__objects_5 =  \
	two_file_test_1.$(OBJEXT) \
	two_file_test_1b.$(OBJEXT) \
	two_file_test_2.$(OBJEXT) \
	two_file_test_main.$(OBJEXT)
am_two_file_static_test_OBJECTS = $(am__objects_5)
two_file_static_test_OBJECTS = $(am_two_file_static_test_OBJECTS)
two_file_static_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(two_file_static_test_LDFLAGS) $(LDFLAGS) -o $@
two_file_strip_test_SOURCES = two_file_strip_test.c
two_file_strip_test_OBJECTS = two_file_strip_test.$(OBJEXT)
two_file_strip_test_LDADD = $(LDADD)
two_file_strip_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_two_file_test_OBJECTS =  \
	two_file_test_1.$(OBJEXT) \
	two_file_test_1b.$(OBJEXT) \
	two_file_test_2.$(OBJEXT) \
	two_file_test_main.$(OBJEXT)
two_file_test_OBJECTS = $(am_two_file_test_OBJECTS)
two_file_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(two_file_test_LDFLAGS) $(LDFLAGS) -o $@
am_ver_test_OBJECTS =  \
	ver_test_main.$(OBJEXT)
ver_test_OBJECTS = $(am_ver_test_OBJECTS)
ver_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(ver_test_LDFLAGS) $(LDFLAGS) -o $@
am_ver_test_11_OBJECTS =  \
	ver_test_main_2.$(OBJEXT)
ver_test_11_OBJECTS = $(am_ver_test_11_OBJECTS)
ver_test_11_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(ver_test_11_LDFLAGS) $(LDFLAGS) -o $@
am_ver_test_12_OBJECTS =  \
	ver_test_main_2.$(OBJEXT)
ver_test_12_OBJECTS = $(am_ver_test_12_OBJECTS)
ver_test_12_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(ver_test_12_LDFLAGS) $(LDFLAGS) -o $@
am_ver_test_2_OBJECTS =  \
	ver_test_main_2.$(OBJEXT)
ver_test_2_OBJECTS = $(am_ver_test_2_OBJECTS)
ver_test_2_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(ver_test_2_LDFLAGS) $(LDFLAGS) -o $@
am_ver_test_6_OBJECTS =  \
	ver_test_6.$(OBJEXT)
ver_test_6_OBJECTS = $(am_ver_test_6_OBJECTS)
ver_test_6_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(ver_test_6_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ver_test_8_OBJECTS =  \
	two_file_test_main.$(OBJEXT)
ver_test_8_OBJECTS = $(am_ver_test_8_OBJECTS)
ver_test_8_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(ver_test_8_LDFLAGS) $(LDFLAGS) -o $@
am_ver_test_9_OBJECTS =  \
	ver_test_main.$(OBJEXT)
ver_test_9_OBJECTS = $(am_ver_test_9_OBJECTS)
ver_test_9_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(ver_test_9_LDFLAGS) $(LDFLAGS) -o $@
am_weak_alias_test_OBJECTS =  \
	weak_alias_test_main.$(OBJEXT)
weak_alias_test_OBJECTS = $(am_weak_alias_test_OBJECTS)
weak_alias_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(weak_alias_test_LDFLAGS) $(LDFLAGS) -o $@
weak_plt_SOURCES = weak_plt.c
weak_plt_OBJECTS = weak_plt.$(OBJEXT)
weak_plt_LDADD = $(LDADD)
weak_plt_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_weak_test_OBJECTS =  \
	weak_test.$(OBJEXT)
weak_test_OBJECTS = $(am_weak_test_OBJECTS)
weak_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(weak_test_LDFLAGS) $(LDFLAGS) -o $@
am_weak_undef_nonpic_test_OBJECTS = weak_undef_test.$(OBJEXT)
weak_undef_nonpic_test_OBJECTS = $(am_weak_undef_nonpic_test_OBJECTS)
weak_undef_nonpic_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(weak_undef_nonpic_test_LDFLAGS) $(LDFLAGS) -o $@
am_weak_undef_test_OBJECTS =  \
	weak_undef_test.$(OBJEXT)
weak_undef_test_OBJECTS = $(am_weak_undef_test_OBJECTS)
weak_undef_test_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(weak_undef_test_LDFLAGS) $(LDFLAGS) -o $@
am_weak_undef_test_2_OBJECTS =  \
	weak_undef_test_2.$(OBJEXT)
weak_undef_test_2_OBJECTS = $(am_weak_undef_test_2_OBJECTS)
weak_undef_test_2_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(weak_undef_test_2_LDFLAGS) $(LDFLAGS) -o $@
am_weak_unresolved_symbols_test_OBJECTS = weak_unresolved_symbols_test-weak_unresolved_symbols_test.$(OBJEXT)
weak_unresolved_symbols_test_OBJECTS =  \
	$(am_weak_unresolved_symbols_test_OBJECTS)
weak_unresolved_symbols_test_LDADD = $(LDADD)
weak_unresolved_symbols_test_DEPENDENCIES = libgoldtest.a ../libgold.a \
	../../libiberty/libiberty.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
weak_unresolved_symbols_test_LINK = $(CXXLD) \
	$(weak_unresolved_symbols_test_CXXFLAGS) $(CXXFLAGS) \
	$(weak_unresolved_symbols_test_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CCLD = $(CC)
CXXLD = $(CXX)
SOURCES = $(libgoldtest_a_SOURCES) basic_pic_test.c basic_pie_test.c \
	basic_static_pic_test.c basic_static_test.c basic_test.c \
	$(binary_test_SOURCES) $(binary_unittest_SOURCES) \
	$(common_test_1_SOURCES) $(common_test_2_SOURCES) \
	$(constructor_static_test_SOURCES) $(constructor_test_SOURCES) \
	$(copy_test_SOURCES) $(copy_test_relro_SOURCES) \
	$(discard_locals_test_SOURCES) $(dynamic_list_2_SOURCES) \
	eh_test.c $(ehdr_start_test_1_SOURCES) \
	$(ehdr_start_test_2_SOURCES) $(ehdr_start_test_3_SOURCES) \
	$(ehdr_start_test_5_SOURCES) \
	$(exception_same_shared_test_SOURCES) \
	$(exception_separate_shared_12_test_SOURCES) \
	$(exception_separate_shared_21_test_SOURCES) \
	$(exception_shared_1_test_SOURCES) \
	$(exception_shared_2_test_SOURCES) \
	$(exception_static_test_SOURCES) $(exception_test_SOURCES) \
	$(exception_x86_64_bnd_test_SOURCES) \
	$(exclude_libs_test_SOURCES) \
	flagstest_compress_debug_sections.c \
	flagstest_compress_debug_sections_and_build_id_tree.c \
	flagstest_compress_debug_sections_gabi.c \
	flagstest_compress_debug_sections_gnu.c \
	flagstest_compress_debug_sections_none.c \
	flagstest_o_specialfile.c \
	flagstest_o_specialfile_and_compress_debug_sections.c \
	flagstest_o_ttext_1.c icf_virtual_function_folding_test.c \
	$(ifuncmain1_SOURCES) ifuncmain1pic.c ifuncmain1picstatic.c \
	ifuncmain1pie.c $(ifuncmain1static_SOURCES) \
	ifuncmain1staticpic.c ifuncmain1staticpie.c \
	$(ifuncmain1vis_SOURCES) ifuncmain1vispic.c ifuncmain1vispie.c \
	$(ifuncmain2_SOURCES) ifuncmain2pic.c ifuncmain2picstatic.c \
	$(ifuncmain2static_SOURCES) $(ifuncmain3_SOURCES) \
	$(ifuncmain4_SOURCES) ifuncmain4picstatic.c \
	$(ifuncmain4static_SOURCES) $(ifuncmain5_SOURCES) \
	ifuncmain5pic.c ifuncmain5picstatic.c ifuncmain5pie.c \
	$(ifuncmain5static_SOURCES) ifuncmain5staticpic.c \
	ifuncmain6pie.c $(ifuncmain7_SOURCES) ifuncmain7pic.c \
	ifuncmain7picstatic.c ifuncmain7pie.c \
	$(ifuncmain7static_SOURCES) $(ifuncvar_SOURCES) \
	incremental_comdat_test_1.c incremental_common_test_1.c \
	incremental_copy_test.c incremental_test_2.c \
	incremental_test_3.c incremental_test_4.c incremental_test_5.c \
	incremental_test_6.c $(initpri1_SOURCES) $(initpri2_SOURCES) \
	$(initpri3a_SOURCES) $(justsyms_SOURCES) \
	$(justsyms_exec_SOURCES) $(large_SOURCES) \
	$(large_symbol_alignment_SOURCES) $(leb128_unittest_SOURCES) \
	local_labels_test.c many_sections_r_test.c \
	$(many_sections_test_SOURCES) $(object_unittest_SOURCES) \
	$(overflow_unittest_SOURCES) permission_test.c \
	$(pie_copyrelocs_test_SOURCES) plugin_test_1.c \
	plugin_test_10.c plugin_test_11.c plugin_test_12.c \
	plugin_test_2.c plugin_test_3.c plugin_test_4.c \
	plugin_test_5.c plugin_test_6.c plugin_test_7.c \
	plugin_test_8.c plugin_test_start_lib.c plugin_test_tls.c \
	pr17704a_test.c $(pr20216a_test_SOURCES) \
	$(pr20216b_test_SOURCES) $(pr20216c_test_SOURCES) \
	$(pr20216d_test_SOURCES) $(pr20216e_test_SOURCES) \
	$(pr20308a_test_SOURCES) $(pr20308b_test_SOURCES) \
	$(pr20308c_test_SOURCES) $(pr20308d_test_SOURCES) \
	$(pr20308e_test_SOURCES) pr20976.c pr22266.c \
	$(protected_1_SOURCES) $(protected_2_SOURCES) \
	$(relro_now_test_SOURCES) $(relro_script_test_SOURCES) \
	$(relro_strip_test_SOURCES) $(relro_test_SOURCES) \
	$(script_test_1_SOURCES) script_test_11.c script_test_12.c \
	script_test_12i.c $(script_test_2_SOURCES) script_test_3.c \
	$(searched_file_test_SOURCES) start_lib_test.c \
	$(thin_archive_test_1_SOURCES) $(thin_archive_test_2_SOURCES) \
	$(tls_phdrs_script_test_SOURCES) $(tls_pic_test_SOURCES) \
	tls_pie_pic_test.c tls_pie_test.c $(tls_script_test_SOURCES) \
	$(tls_shared_gd_to_ie_test_SOURCES) \
	$(tls_shared_gnu2_gd_to_ie_test_SOURCES) \
	$(tls_shared_gnu2_test_SOURCES) $(tls_shared_ie_test_SOURCES) \
	$(tls_shared_nonpic_test_SOURCES) $(tls_shared_test_SOURCES) \
	$(tls_static_pic_test_SOURCES) $(tls_static_test_SOURCES) \
	$(tls_test_SOURCES) $(two_file_mixed_2_shared_test_SOURCES) \
	two_file_mixed_pie_test.c \
	$(two_file_mixed_shared_test_SOURCES) \
	$(two_file_pic_test_SOURCES) two_file_pie_test.c \
	$(two_file_relocatable_test_SOURCES) \
	$(two_file_same_shared_nonpic_test_SOURCES) \
	$(two_file_same_shared_strip_test_SOURCES) \
	$(two_file_same_shared_test_SOURCES) \
	$(two_file_separate_shared_12_nonpic_test_SOURCES) \
	$(two_file_separate_shared_12_test_SOURCES) \
	$(two_file_separate_shared_21_nonpic_test_SOURCES) \
	$(two_file_separate_shared_21_test_SOURCES) \
	$(two_file_shared_1_nonpic_test_SOURCES) \
	$(two_file_shared_1_pic_2_test_SOURCES) \
	$(two_file_shared_1_test_SOURCES) \
	$(two_file_shared_2_nonpic_test_SOURCES) \
	$(two_file_shared_2_pic_1_test_SOURCES) \
	$(two_file_shared_2_test_SOURCES) \
	$(two_file_static_test_SOURCES) two_file_strip_test.c \
	$(two_file_test_SOURCES) $(ver_test_SOURCES) \
	$(ver_test_11_SOURCES) $(ver_test_12_SOURCES) \
	$(ver_test_2_SOURCES) $(ver_test_6_SOURCES) \
	$(ver_test_8_SOURCES) $(ver_test_9_SOURCES) \
	$(weak_alias_test_SOURCES) weak_plt.c $(weak_test_SOURCES) \
	$(weak_undef_nonpic_test_SOURCES) $(weak_undef_test_SOURCES) \
	$(weak_undef_test_2_SOURCES) \
	$(weak_unresolved_symbols_test_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
# Restructured Text title and section.
am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
am__rst_section = sed 'p;s/./=/g;p;g'
# Put stdin (possibly several lines separated by ".  ") in a box.
# Prefix each line by 'col' and terminate each with 'std', for coloring.
# Multi line coloring is problematic with "less -R", so we really need
# to color each line individually.
am__text_box = $(AWK) '{			\
  n = split($$0, lines, "\\.  "); max = 0;	\
  for (i = 1; i <= n; ++i)			\
    if (max < length(lines[i]))			\
      max = length(lines[i]);			\
  for (i = 0; i < max; ++i)			\
    line = line "=";				\
  print col line std;				\
  for (i = 1; i <= n; ++i)			\
    if (lines[i])				\
      print col lines[i] std;			\
  print col line std;				\
}'
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log, and passes
# TESTS_ENVIRONMENT.  Save and restore TERM around use of
# TESTS_ENVIRONMENT, in case that unsets it.
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
srcdir=$(srcdir); export srcdir;			\
rm -f $@-t;						\
am__trap='rm -f '\''$(abs_builddir)/$@-t'\''; (exit $$st); exit $$st'; \
trap "st=129; $$am__trap" 1; trap "st=130; $$am__trap" 2;	\
trap "st=141; $$am__trap" 13; trap "st=143; $$am__trap" 15; \
am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;		\
test "x$$am__odir" = x. || $(MKDIR_P) "$$am__odir" || exit $$?;	\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; __SAVED_TERM=$$TERM;		\
$(TESTS_ENVIRONMENT)
# To be appended to the command running the test.  Handle the stdout
# and stderr redirection, and catch the exit status.
am__check_post = \
>$@-t 2>&1;						\
estatus=$$?;						\
if test -n '$(DISABLE_HARD_ERRORS)'			\
   && test $$estatus -eq 99; then			\
  estatus=1;						\
fi;							\
TERM=$$__SAVED_TERM; export TERM;			\
$(am__tty_colors);					\
xfailed=PASS;						\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    xfailed=XFAIL;;					\
esac;							\
case $$estatus.$$xfailed in				\
    0.XFAIL) col=$$red; res=XPASS;;			\
    0.*)     col=$$grn; res=PASS ;;			\
    77.*)    col=$$blu; res=SKIP ;;			\
    99.*)    col=$$red; res=FAIL ;;			\
    *.XFAIL) col=$$lgn; res=XFAIL;;			\
    *.*)     col=$$red; res=FAIL ;;			\
esac;							\
echo "$${col}$$res$${std}: $$f";			\
echo "$$res: $$f (exit: $$estatus)" |			\
  $(am__rst_section) >$@;				\
cat $@-t >>$@;						\
rm -f $@-t
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck check-html recheck-html
TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
TEST_LOGS_TMP = $(TEST_LOGS:.log=.log-t)
ACLOCAL = ${SHELL} /opt/shared/sok-arm/gt/build_arm/binutils-2.30/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /opt/shared/sok-arm/gt/build_arm/binutils-2.30/missing --run autoconf
AUTOHEADER = ${SHELL} /opt/shared/sok-arm/gt/build_arm/binutils-2.30/missing --run autoheader
AUTOMAKE = ${SHELL} /opt/shared/sok-arm/gt/build_arm/binutils-2.30/missing --run automake-1.11
AWK = gawk
CATALOGS =  es.gmo fi.gmo fr.gmo id.gmo it.gmo ja.gmo sv.gmo uk.gmo vi.gmo zh_CN.gmo es.gmo fi.gmo fr.gmo id.gmo it.gmo ja.gmo sv.gmo uk.gmo vi.gmo zh_CN.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DEFAULT_TARGET = arm
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLOPEN_LIBS = -ldl
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GENCAT = gencat
GMSGFMT = /usr/bin/msgfmt
GOLD_LDADD = 
GOLD_LDFLAGS = 
GREP = /bin/grep
INCINTL = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = /usr/bin/install -c -m 644
INSTALL_PROGRAM = /usr/bin/install -c
INSTALL_SCRIPT = /usr/bin/install -c
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
LDFLAGS = -static-libstdc++ -static-libgcc 
LFS_CFLAGS = -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
LIBINTL = 
LIBINTL_DEP = 
LIBOBJS = 
LIBS = -ldl 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = makeinfo --split-size=5000000
MERGE_CONSTANTS_FLAG = -fmerge-constants
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = $(top_builddir)/./../mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = nm
NO_WERROR = 
OBJEXT = o
PACKAGE = gold
PACKAGE_BUGREPORT = 
PACKAGE_NAME = gold
PACKAGE_STRING = gold 0.1
PACKAGE_TARNAME = gold
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
POSUB = po
RANDOM_SEED_CFLAGS = -frandom-seed=$@
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
TARGETOBJS = $(ALL_TARGETOBJS)
USE_NLS = yes
VERSION = 0.1
WARN_CFLAGS = -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wstack-usage=262144
WARN_CFLAGS_FOR_BUILD = -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wstack-usage=262144
WARN_CXXFLAGS = -W -Wall    -Wstack-usage=262144
WARN_WRITE_STRINGS = -Wwrite-strings
XGETTEXT = /usr/bin/xgettext
YACC = bison -y
YFLAGS = 
abs_builddir = /opt/shared/sok-arm/gt/build_arm/binutils-2.30/gold/testsuite
abs_srcdir = /opt/shared/sok-arm/gt/build_arm/binutils-2.30/gold/testsuite
abs_top_builddir = /opt/shared/sok-arm/gt/build_arm/binutils-2.30/gold
abs_top_srcdir = /opt/shared/sok-arm/gt/build_arm/binutils-2.30/gold
ac_ct_CC = 
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = armv7l-unknown-linux-gnueabihf
build_alias = armv7l-unknown-linux-gnueabihf
build_cpu = armv7l
build_os = linux-gnueabihf
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = armv7l-unknown-linux-gnueabihf
host_alias = armv7l-unknown-linux-gnueabihf
host_cpu = armv7l
host_os = linux-gnueabihf
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_as_default = 
install_sh = ${SHELL} /opt/shared/sok-arm/gt/build_arm/binutils-2.30/install-sh
installed_linker = ld.gold
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/shared/sok-arm/gt/build_arm/executable_binutils_debug
program_transform_name = s,y,y,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = armv7l-unknown-linux-gnueabihf
target_alias = armv7l-unknown-linux-gnueabihf
target_cpu = armv7l
target_os = linux-gnueabihf
target_vendor = unknown
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
zlibdir = 
zlibinc = 

# Ignore warning about AM_PROG_CC_C_O due to large_CFLAGS
AUTOMAKE_OPTIONS = foreign -Wno-portability

# This is where we get zlib from.  zlib is in ../../zlib unless we were
# configured with --with-system-zlib, in which case ../../zlib either
# doesn't exist or not configured.
ZLIB = -L../../zlib -lz

# The two_file_test tests -fmerge-constants, so we simply always turn
# it on.  For compilers that do not support the command-line option,
# we assume they just always emit SHF_MERGE sections unconditionally.
AM_CFLAGS = $(WARN_CFLAGS) $(LFS_CFLAGS) $(MERGE_CONSTANTS_FLAG)
AM_CXXFLAGS = $(WARN_CXXFLAGS) $(LFS_CFLAGS) $(MERGE_CONSTANTS_FLAG)
AM_CPPFLAGS = \
	-I$(srcdir) -I$(srcdir)/.. -I$(srcdir)/../../include \
	-I$(srcdir)/../../elfcpp -I.. \
	-DLOCALEDIR="\"$(datadir)/locale\"" \
	


# Some versions of GCC now automatically enable linker plugins,
# but we want to run our tests without GCC's plugins.
OPT_NO_PLUGINS = -fno-use-linker-plugin

# COMPILE1, LINK1, CXXCOMPILE1, CXXLINK1 are renamed from COMPILE, LINK,
# CXXCOMPILE and CXXLINK generated by automake 1.11.1.  FIXME: they should
# be updated if they are different from automake used by gold.
COMPILE1 = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)

LINK1 = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(OPT_NO_PLUGINS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@

CXXCOMPILE1 = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)

CXXLINK1 = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(OPT_NO_PLUGINS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@


# Strip out -Wp,-D_FORTIFY_SOURCE=, which is irrelevant for the gold
# testsuite and incompatible with -O0 used in gold tests, from
# COMPILE, LINK, CXXCOMPILE and CXXLINK.
COMPILE = `echo $(COMPILE1) | sed -e 's/-Wp,-D_FORTIFY_SOURCE=[0-9[0-9]]*//'`
LINK = `echo $(LINK1) | sed -e 's/-Wp,-D_FORTIFY_SOURCE=[0-9][0-9]*//'`
CXXCOMPILE = `echo $(CXXCOMPILE1) | sed -e 's/-Wp,-D_FORTIFY_SOURCE=[0-9][0-9]*//'`
CXXLINK = `echo $(CXXLINK1) | sed -e 's/-Wp,-D_FORTIFY_SOURCE=[0-9][0-9]*//'`

# Strip out -static-libgcc and -static-libstdc++ options, for tests
# that must have these libraries linked dynamically.  The -shared-libgcc
# option does not work correctly, and there is no -shared-libstdc++ option.
# (See GCC PR 55781 and PR 55782.)
CXXLINK_S = `echo $(CXXLINK1) | sed -e 's/-static-lib\\(gcc\\|stdc++\\)//g'`
TEST_READELF = $(top_builddir)/../binutils/readelf
TEST_OBJDUMP = $(top_builddir)/../binutils/objdump
TEST_OBJCOPY = $(top_builddir)/../binutils/objcopy
TEST_CXXFILT = $(top_builddir)/../binutils/cxxfilt
TEST_STRIP = $(top_builddir)/../binutils/strip-new
TEST_AR = $(top_builddir)/../binutils/ar
TEST_NM = $(top_builddir)/../binutils/nm-new
TEST_AS = $(top_builddir)/../gas/as-new
LIBDL = -ldl
#THREADSLIB = -lpthread
TLS_TEST_C_CFLAGS = -fopenmp

# 'make clean' is good about deleting some intermediate files (such as
# .o's), but not all of them (such as .so's and .err files).  We
# improve on that here.  automake-1.9 info docs say "mostlyclean" is
# the right choice for files 'make' builds that people rebuild.
MOSTLYCLEANFILES = *.so *.syms *.stdout $(am__append_4) \
	$(am__append_17) $(am__append_21) $(am__append_31) \
	$(am__append_34) $(am__append_37) $(am__append_41) \
	$(am__append_47) $(am__append_51) $(am__append_52) \
	$(am__append_58) $(am__append_78) $(am__append_81) \
	$(am__append_83) $(am__append_87) $(am__append_90) \
	$(am__append_93) $(am__append_96) $(am__append_99) \
	$(am__append_102) $(am__append_105) $(am__append_106)

# We will add to these later, for each individual test.  Note
# that we add each test under check_SCRIPTS or check_PROGRAMS;
# the TESTS variable is automatically populated from these.
check_SCRIPTS = $(am__append_2) $(am__append_19) $(am__append_23) \
	$(am__append_29) $(am__append_35) $(am__append_42) \
	$(am__append_45) $(am__append_49) $(am__append_53) \
	$(am__append_56) $(am__append_62) $(am__append_73) \
	$(am__append_76) $(am__append_79) $(am__append_85) \
	$(am__append_88) $(am__append_91) $(am__append_94) \
	$(am__append_97) $(am__append_100) $(am__append_103) \
	$(am__append_107)
check_DATA = $(am__append_3) $(am__append_20) $(am__append_24) \
	$(am__append_30) $(am__append_36) $(am__append_43) \
	$(am__append_46) $(am__append_50) $(am__append_54) \
	$(am__append_57) $(am__append_63) $(am__append_74) \
	$(am__append_77) $(am__append_80) $(am__append_86) \
	$(am__append_89) $(am__append_92) $(am__append_95) \
	$(am__append_98) $(am__append_101) $(am__append_104) \
	$(am__append_108)
BUILT_SOURCES = $(am__append_40)
TESTS = $(check_SCRIPTS) $(check_PROGRAMS)

# ---------------------------------------------------------------------
# These tests test the internals of gold (unittests).

# Infrastucture needed for the unittests
check_LIBRARIES = libgoldtest.a
libgoldtest_a_SOURCES = test.cc testmain.cc testfile.cc
DEPENDENCIES = \
	libgoldtest.a ../libgold.a ../../libiberty/libiberty.a $(LIBINTL_DEP)

LDADD = libgoldtest.a ../libgold.a ../../libiberty/libiberty.a $(LIBINTL) \
	$(THREADSLIB) $(LIBDL) $(ZLIB)

object_unittest_SOURCES = object_unittest.cc
binary_unittest_SOURCES = binary_unittest.cc
leb128_unittest_SOURCES = leb128_unittest.cc
overflow_unittest_SOURCES = overflow_unittest.cc
large_symbol_alignment_SOURCES = large_symbol_alignment.cc
large_symbol_alignment_DEPENDENCIES = gcctestdir/ld
large_symbol_alignment_LDFLAGS = -Bgcctestdir/
large_symbol_alignment_LDADD = 
constructor_test_SOURCES = constructor_test.cc
constructor_test_DEPENDENCIES = gcctestdir/ld
constructor_test_LDFLAGS = -Bgcctestdir/
constructor_test_LDADD = 
constructor_static_test_SOURCES = $(constructor_test_SOURCES)
constructor_static_test_DEPENDENCIES = $(constructor_test_DEPENDENCIES)
constructor_static_test_LDFLAGS = $(constructor_test_LDFLAGS) -static
constructor_static_test_LDADD = $(constructor_test_LDADD)
two_file_test_SOURCES = \
	two_file_test_1.cc \
	two_file_test_1b.cc \
	two_file_test_2.cc \
	two_file_test_main.cc \
	two_file_test.h

two_file_test_DEPENDENCIES = gcctestdir/ld
two_file_test_LDFLAGS = -Bgcctestdir/
two_file_test_LDADD = 
two_file_static_test_SOURCES = $(two_file_test_SOURCES)
two_file_static_test_DEPENDENCIES = $(two_file_test_DEPENDENCIES)
two_file_static_test_LDFLAGS = $(two_file_test_LDFLAGS) -static
two_file_static_test_LDADD = $(two_file_test_LDADD)
two_file_pic_test_SOURCES = two_file_test_main.cc
two_file_pic_test_DEPENDENCIES = \
	gcctestdir/ld two_file_test_1_pic.o two_file_test_1b_pic.o two_file_test_2_pic.o

two_file_pic_test_LDFLAGS = -Bgcctestdir/
two_file_pic_test_LDADD = two_file_test_1_pic.o two_file_test_1b_pic.o two_file_test_2_pic.o
two_file_shared_1_test_SOURCES = two_file_test_2.cc two_file_test_main.cc
two_file_shared_1_test_DEPENDENCIES = gcctestdir/ld two_file_shared_1.so
two_file_shared_1_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_shared_1_test_LDADD = two_file_shared_1.so
two_file_shared_2_test_SOURCES = two_file_test_1.cc two_file_test_1b.cc two_file_test_main.cc
two_file_shared_2_test_DEPENDENCIES = gcctestdir/ld two_file_shared_2.so
two_file_shared_2_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_shared_2_test_LDADD = two_file_shared_2.so
two_file_shared_1_pic_2_test_SOURCES = two_file_test_main.cc
two_file_shared_1_pic_2_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_2.so two_file_test_1_pic.o two_file_test_1b_pic.o

two_file_shared_1_pic_2_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_shared_1_pic_2_test_LDADD = two_file_test_1_pic.o two_file_test_1b_pic.o two_file_shared_2.so
two_file_shared_2_pic_1_test_SOURCES = two_file_test_main.cc
two_file_shared_2_pic_1_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_1.so two_file_test_2_pic.o

two_file_shared_2_pic_1_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_shared_2_pic_1_test_LDADD = two_file_test_2_pic.o two_file_shared_1.so
two_file_same_shared_test_SOURCES = two_file_test_main.cc
two_file_same_shared_test_DEPENDENCIES = gcctestdir/ld two_file_shared.so
two_file_same_shared_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_same_shared_test_LDADD = two_file_shared.so
two_file_separate_shared_12_test_SOURCES = two_file_test_main.cc
two_file_separate_shared_12_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_1.so two_file_shared_2.so

two_file_separate_shared_12_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_separate_shared_12_test_LDADD = \
	two_file_shared_1.so two_file_shared_2.so

two_file_separate_shared_21_test_SOURCES = two_file_test_main.cc
two_file_separate_shared_21_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_1.so two_file_shared_2.so

two_file_separate_shared_21_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_separate_shared_21_test_LDADD = \
	two_file_shared_2.so two_file_shared_1.so

two_file_relocatable_test_SOURCES = two_file_test_main.cc
two_file_relocatable_test_DEPENDENCIES = \
	gcctestdir/ld two_file_relocatable.o

two_file_relocatable_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_relocatable_test_LDADD = two_file_relocatable.o
pie_copyrelocs_test_SOURCES = pie_copyrelocs_test.cc
pie_copyrelocs_test_DEPENDENCIES = gcctestdir/ld pie_copyrelocs_shared_test.so
pie_copyrelocs_test_CXXFLAGS = -fno-exceptions -fno-asynchronous-unwind-tables
pie_copyrelocs_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,. -pie
pie_copyrelocs_test_LDADD = pie_copyrelocs_shared_test.so
weak_unresolved_symbols_test_SOURCES = weak_unresolved_symbols_test.cc
weak_unresolved_symbols_test_CXXFLAGS = -fPIE
weak_unresolved_symbols_test_LDFLAGS = -Bgcctestdir/ -pie -Wl,--weak-unresolved-symbols
two_file_shared_1_nonpic_test_SOURCES = \
	two_file_test_2.cc two_file_test_main.cc

two_file_shared_1_nonpic_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_1_nonpic.so

two_file_shared_1_nonpic_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_shared_1_nonpic_test_LDADD = two_file_shared_1_nonpic.so
two_file_shared_2_nonpic_test_SOURCES = \
	two_file_test_1.cc two_file_test_1b.cc two_file_test_main.cc

two_file_shared_2_nonpic_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_2_nonpic.so

two_file_shared_2_nonpic_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_shared_2_nonpic_test_LDADD = two_file_shared_2_nonpic.so
two_file_same_shared_nonpic_test_SOURCES = two_file_test_main.cc
two_file_same_shared_nonpic_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_nonpic.so

two_file_same_shared_nonpic_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_same_shared_nonpic_test_LDADD = two_file_shared_nonpic.so
two_file_separate_shared_12_nonpic_test_SOURCES = two_file_test_main.cc
two_file_separate_shared_12_nonpic_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_1_nonpic.so two_file_shared_2_nonpic.so

two_file_separate_shared_12_nonpic_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_separate_shared_12_nonpic_test_LDADD = \
	two_file_shared_1_nonpic.so two_file_shared_2_nonpic.so

two_file_separate_shared_21_nonpic_test_SOURCES = two_file_test_main.cc
two_file_separate_shared_21_nonpic_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_1_nonpic.so two_file_shared_2_nonpic.so

two_file_separate_shared_21_nonpic_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_separate_shared_21_nonpic_test_LDADD = \
	two_file_shared_2_nonpic.so two_file_shared_1_nonpic.so

two_file_mixed_shared_test_SOURCES = two_file_test_main.cc
two_file_mixed_shared_test_DEPENDENCIES = gcctestdir/ld two_file_shared_mixed.so
two_file_mixed_shared_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_mixed_shared_test_LDADD = two_file_shared_mixed.so
two_file_mixed_2_shared_test_SOURCES = two_file_test_main.cc
two_file_mixed_2_shared_test_DEPENDENCIES = gcctestdir/ld two_file_shared_mixed_1.so two_file_shared_2.so
two_file_mixed_2_shared_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
two_file_mixed_2_shared_test_LDADD = two_file_shared_mixed_1.so two_file_shared_2.so
two_file_same_shared_strip_test_SOURCES = two_file_test_main.cc
two_file_same_shared_strip_test_DEPENDENCIES = \
	gcctestdir/ld two_file_shared_strip.so

two_file_same_shared_strip_test_LDFLAGS = -Bgcctestdir/ -Wl,-R.
two_file_same_shared_strip_test_LDADD = two_file_shared_strip.so
common_test_1_SOURCES = common_test_1.c
common_test_1_DEPENDENCIES = gcctestdir/ld
common_test_1_LDFLAGS = -Bgcctestdir/
common_test_1_LDADD = 
common_test_2_SOURCES = common_test_1.c
common_test_2_DEPENDENCIES = common_test_2.so common_test_3.so gcctestdir/ld
common_test_2_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
common_test_2_LDADD = common_test_2.so common_test_3.so
exception_test_SOURCES = \
	exception_test_main.cc \
	exception_test_1.cc \
	exception_test_2.cc \
	exception_test.h

exception_test_DEPENDENCIES = gcctestdir/ld
exception_test_LDFLAGS = -Bgcctestdir/
exception_test_LDADD = 
exception_static_test_SOURCES = $(exception_test_SOURCES)
exception_static_test_DEPENDENCIES = $(exception_test_DEPENDENCIES)
exception_static_test_LDFLAGS = $(exception_test_LDFLAGS) -static
exception_static_test_LDADD = $(exception_test_LDADD)
exception_shared_1_test_SOURCES = exception_test_2.cc exception_test_main.cc
exception_shared_1_test_DEPENDENCIES = gcctestdir/ld exception_shared_1.so
exception_shared_1_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
exception_shared_1_test_LDADD = exception_shared_1.so
exception_shared_2_test_SOURCES = exception_test_1.cc exception_test_main.cc
exception_shared_2_test_DEPENDENCIES = gcctestdir/ld exception_shared_2.so
exception_shared_2_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
exception_shared_2_test_LDADD = exception_shared_2.so
exception_same_shared_test_SOURCES = exception_test_main.cc
exception_same_shared_test_DEPENDENCIES = gcctestdir/ld exception_shared.so
exception_same_shared_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
exception_same_shared_test_LDADD = exception_shared.so
exception_separate_shared_12_test_SOURCES = exception_test_main.cc
exception_separate_shared_12_test_DEPENDENCIES = \
	gcctestdir/ld exception_shared_1.so exception_shared_2.so

exception_separate_shared_12_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,. \
	-Wl,--no-as-needed

exception_separate_shared_12_test_LDADD = \
	exception_shared_1.so exception_shared_2.so

exception_separate_shared_21_test_SOURCES = exception_test_main.cc
exception_separate_shared_21_test_DEPENDENCIES = \
	gcctestdir/ld exception_shared_1.so exception_shared_2.so

exception_separate_shared_21_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,. \
	-Wl,--no-as-needed

exception_separate_shared_21_test_LDADD = \
	exception_shared_2.so exception_shared_1.so

weak_test_SOURCES = weak_test.cc
weak_test_DEPENDENCIES = gcctestdir/ld
weak_test_LDFLAGS = -Bgcctestdir/
weak_test_LDADD = 
weak_undef_test_SOURCES = weak_undef_test.cc
weak_undef_test_DEPENDENCIES = gcctestdir/ld weak_undef_lib.so alt/weak_undef_lib.so
weak_undef_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,alt
weak_undef_test_LDADD = -L . weak_undef_lib.so
weak_undef_test_2_SOURCES = weak_undef_test_2.cc
weak_undef_test_2_DEPENDENCIES = gcctestdir/ld libweak_undef_2.a
weak_undef_test_2_LDFLAGS = -Bgcctestdir/ -u weak_undef_2
weak_undef_test_2_LDADD = -L . -lweak_undef_2
weak_undef_nonpic_test_SOURCES = weak_undef_test.cc
weak_undef_nonpic_test_DEPENDENCIES = gcctestdir/ld weak_undef_lib_nonpic.so alt/weak_undef_lib_nonpic.so
weak_undef_nonpic_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,alt
weak_undef_nonpic_test_LDADD = -L . weak_undef_lib_nonpic.so
weak_alias_test_SOURCES = weak_alias_test_main.cc
weak_alias_test_DEPENDENCIES = \
	gcctestdir/ld weak_alias_test_1.so weak_alias_test_2.so \
	weak_alias_test_3.o weak_alias_test_4.so weak_alias_test_5.so

weak_alias_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
weak_alias_test_LDADD = \
	weak_alias_test_1.so weak_alias_test_2.so weak_alias_test_3.o \
	weak_alias_test_4.so weak_alias_test_5.so

copy_test_SOURCES = copy_test.cc
copy_test_DEPENDENCIES = gcctestdir/ld copy_test_1.so copy_test_2.so
copy_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
copy_test_LDADD = copy_test_1.so copy_test_2.so
copy_test_relro_SOURCES = copy_test_relro.cc
copy_test_relro_DEPENDENCIES = gcctestdir/ld copy_test_relro_1.so
copy_test_relro_LDFLAGS = -Bgcctestdir/ -Wl,-R,. -Wl,-z,relro
copy_test_relro_LDADD = copy_test_relro_1.so
tls_test_SOURCES = tls_test.cc tls_test_file2.cc tls_test_main.cc tls_test.h
tls_test_DEPENDENCIES = gcctestdir/ld tls_test_c.o
tls_test_LDFLAGS = -Bgcctestdir/
tls_test_LDADD = tls_test_c.o -lpthread
tls_pic_test_SOURCES = tls_test_main.cc
tls_pic_test_DEPENDENCIES = gcctestdir/ld tls_test_pic.o tls_test_file2_pic.o \
	tls_test_c_pic.o

tls_pic_test_LDFLAGS = -Bgcctestdir/
tls_pic_test_LDADD = tls_test_pic.o tls_test_file2_pic.o tls_test_c_pic.o \
	-lpthread

tls_shared_test_SOURCES = tls_test_main.cc
tls_shared_test_DEPENDENCIES = gcctestdir/ld tls_test_shared.so
tls_shared_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
tls_shared_test_LDADD = tls_test_shared.so -lpthread
tls_shared_ie_test_SOURCES = tls_test_main.cc
tls_shared_ie_test_DEPENDENCIES = gcctestdir/ld tls_test_ie_shared.so
tls_shared_ie_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
tls_shared_ie_test_LDADD = tls_test_ie_shared.so -lpthread
tls_shared_gd_to_ie_test_SOURCES = tls_test_main.cc
tls_shared_gd_to_ie_test_DEPENDENCIES = gcctestdir/ld tls_test_pic.o \
	tls_test_c_pic.o tls_test_shared2.so

tls_shared_gd_to_ie_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
tls_shared_gd_to_ie_test_LDADD = tls_test_pic.o tls_test_c_pic.o \
	tls_test_shared2.so -lpthread

tls_shared_gnu2_gd_to_ie_test_SOURCES = tls_test_main.cc
tls_shared_gnu2_gd_to_ie_test_DEPENDENCIES = gcctestdir/ld tls_test_gnu2.o \
	tls_test_c_gnu2.o tls_test_gnu2_shared2.so

tls_shared_gnu2_gd_to_ie_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
tls_shared_gnu2_gd_to_ie_test_LDADD = tls_test_gnu2.o tls_test_c_gnu2.o \
	tls_test_gnu2_shared2.so -lpthread

tls_shared_gnu2_test_SOURCES = tls_test_main.cc
tls_shared_gnu2_test_DEPENDENCIES = gcctestdir/ld tls_test_gnu2_shared.so
tls_shared_gnu2_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
tls_shared_gnu2_test_LDADD = tls_test_gnu2_shared.so -lpthread
tls_static_test_SOURCES = $(tls_test_SOURCES)
tls_static_test_DEPENDENCIES = $(tls_test_DEPENDENCIES)
tls_static_test_LDFLAGS = $(tls_test_LDFLAGS) -static
tls_static_test_LDADD = $(tls_test_LDADD)
tls_static_pic_test_SOURCES = $(tls_pic_test_SOURCES)
tls_static_pic_test_DEPENDENCIES = $(tls_pic_test_DEPENDENCIES)
tls_static_pic_test_LDFLAGS = $(tls_pic_test_LDFLAGS) -static
tls_static_pic_test_LDADD = $(tls_pic_test_LDADD)
tls_shared_nonpic_test_SOURCES = tls_test_main.cc
tls_shared_nonpic_test_DEPENDENCIES = gcctestdir/ld tls_test_shared_nonpic.so
tls_shared_nonpic_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
tls_shared_nonpic_test_LDADD = tls_test_shared_nonpic.so -lpthread
#pr20216a_test_SOURCES = pr20216_main.c pr20216_def.c
#pr20216a_test_DEPENDENCIES = pr20216_gd.o pr20216_ld.o gcctestdir/ld gcctestdir/as
#pr20216a_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20216a_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
#pr20216a_test_LDADD = pr20216_gd.o pr20216_ld.o
#pr20216b_test_SOURCES = pr20216_main.c pr20216_def.c
#pr20216b_test_DEPENDENCIES = pr20216_gd.o pr20216_ld.o gcctestdir/ld gcctestdir/as
#pr20216b_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20216b_test_LDFLAGS = -pie -Bgcctestdir/ -Wl,-R,.
#pr20216b_test_LDADD = pr20216_gd.o pr20216_ld.o
#pr20216c_test_SOURCES = pr20216_main.c pr20216_def.c
#pr20216c_test_DEPENDENCIES = pr20216_gd.o pr20216_ld.o gcctestdir/ld gcctestdir/as
#pr20216c_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20216c_test_LDFLAGS = -static -Bgcctestdir/ -Wl,-R,.
#pr20216c_test_LDADD = pr20216_gd.o pr20216_ld.o
#pr20216d_test_SOURCES = pr20216_main.c pr20216_def.c
#pr20216d_test_DEPENDENCIES = pr20216a.so gcctestdir/ld gcctestdir/as
#pr20216d_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20216d_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
#pr20216d_test_LDADD = pr20216a.so
#pr20216e_test_SOURCES = pr20216_main.c
#pr20216e_test_DEPENDENCIES = pr20216_gd.o pr20216_ld.o pr20216b.so gcctestdir/ld gcctestdir/as
#pr20216e_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20216e_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
#pr20216e_test_LDADD = pr20216_gd.o pr20216_ld.o pr20216b.so
#pr20308a_test_SOURCES = pr20308_main.c pr20308_def.c
#pr20308a_test_DEPENDENCIES = pr20308_gd.o pr20308_ld.o gcctestdir/ld gcctestdir/as
#pr20308a_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20308a_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
#pr20308a_test_LDADD = pr20308_gd.o pr20308_ld.o
#pr20308b_test_SOURCES = pr20308_main.c pr20308_def.c
#pr20308b_test_DEPENDENCIES = pr20308_gd.o pr20308_ld.o gcctestdir/ld gcctestdir/as
#pr20308b_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20308b_test_LDFLAGS = -pie -Bgcctestdir/ -Wl,-R,.
#pr20308b_test_LDADD = pr20308_gd.o pr20308_ld.o
#pr20308c_test_SOURCES = pr20308_main.c pr20308_def.c
#pr20308c_test_DEPENDENCIES = pr20308_gd.o pr20308_ld.o gcctestdir/ld gcctestdir/as
#pr20308c_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20308c_test_LDFLAGS = -static -Bgcctestdir/ -Wl,-R,.
#pr20308c_test_LDADD = pr20308_gd.o pr20308_ld.o
#pr20308d_test_SOURCES = pr20308_main.c pr20308_def.c
#pr20308d_test_DEPENDENCIES = pr20308a.so gcctestdir/ld gcctestdir/as
#pr20308d_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20308d_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
#pr20308d_test_LDADD = pr20308a.so
#pr20308e_test_SOURCES = pr20308_main.c
#pr20308e_test_DEPENDENCIES = pr20308_gd.o pr20308_ld.o pr20308b.so gcctestdir/ld gcctestdir/as
#pr20308e_test_CFLAGS = -Bgcctestdir/ -fPIE
#pr20308e_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
#pr20308e_test_LDADD = pr20308_gd.o pr20308_ld.o pr20308b.so
many_sections_test_SOURCES = many_sections_test.cc
many_sections_test_DEPENDENCIES = gcctestdir/ld
many_sections_test_LDFLAGS = -Bgcctestdir/ -rdynamic
many_sections_test_LDADD = 
initpri1_SOURCES = initpri1.c
initpri1_DEPENDENCIES = gcctestdir/ld
initpri1_LDFLAGS = -Bgcctestdir/
initpri1_LDADD = 
initpri2_SOURCES = initpri2.c
initpri2_DEPENDENCIES = gcctestdir/ld
initpri2_LDFLAGS = -Bgcctestdir/ -Wl,--ctors-in-init-array
initpri2_LDADD = 
initpri3a_SOURCES = initpri3.c
initpri3a_DEPENDENCIES = gcctestdir/ld
initpri3a_LDFLAGS = -Bgcctestdir/
initpri3a_LDADD = 
ver_test_SOURCES = ver_test_main.cc
ver_test_DEPENDENCIES = gcctestdir/ld ver_test_1.so ver_test_2.so ver_test_4.so
ver_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ver_test_LDADD = ver_test_1.so ver_test_2.so ver_test_4.so
ver_test_2_SOURCES = ver_test_main_2.cc
ver_test_2_DEPENDENCIES = gcctestdir/ld ver_test_4.so ver_test_2.so
ver_test_2_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ver_test_2_LDADD = ver_test_4.so ver_test_2.so
ver_test_6_SOURCES = ver_test_6.c
ver_test_6_DEPENDENCIES = gcctestdir/ld ver_test_2.so
ver_test_6_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ver_test_6_LDADD = ver_test_2.so
ver_test_8_SOURCES = two_file_test_main.cc
ver_test_8_DEPENDENCIES = gcctestdir/ld ver_test_8_1.so ver_test_8_2.so
ver_test_8_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ver_test_8_LDADD = ver_test_8_1.so ver_test_8_2.so
ver_test_9_SOURCES = ver_test_main.cc
ver_test_9_DEPENDENCIES = gcctestdir/ld ver_test_9.so
ver_test_9_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ver_test_9_LDADD = ver_test_9.so
ver_test_11_SOURCES = ver_test_main_2.cc
ver_test_11_DEPENDENCIES = gcctestdir/ld ver_test_11.a
ver_test_11_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ver_test_11_LDADD = ver_test_11.a
ver_test_12_SOURCES = ver_test_main_2.cc
ver_test_12_DEPENDENCIES = gcctestdir/ld ver_test_12.o
ver_test_12_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ver_test_12_LDADD = ver_test_12.o
protected_1_SOURCES = \
	protected_main_1.cc protected_main_2.cc protected_main_3.cc

protected_1_DEPENDENCIES = gcctestdir/ld protected_1.so
protected_1_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
protected_1_LDADD = protected_1.so
protected_2_SOURCES = protected_main_1.cc protected_3.cc
protected_2_DEPENDENCIES = gcctestdir/ld protected_1.so
protected_2_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
protected_2_LDADD = protected_1.so
relro_test_SOURCES = relro_test_main.cc
relro_test_DEPENDENCIES = gcctestdir/ld relro_test.so
relro_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
relro_test_LDADD = relro_test.so
relro_now_test_SOURCES = relro_test_main.cc
relro_now_test_DEPENDENCIES = gcctestdir/ld relro_now_test.so
relro_now_test_LDFLAGS = -Bgcctestdir -Wl,-R,. -Wl,-z,relro -Wl,-z,now
relro_now_test_LDADD = relro_now_test.so
relro_strip_test_SOURCES = relro_test_main.cc
relro_strip_test_DEPENDENCIES = gcctestdir/ld relro_strip_test.so
relro_strip_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
relro_strip_test_LDADD = relro_strip_test.so
relro_script_test_SOURCES = relro_test_main.cc
relro_script_test_DEPENDENCIES = gcctestdir/ld relro_script_test.so
relro_script_test_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
relro_script_test_LDADD = relro_script_test.so
script_test_1_SOURCES = script_test_1a.cc script_test_1b.cc
script_test_1_DEPENDENCIES = gcctestdir/ld script_test_1.t
script_test_1_LDFLAGS = -Bgcctestdir/ -Wl,-R,. -Wl,-T,$(srcdir)/script_test_1.t
script_test_1_LDADD = 
script_test_2_SOURCES = script_test_2.cc script_test_2a.cc script_test_2b.cc
script_test_2_DEPENDENCIES = gcctestdir/ld script_test_2.t
script_test_2_LDFLAGS = -Bgcctestdir/ -Wl,-R,. -Wl,-T,$(srcdir)/script_test_2.t
script_test_2_LDADD = 
justsyms_SOURCES = justsyms_1.cc
justsyms_DEPENDENCIES = gcctestdir/ld justsyms_2r.o
justsyms_LDFLAGS = -Bgcctestdir/ -Wl,-R,justsyms_2r.o
justsyms_LDADD = 
justsyms_exec_SOURCES = justsyms_exec.c
justsyms_exec_DEPENDENCIES = gcctestdir/ld justsyms_lib
justsyms_exec_LDFLAGS = -Bgcctestdir/ -Wl,-R,justsyms_lib
justsyms_exec_LDADD = 
binary_test_SOURCES = binary_test.cc
binary_test_DEPENDENCIES = gcctestdir/ld binary.txt
binary_test_LDFLAGS = -Bgcctestdir/ -Wl,--format,binary,binary.txt,--format,elf
binary_test_LDADD = 
tls_phdrs_script_test_SOURCES = $(tls_test_SOURCES)
tls_phdrs_script_test_DEPENDENCIES = $(tls_test_DEPENDENCIES) $(srcdir)/script_test_3.t
tls_phdrs_script_test_LDFLAGS = $(tls_test_LDFLAGS) -Wl,-T,$(srcdir)/script_test_3.t
tls_phdrs_script_test_LDADD = $(tls_test_LDADD)
tls_script_test_SOURCES = $(tls_test_SOURCES)
tls_script_test_DEPENDENCIES = $(tls_test_DEPENDENCIES) $(srcdir)/script_test_4.t
tls_script_test_LDFLAGS = $(tls_test_LDFLAGS) -Wl,-T,$(srcdir)/script_test_4.t
tls_script_test_LDADD = $(tls_test_LDADD)
dynamic_list_2_SOURCES = dynamic_list_2.cc
dynamic_list_2_DEPENDENCIES = gcctestdir/ld dynamic_list_lib1.so dynamic_list_lib2.so
dynamic_list_2_LDFLAGS = -Bgcctestdir/ -L. -Wl,-R,. -Wl,--no-as-needed
dynamic_list_2_LDADD = dynamic_list_lib1.so dynamic_list_lib2.so
thin_archive_test_1_SOURCES = thin_archive_main.cc
thin_archive_test_1_DEPENDENCIES = gcctestdir/ld libthin1.a alt/libthin2.a
thin_archive_test_1_LDFLAGS = -Bgcctestdir/ -Lalt
thin_archive_test_1_LDADD = libthin1.a -lthin2
thin_archive_test_2_SOURCES = thin_archive_main.cc
thin_archive_test_2_DEPENDENCIES = gcctestdir/ld libthinall.a
thin_archive_test_2_LDFLAGS = -Bgcctestdir/ -L.
thin_archive_test_2_LDADD = -lthinall
PLUGIN_TEST_11_SYMS = two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o.syms
exclude_libs_test_SOURCES = exclude_libs_test.c
exclude_libs_test_DEPENDENCIES = gcctestdir/ld libexclude_libs_test_1.a \
	libexclude_libs_test_2.a alt/libexclude_libs_test_3.a

exclude_libs_test_LDFLAGS = -Bgcctestdir/ -L. -Lalt \
	-Wl,--exclude-libs,dummy:libexclude_libs_test_1 \
	-Wl,--exclude-libs,libexclude_libs_test_3

exclude_libs_test_LDADD = -lexclude_libs_test_1 -lexclude_libs_test_2 \
	alt/libexclude_libs_test_3.a

discard_locals_test_SOURCES = discard_locals_test.c
discard_locals_test_LDFLAGS = -Bgcctestdir/ -Wl,--discard-locals
#large_SOURCES = large.c
#large_CFLAGS = -mcmodel=medium
#large_DEPENDENCIES = gcctestdir/ld
#large_LDFLAGS = -Bgcctestdir/
#large_LDADD = 
searched_file_test_SOURCES = searched_file_test.cc
searched_file_test_DEPENDENCIES = gcctestdir/ld alt/searched_file_test_lib.a
searched_file_test_LDFLAGS = -Bgcctestdir/ -Lalt
searched_file_test_LDADD = -l:searched_file_test_lib.a
ifuncmain1static_SOURCES = ifuncmain1.c
ifuncmain1static_DEPENDENCIES = gcctestdir/ld ifuncdep1.o
ifuncmain1static_LDFLAGS = -Bgcctestdir/ -static
ifuncmain1static_LDADD = ifuncdep1.o
ifuncmain1_SOURCES = ifuncmain1.c
ifuncmain1_DEPENDENCIES = gcctestdir/ld ifuncmod1.so
ifuncmain1_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ifuncmain1_LDADD = ifuncmod1.so
ifuncmain1vis_SOURCES = ifuncmain1vis.c
ifuncmain1vis_DEPENDENCIES = gcctestdir/ld ifuncmod1.so
ifuncmain1vis_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ifuncmain1vis_LDADD = ifuncmod1.so
ifuncmain2static_SOURCES = ifuncmain2.c ifuncdep2.c
ifuncmain2static_DEPENDENCIES = gcctestdir/ld
ifuncmain2static_LDFLAGS = -Bgcctestdir/ -static
ifuncmain2static_LDADD = 
ifuncmain2_SOURCES = ifuncmain2.c ifuncdep2.c
ifuncmain2_DEPENDENCIES = gcctestdir/ld
ifuncmain2_LDFLAGS = -Bgcctestdir/
ifuncmain2_LDADD = 
ifuncmain3_SOURCES = ifuncmain3.c
ifuncmain3_DEPENDENCIES = gcctestdir/ld ifuncmod3.so
ifuncmain3_LDFLAGS = -Bgcctestdir/ -Wl,--export-dynamic -Wl,-R,.
ifuncmain3_LDADD = -ldl
ifuncmain4static_SOURCES = ifuncmain4.c
ifuncmain4static_DEPENDENCIES = gcctestdir/ld
ifuncmain4static_LDFLAGS = -Bgcctestdir/ -static
ifuncmain4static_LDADD = 
ifuncmain4_SOURCES = ifuncmain4.c
ifuncmain4_DEPENDENCIES = gcctestdir/ld
ifuncmain4_LDFLAGS = -Bgcctestdir/
ifuncmain4_LDADD = 
ifuncmain5static_SOURCES = ifuncmain5.c
ifuncmain5static_DEPENDENCIES = gcctestdir/ld ifuncdep5.o
ifuncmain5static_LDFLAGS = -Bgcctestdir/ -static
ifuncmain5static_LDADD = ifuncdep5.o
ifuncmain5_SOURCES = ifuncmain5.c
ifuncmain5_DEPENDENCIES = gcctestdir/ld ifuncmod5.so
ifuncmain5_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ifuncmain5_LDADD = ifuncmod5.so
ifuncmain7static_SOURCES = ifuncmain7.c
ifuncmain7static_DEPENDENCIES = gcctestdir/ld
ifuncmain7static_LDFLAGS = -Bgcctestdir/ -static
ifuncmain7static_LDADD = 
ifuncmain7_SOURCES = ifuncmain7.c
ifuncmain7_DEPENDENCIES = gcctestdir/ld
ifuncmain7_LDFLAGS = -Bgcctestdir/
ifuncmain7_LDADD = 
ifuncvar_SOURCES = ifuncvar3.c
ifuncvar_DEPENDENCIES = gcctestdir/ld ifuncvar.so
ifuncvar_LDFLAGS = -Bgcctestdir/ -Wl,-R,.
ifuncvar_LDADD = ifuncvar.so
ehdr_start_test_1_SOURCES = ehdr_start_test.cc
ehdr_start_test_1_DEPENDENCIES = gcctestdir/ld
ehdr_start_test_1_CXXFLAGS = 
ehdr_start_test_1_LDFLAGS = -Bgcctestdir/
ehdr_start_test_1_LDADD = 
ehdr_start_test_2_SOURCES = ehdr_start_test.cc
ehdr_start_test_2_DEPENDENCIES = gcctestdir/ld
ehdr_start_test_2_CXXFLAGS = -DEHDR_START_WEAK
ehdr_start_test_2_LDFLAGS = -Bgcctestdir/
ehdr_start_test_2_LDADD = 
ehdr_start_test_3_SOURCES = ehdr_start_test.cc
ehdr_start_test_3_DEPENDENCIES = gcctestdir/ld $(srcdir)/ehdr_start_test.t
ehdr_start_test_3_CXXFLAGS = -DEHDR_START_WEAK
ehdr_start_test_3_LDFLAGS = -Bgcctestdir/ -Wl,-T,$(srcdir)/ehdr_start_test.t
ehdr_start_test_3_LDADD = 
ehdr_start_test_5_SOURCES = ehdr_start_test.cc ehdr_start_def.cc
ehdr_start_test_5_DEPENDENCIES = gcctestdir/ld
ehdr_start_test_5_CXXFLAGS = -DEHDR_START_USER_DEF
ehdr_start_test_5_LDFLAGS = -Bgcctestdir/
ehdr_start_test_5_LDADD = 
#exception_x86_64_bnd_test_SOURCES = exception_test_main.cc
#exception_x86_64_bnd_test_DEPENDENCIES = gcctestdir/ld exception_x86_64_bnd_1.o exception_x86_64_bnd_2.o
#exception_x86_64_bnd_test_LDFLAGS = $(exception_test_LDFLAGS) -Wl,-z,bndplt
#exception_x86_64_bnd_test_LDADD = exception_x86_64_bnd_1.o exception_x86_64_bnd_2.o
#SPLIT_DEFSYMS = --defsym __morestack=0x100 --defsym __morestack_non_split=0x200
#SPLIT_DEFSYMS = --defsym __morestack=0x100 --defsym __morestack_non_split=0x200
#SPLIT_DEFSYMS = --defsym __morestack=0x100 --defsym __morestack_non_split=0x200
#SPLIT_DEFSYMS = --defsym __morestack=0x100 --defsym __morestack_non_split=0x200
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .html .log .o .obj .test .test$(EXEEXT)
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign testsuite/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign testsuite/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLIBRARIES:
	-test -z "$(check_LIBRARIES)" || rm -f $(check_LIBRARIES)
libgoldtest.a: $(libgoldtest_a_OBJECTS) $(libgoldtest_a_DEPENDENCIES) $(EXTRA_libgoldtest_a_DEPENDENCIES) 
	-rm -f libgoldtest.a
	$(libgoldtest_a_AR) libgoldtest.a $(libgoldtest_a_OBJECTS) $(libgoldtest_a_LIBADD)
	$(RANLIB) libgoldtest.a

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
#basic_pic_test$(EXEEXT): $(basic_pic_test_OBJECTS) $(basic_pic_test_DEPENDENCIES) $(EXTRA_basic_pic_test_DEPENDENCIES) 
#	@rm -f basic_pic_test$(EXEEXT)
#	$(LINK) $(basic_pic_test_OBJECTS) $(basic_pic_test_LDADD) $(LIBS)
#basic_pic_test$(EXEEXT): $(basic_pic_test_OBJECTS) $(basic_pic_test_DEPENDENCIES) $(EXTRA_basic_pic_test_DEPENDENCIES) 
#	@rm -f basic_pic_test$(EXEEXT)
#	$(LINK) $(basic_pic_test_OBJECTS) $(basic_pic_test_LDADD) $(LIBS)
#basic_pie_test$(EXEEXT): $(basic_pie_test_OBJECTS) $(basic_pie_test_DEPENDENCIES) $(EXTRA_basic_pie_test_DEPENDENCIES) 
#	@rm -f basic_pie_test$(EXEEXT)
#	$(LINK) $(basic_pie_test_OBJECTS) $(basic_pie_test_LDADD) $(LIBS)
#basic_pie_test$(EXEEXT): $(basic_pie_test_OBJECTS) $(basic_pie_test_DEPENDENCIES) $(EXTRA_basic_pie_test_DEPENDENCIES) 
#	@rm -f basic_pie_test$(EXEEXT)
#	$(LINK) $(basic_pie_test_OBJECTS) $(basic_pie_test_LDADD) $(LIBS)
#basic_static_pic_test$(EXEEXT): $(basic_static_pic_test_OBJECTS) $(basic_static_pic_test_DEPENDENCIES) $(EXTRA_basic_static_pic_test_DEPENDENCIES) 
#	@rm -f basic_static_pic_test$(EXEEXT)
#	$(LINK) $(basic_static_pic_test_OBJECTS) $(basic_static_pic_test_LDADD) $(LIBS)
#basic_static_pic_test$(EXEEXT): $(basic_static_pic_test_OBJECTS) $(basic_static_pic_test_DEPENDENCIES) $(EXTRA_basic_static_pic_test_DEPENDENCIES) 
#	@rm -f basic_static_pic_test$(EXEEXT)
#	$(LINK) $(basic_static_pic_test_OBJECTS) $(basic_static_pic_test_LDADD) $(LIBS)
#basic_static_pic_test$(EXEEXT): $(basic_static_pic_test_OBJECTS) $(basic_static_pic_test_DEPENDENCIES) $(EXTRA_basic_static_pic_test_DEPENDENCIES) 
#	@rm -f basic_static_pic_test$(EXEEXT)
#	$(LINK) $(basic_static_pic_test_OBJECTS) $(basic_static_pic_test_LDADD) $(LIBS)
#basic_static_test$(EXEEXT): $(basic_static_test_OBJECTS) $(basic_static_test_DEPENDENCIES) $(EXTRA_basic_static_test_DEPENDENCIES) 
#	@rm -f basic_static_test$(EXEEXT)
#	$(LINK) $(basic_static_test_OBJECTS) $(basic_static_test_LDADD) $(LIBS)
#basic_static_test$(EXEEXT): $(basic_static_test_OBJECTS) $(basic_static_test_DEPENDENCIES) $(EXTRA_basic_static_test_DEPENDENCIES) 
#	@rm -f basic_static_test$(EXEEXT)
#	$(LINK) $(basic_static_test_OBJECTS) $(basic_static_test_LDADD) $(LIBS)
#basic_static_test$(EXEEXT): $(basic_static_test_OBJECTS) $(basic_static_test_DEPENDENCIES) $(EXTRA_basic_static_test_DEPENDENCIES) 
#	@rm -f basic_static_test$(EXEEXT)
#	$(LINK) $(basic_static_test_OBJECTS) $(basic_static_test_LDADD) $(LIBS)
#basic_test$(EXEEXT): $(basic_test_OBJECTS) $(basic_test_DEPENDENCIES) $(EXTRA_basic_test_DEPENDENCIES) 
#	@rm -f basic_test$(EXEEXT)
#	$(LINK) $(basic_test_OBJECTS) $(basic_test_LDADD) $(LIBS)
#basic_test$(EXEEXT): $(basic_test_OBJECTS) $(basic_test_DEPENDENCIES) $(EXTRA_basic_test_DEPENDENCIES) 
#	@rm -f basic_test$(EXEEXT)
#	$(LINK) $(basic_test_OBJECTS) $(basic_test_LDADD) $(LIBS)
binary_test$(EXEEXT): $(binary_test_OBJECTS) $(binary_test_DEPENDENCIES) $(EXTRA_binary_test_DEPENDENCIES) 
	@rm -f binary_test$(EXEEXT)
	$(binary_test_LINK) $(binary_test_OBJECTS) $(binary_test_LDADD) $(LIBS)
binary_unittest$(EXEEXT): $(binary_unittest_OBJECTS) $(binary_unittest_DEPENDENCIES) $(EXTRA_binary_unittest_DEPENDENCIES) 
	@rm -f binary_unittest$(EXEEXT)
	$(CXXLINK) $(binary_unittest_OBJECTS) $(binary_unittest_LDADD) $(LIBS)
common_test_1$(EXEEXT): $(common_test_1_OBJECTS) $(common_test_1_DEPENDENCIES) $(EXTRA_common_test_1_DEPENDENCIES) 
	@rm -f common_test_1$(EXEEXT)
	$(common_test_1_LINK) $(common_test_1_OBJECTS) $(common_test_1_LDADD) $(LIBS)
common_test_2$(EXEEXT): $(common_test_2_OBJECTS) $(common_test_2_DEPENDENCIES) $(EXTRA_common_test_2_DEPENDENCIES) 
	@rm -f common_test_2$(EXEEXT)
	$(common_test_2_LINK) $(common_test_2_OBJECTS) $(common_test_2_LDADD) $(LIBS)
constructor_static_test$(EXEEXT): $(constructor_static_test_OBJECTS) $(constructor_static_test_DEPENDENCIES) $(EXTRA_constructor_static_test_DEPENDENCIES) 
	@rm -f constructor_static_test$(EXEEXT)
	$(constructor_static_test_LINK) $(constructor_static_test_OBJECTS) $(constructor_static_test_LDADD) $(LIBS)
constructor_test$(EXEEXT): $(constructor_test_OBJECTS) $(constructor_test_DEPENDENCIES) $(EXTRA_constructor_test_DEPENDENCIES) 
	@rm -f constructor_test$(EXEEXT)
	$(constructor_test_LINK) $(constructor_test_OBJECTS) $(constructor_test_LDADD) $(LIBS)
copy_test$(EXEEXT): $(copy_test_OBJECTS) $(copy_test_DEPENDENCIES) $(EXTRA_copy_test_DEPENDENCIES) 
	@rm -f copy_test$(EXEEXT)
	$(copy_test_LINK) $(copy_test_OBJECTS) $(copy_test_LDADD) $(LIBS)
copy_test_relro$(EXEEXT): $(copy_test_relro_OBJECTS) $(copy_test_relro_DEPENDENCIES) $(EXTRA_copy_test_relro_DEPENDENCIES) 
	@rm -f copy_test_relro$(EXEEXT)
	$(copy_test_relro_LINK) $(copy_test_relro_OBJECTS) $(copy_test_relro_LDADD) $(LIBS)
discard_locals_test$(EXEEXT): $(discard_locals_test_OBJECTS) $(discard_locals_test_DEPENDENCIES) $(EXTRA_discard_locals_test_DEPENDENCIES) 
	@rm -f discard_locals_test$(EXEEXT)
	$(discard_locals_test_LINK) $(discard_locals_test_OBJECTS) $(discard_locals_test_LDADD) $(LIBS)
dynamic_list_2$(EXEEXT): $(dynamic_list_2_OBJECTS) $(dynamic_list_2_DEPENDENCIES) $(EXTRA_dynamic_list_2_DEPENDENCIES) 
	@rm -f dynamic_list_2$(EXEEXT)
	$(dynamic_list_2_LINK) $(dynamic_list_2_OBJECTS) $(dynamic_list_2_LDADD) $(LIBS)
#eh_test$(EXEEXT): $(eh_test_OBJECTS) $(eh_test_DEPENDENCIES) $(EXTRA_eh_test_DEPENDENCIES) 
#	@rm -f eh_test$(EXEEXT)
#	$(LINK) $(eh_test_OBJECTS) $(eh_test_LDADD) $(LIBS)
#eh_test$(EXEEXT): $(eh_test_OBJECTS) $(eh_test_DEPENDENCIES) $(EXTRA_eh_test_DEPENDENCIES) 
#	@rm -f eh_test$(EXEEXT)
#	$(LINK) $(eh_test_OBJECTS) $(eh_test_LDADD) $(LIBS)
ehdr_start_test_1$(EXEEXT): $(ehdr_start_test_1_OBJECTS) $(ehdr_start_test_1_DEPENDENCIES) $(EXTRA_ehdr_start_test_1_DEPENDENCIES) 
	@rm -f ehdr_start_test_1$(EXEEXT)
	$(ehdr_start_test_1_LINK) $(ehdr_start_test_1_OBJECTS) $(ehdr_start_test_1_LDADD) $(LIBS)
ehdr_start_test_2$(EXEEXT): $(ehdr_start_test_2_OBJECTS) $(ehdr_start_test_2_DEPENDENCIES) $(EXTRA_ehdr_start_test_2_DEPENDENCIES) 
	@rm -f ehdr_start_test_2$(EXEEXT)
	$(ehdr_start_test_2_LINK) $(ehdr_start_test_2_OBJECTS) $(ehdr_start_test_2_LDADD) $(LIBS)
ehdr_start_test_3$(EXEEXT): $(ehdr_start_test_3_OBJECTS) $(ehdr_start_test_3_DEPENDENCIES) $(EXTRA_ehdr_start_test_3_DEPENDENCIES) 
	@rm -f ehdr_start_test_3$(EXEEXT)
	$(ehdr_start_test_3_LINK) $(ehdr_start_test_3_OBJECTS) $(ehdr_start_test_3_LDADD) $(LIBS)
ehdr_start_test_5$(EXEEXT): $(ehdr_start_test_5_OBJECTS) $(ehdr_start_test_5_DEPENDENCIES) $(EXTRA_ehdr_start_test_5_DEPENDENCIES) 
	@rm -f ehdr_start_test_5$(EXEEXT)
	$(ehdr_start_test_5_LINK) $(ehdr_start_test_5_OBJECTS) $(ehdr_start_test_5_LDADD) $(LIBS)
exception_same_shared_test$(EXEEXT): $(exception_same_shared_test_OBJECTS) $(exception_same_shared_test_DEPENDENCIES) $(EXTRA_exception_same_shared_test_DEPENDENCIES) 
	@rm -f exception_same_shared_test$(EXEEXT)
	$(exception_same_shared_test_LINK) $(exception_same_shared_test_OBJECTS) $(exception_same_shared_test_LDADD) $(LIBS)
exception_separate_shared_12_test$(EXEEXT): $(exception_separate_shared_12_test_OBJECTS) $(exception_separate_shared_12_test_DEPENDENCIES) $(EXTRA_exception_separate_shared_12_test_DEPENDENCIES) 
	@rm -f exception_separate_shared_12_test$(EXEEXT)
	$(exception_separate_shared_12_test_LINK) $(exception_separate_shared_12_test_OBJECTS) $(exception_separate_shared_12_test_LDADD) $(LIBS)
exception_separate_shared_21_test$(EXEEXT): $(exception_separate_shared_21_test_OBJECTS) $(exception_separate_shared_21_test_DEPENDENCIES) $(EXTRA_exception_separate_shared_21_test_DEPENDENCIES) 
	@rm -f exception_separate_shared_21_test$(EXEEXT)
	$(exception_separate_shared_21_test_LINK) $(exception_separate_shared_21_test_OBJECTS) $(exception_separate_shared_21_test_LDADD) $(LIBS)
exception_shared_1_test$(EXEEXT): $(exception_shared_1_test_OBJECTS) $(exception_shared_1_test_DEPENDENCIES) $(EXTRA_exception_shared_1_test_DEPENDENCIES) 
	@rm -f exception_shared_1_test$(EXEEXT)
	$(exception_shared_1_test_LINK) $(exception_shared_1_test_OBJECTS) $(exception_shared_1_test_LDADD) $(LIBS)
exception_shared_2_test$(EXEEXT): $(exception_shared_2_test_OBJECTS) $(exception_shared_2_test_DEPENDENCIES) $(EXTRA_exception_shared_2_test_DEPENDENCIES) 
	@rm -f exception_shared_2_test$(EXEEXT)
	$(exception_shared_2_test_LINK) $(exception_shared_2_test_OBJECTS) $(exception_shared_2_test_LDADD) $(LIBS)
exception_static_test$(EXEEXT): $(exception_static_test_OBJECTS) $(exception_static_test_DEPENDENCIES) $(EXTRA_exception_static_test_DEPENDENCIES) 
	@rm -f exception_static_test$(EXEEXT)
	$(exception_static_test_LINK) $(exception_static_test_OBJECTS) $(exception_static_test_LDADD) $(LIBS)
exception_test$(EXEEXT): $(exception_test_OBJECTS) $(exception_test_DEPENDENCIES) $(EXTRA_exception_test_DEPENDENCIES) 
	@rm -f exception_test$(EXEEXT)
	$(exception_test_LINK) $(exception_test_OBJECTS) $(exception_test_LDADD) $(LIBS)
exception_x86_64_bnd_test$(EXEEXT): $(exception_x86_64_bnd_test_OBJECTS) $(exception_x86_64_bnd_test_DEPENDENCIES) $(EXTRA_exception_x86_64_bnd_test_DEPENDENCIES) 
	@rm -f exception_x86_64_bnd_test$(EXEEXT)
	$(exception_x86_64_bnd_test_LINK) $(exception_x86_64_bnd_test_OBJECTS) $(exception_x86_64_bnd_test_LDADD) $(LIBS)
exclude_libs_test$(EXEEXT): $(exclude_libs_test_OBJECTS) $(exclude_libs_test_DEPENDENCIES) $(EXTRA_exclude_libs_test_DEPENDENCIES) 
	@rm -f exclude_libs_test$(EXEEXT)
	$(exclude_libs_test_LINK) $(exclude_libs_test_OBJECTS) $(exclude_libs_test_LDADD) $(LIBS)
#flagstest_compress_debug_sections$(EXEEXT): $(flagstest_compress_debug_sections_OBJECTS) $(flagstest_compress_debug_sections_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_OBJECTS) $(flagstest_compress_debug_sections_LDADD) $(LIBS)
#flagstest_compress_debug_sections$(EXEEXT): $(flagstest_compress_debug_sections_OBJECTS) $(flagstest_compress_debug_sections_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_OBJECTS) $(flagstest_compress_debug_sections_LDADD) $(LIBS)
#flagstest_compress_debug_sections_and_build_id_tree$(EXEEXT): $(flagstest_compress_debug_sections_and_build_id_tree_OBJECTS) $(flagstest_compress_debug_sections_and_build_id_tree_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_and_build_id_tree_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections_and_build_id_tree$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_and_build_id_tree_OBJECTS) $(flagstest_compress_debug_sections_and_build_id_tree_LDADD) $(LIBS)
#flagstest_compress_debug_sections_and_build_id_tree$(EXEEXT): $(flagstest_compress_debug_sections_and_build_id_tree_OBJECTS) $(flagstest_compress_debug_sections_and_build_id_tree_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_and_build_id_tree_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections_and_build_id_tree$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_and_build_id_tree_OBJECTS) $(flagstest_compress_debug_sections_and_build_id_tree_LDADD) $(LIBS)
#flagstest_compress_debug_sections_gabi$(EXEEXT): $(flagstest_compress_debug_sections_gabi_OBJECTS) $(flagstest_compress_debug_sections_gabi_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_gabi_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections_gabi$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_gabi_OBJECTS) $(flagstest_compress_debug_sections_gabi_LDADD) $(LIBS)
#flagstest_compress_debug_sections_gabi$(EXEEXT): $(flagstest_compress_debug_sections_gabi_OBJECTS) $(flagstest_compress_debug_sections_gabi_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_gabi_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections_gabi$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_gabi_OBJECTS) $(flagstest_compress_debug_sections_gabi_LDADD) $(LIBS)
#flagstest_compress_debug_sections_gnu$(EXEEXT): $(flagstest_compress_debug_sections_gnu_OBJECTS) $(flagstest_compress_debug_sections_gnu_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_gnu_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections_gnu$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_gnu_OBJECTS) $(flagstest_compress_debug_sections_gnu_LDADD) $(LIBS)
#flagstest_compress_debug_sections_gnu$(EXEEXT): $(flagstest_compress_debug_sections_gnu_OBJECTS) $(flagstest_compress_debug_sections_gnu_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_gnu_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections_gnu$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_gnu_OBJECTS) $(flagstest_compress_debug_sections_gnu_LDADD) $(LIBS)
#flagstest_compress_debug_sections_none$(EXEEXT): $(flagstest_compress_debug_sections_none_OBJECTS) $(flagstest_compress_debug_sections_none_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_none_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections_none$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_none_OBJECTS) $(flagstest_compress_debug_sections_none_LDADD) $(LIBS)
#flagstest_compress_debug_sections_none$(EXEEXT): $(flagstest_compress_debug_sections_none_OBJECTS) $(flagstest_compress_debug_sections_none_DEPENDENCIES) $(EXTRA_flagstest_compress_debug_sections_none_DEPENDENCIES) 
#	@rm -f flagstest_compress_debug_sections_none$(EXEEXT)
#	$(LINK) $(flagstest_compress_debug_sections_none_OBJECTS) $(flagstest_compress_debug_sections_none_LDADD) $(LIBS)
#flagstest_o_specialfile$(EXEEXT): $(flagstest_o_specialfile_OBJECTS) $(flagstest_o_specialfile_DEPENDENCIES) $(EXTRA_flagstest_o_specialfile_DEPENDENCIES) 
#	@rm -f flagstest_o_specialfile$(EXEEXT)
#	$(LINK) $(flagstest_o_specialfile_OBJECTS) $(flagstest_o_specialfile_LDADD) $(LIBS)
#flagstest_o_specialfile$(EXEEXT): $(flagstest_o_specialfile_OBJECTS) $(flagstest_o_specialfile_DEPENDENCIES) $(EXTRA_flagstest_o_specialfile_DEPENDENCIES) 
#	@rm -f flagstest_o_specialfile$(EXEEXT)
#	$(LINK) $(flagstest_o_specialfile_OBJECTS) $(flagstest_o_specialfile_LDADD) $(LIBS)
#flagstest_o_specialfile_and_compress_debug_sections$(EXEEXT): $(flagstest_o_specialfile_and_compress_debug_sections_OBJECTS) $(flagstest_o_specialfile_and_compress_debug_sections_DEPENDENCIES) $(EXTRA_flagstest_o_specialfile_and_compress_debug_sections_DEPENDENCIES) 
#	@rm -f flagstest_o_specialfile_and_compress_debug_sections$(EXEEXT)
#	$(LINK) $(flagstest_o_specialfile_and_compress_debug_sections_OBJECTS) $(flagstest_o_specialfile_and_compress_debug_sections_LDADD) $(LIBS)
#flagstest_o_specialfile_and_compress_debug_sections$(EXEEXT): $(flagstest_o_specialfile_and_compress_debug_sections_OBJECTS) $(flagstest_o_specialfile_and_compress_debug_sections_DEPENDENCIES) $(EXTRA_flagstest_o_specialfile_and_compress_debug_sections_DEPENDENCIES) 
#	@rm -f flagstest_o_specialfile_and_compress_debug_sections$(EXEEXT)
#	$(LINK) $(flagstest_o_specialfile_and_compress_debug_sections_OBJECTS) $(flagstest_o_specialfile_and_compress_debug_sections_LDADD) $(LIBS)
#flagstest_o_ttext_1$(EXEEXT): $(flagstest_o_ttext_1_OBJECTS) $(flagstest_o_ttext_1_DEPENDENCIES) $(EXTRA_flagstest_o_ttext_1_DEPENDENCIES) 
#	@rm -f flagstest_o_ttext_1$(EXEEXT)
#	$(LINK) $(flagstest_o_ttext_1_OBJECTS) $(flagstest_o_ttext_1_LDADD) $(LIBS)
#flagstest_o_ttext_1$(EXEEXT): $(flagstest_o_ttext_1_OBJECTS) $(flagstest_o_ttext_1_DEPENDENCIES) $(EXTRA_flagstest_o_ttext_1_DEPENDENCIES) 
#	@rm -f flagstest_o_ttext_1$(EXEEXT)
#	$(LINK) $(flagstest_o_ttext_1_OBJECTS) $(flagstest_o_ttext_1_LDADD) $(LIBS)
#icf_virtual_function_folding_test$(EXEEXT): $(icf_virtual_function_folding_test_OBJECTS) $(icf_virtual_function_folding_test_DEPENDENCIES) $(EXTRA_icf_virtual_function_folding_test_DEPENDENCIES) 
#	@rm -f icf_virtual_function_folding_test$(EXEEXT)
#	$(LINK) $(icf_virtual_function_folding_test_OBJECTS) $(icf_virtual_function_folding_test_LDADD) $(LIBS)
#icf_virtual_function_folding_test$(EXEEXT): $(icf_virtual_function_folding_test_OBJECTS) $(icf_virtual_function_folding_test_DEPENDENCIES) $(EXTRA_icf_virtual_function_folding_test_DEPENDENCIES) 
#	@rm -f icf_virtual_function_folding_test$(EXEEXT)
#	$(LINK) $(icf_virtual_function_folding_test_OBJECTS) $(icf_virtual_function_folding_test_LDADD) $(LIBS)
ifuncmain1$(EXEEXT): $(ifuncmain1_OBJECTS) $(ifuncmain1_DEPENDENCIES) $(EXTRA_ifuncmain1_DEPENDENCIES) 
	@rm -f ifuncmain1$(EXEEXT)
	$(ifuncmain1_LINK) $(ifuncmain1_OBJECTS) $(ifuncmain1_LDADD) $(LIBS)
#ifuncmain1pic$(EXEEXT): $(ifuncmain1pic_OBJECTS) $(ifuncmain1pic_DEPENDENCIES) $(EXTRA_ifuncmain1pic_DEPENDENCIES) 
#	@rm -f ifuncmain1pic$(EXEEXT)
#	$(LINK) $(ifuncmain1pic_OBJECTS) $(ifuncmain1pic_LDADD) $(LIBS)
#ifuncmain1pic$(EXEEXT): $(ifuncmain1pic_OBJECTS) $(ifuncmain1pic_DEPENDENCIES) $(EXTRA_ifuncmain1pic_DEPENDENCIES) 
#	@rm -f ifuncmain1pic$(EXEEXT)
#	$(LINK) $(ifuncmain1pic_OBJECTS) $(ifuncmain1pic_LDADD) $(LIBS)
#ifuncmain1pic$(EXEEXT): $(ifuncmain1pic_OBJECTS) $(ifuncmain1pic_DEPENDENCIES) $(EXTRA_ifuncmain1pic_DEPENDENCIES) 
#	@rm -f ifuncmain1pic$(EXEEXT)
#	$(LINK) $(ifuncmain1pic_OBJECTS) $(ifuncmain1pic_LDADD) $(LIBS)
#ifuncmain1picstatic$(EXEEXT): $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_DEPENDENCIES) $(EXTRA_ifuncmain1picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain1picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_LDADD) $(LIBS)
#ifuncmain1picstatic$(EXEEXT): $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_DEPENDENCIES) $(EXTRA_ifuncmain1picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain1picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_LDADD) $(LIBS)
#ifuncmain1picstatic$(EXEEXT): $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_DEPENDENCIES) $(EXTRA_ifuncmain1picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain1picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_LDADD) $(LIBS)
#ifuncmain1picstatic$(EXEEXT): $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_DEPENDENCIES) $(EXTRA_ifuncmain1picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain1picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_LDADD) $(LIBS)
#ifuncmain1picstatic$(EXEEXT): $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_DEPENDENCIES) $(EXTRA_ifuncmain1picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain1picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain1picstatic_OBJECTS) $(ifuncmain1picstatic_LDADD) $(LIBS)
#ifuncmain1pie$(EXEEXT): $(ifuncmain1pie_OBJECTS) $(ifuncmain1pie_DEPENDENCIES) $(EXTRA_ifuncmain1pie_DEPENDENCIES) 
#	@rm -f ifuncmain1pie$(EXEEXT)
#	$(LINK) $(ifuncmain1pie_OBJECTS) $(ifuncmain1pie_LDADD) $(LIBS)
#ifuncmain1pie$(EXEEXT): $(ifuncmain1pie_OBJECTS) $(ifuncmain1pie_DEPENDENCIES) $(EXTRA_ifuncmain1pie_DEPENDENCIES) 
#	@rm -f ifuncmain1pie$(EXEEXT)
#	$(LINK) $(ifuncmain1pie_OBJECTS) $(ifuncmain1pie_LDADD) $(LIBS)
#ifuncmain1pie$(EXEEXT): $(ifuncmain1pie_OBJECTS) $(ifuncmain1pie_DEPENDENCIES) $(EXTRA_ifuncmain1pie_DEPENDENCIES) 
#	@rm -f ifuncmain1pie$(EXEEXT)
#	$(LINK) $(ifuncmain1pie_OBJECTS) $(ifuncmain1pie_LDADD) $(LIBS)
ifuncmain1static$(EXEEXT): $(ifuncmain1static_OBJECTS) $(ifuncmain1static_DEPENDENCIES) $(EXTRA_ifuncmain1static_DEPENDENCIES) 
	@rm -f ifuncmain1static$(EXEEXT)
	$(ifuncmain1static_LINK) $(ifuncmain1static_OBJECTS) $(ifuncmain1static_LDADD) $(LIBS)
#ifuncmain1staticpic$(EXEEXT): $(ifuncmain1staticpic_OBJECTS) $(ifuncmain1staticpic_DEPENDENCIES) $(EXTRA_ifuncmain1staticpic_DEPENDENCIES) 
#	@rm -f ifuncmain1staticpic$(EXEEXT)
#	$(LINK) $(ifuncmain1staticpic_OBJECTS) $(ifuncmain1staticpic_LDADD) $(LIBS)
#ifuncmain1staticpic$(EXEEXT): $(ifuncmain1staticpic_OBJECTS) $(ifuncmain1staticpic_DEPENDENCIES) $(EXTRA_ifuncmain1staticpic_DEPENDENCIES) 
#	@rm -f ifuncmain1staticpic$(EXEEXT)
#	$(LINK) $(ifuncmain1staticpic_OBJECTS) $(ifuncmain1staticpic_LDADD) $(LIBS)
#ifuncmain1staticpic$(EXEEXT): $(ifuncmain1staticpic_OBJECTS) $(ifuncmain1staticpic_DEPENDENCIES) $(EXTRA_ifuncmain1staticpic_DEPENDENCIES) 
#	@rm -f ifuncmain1staticpic$(EXEEXT)
#	$(LINK) $(ifuncmain1staticpic_OBJECTS) $(ifuncmain1staticpic_LDADD) $(LIBS)
#ifuncmain1staticpie$(EXEEXT): $(ifuncmain1staticpie_OBJECTS) $(ifuncmain1staticpie_DEPENDENCIES) $(EXTRA_ifuncmain1staticpie_DEPENDENCIES) 
#	@rm -f ifuncmain1staticpie$(EXEEXT)
#	$(LINK) $(ifuncmain1staticpie_OBJECTS) $(ifuncmain1staticpie_LDADD) $(LIBS)
#ifuncmain1staticpie$(EXEEXT): $(ifuncmain1staticpie_OBJECTS) $(ifuncmain1staticpie_DEPENDENCIES) $(EXTRA_ifuncmain1staticpie_DEPENDENCIES) 
#	@rm -f ifuncmain1staticpie$(EXEEXT)
#	$(LINK) $(ifuncmain1staticpie_OBJECTS) $(ifuncmain1staticpie_LDADD) $(LIBS)
#ifuncmain1staticpie$(EXEEXT): $(ifuncmain1staticpie_OBJECTS) $(ifuncmain1staticpie_DEPENDENCIES) $(EXTRA_ifuncmain1staticpie_DEPENDENCIES) 
#	@rm -f ifuncmain1staticpie$(EXEEXT)
#	$(LINK) $(ifuncmain1staticpie_OBJECTS) $(ifuncmain1staticpie_LDADD) $(LIBS)
ifuncmain1vis$(EXEEXT): $(ifuncmain1vis_OBJECTS) $(ifuncmain1vis_DEPENDENCIES) $(EXTRA_ifuncmain1vis_DEPENDENCIES) 
	@rm -f ifuncmain1vis$(EXEEXT)
	$(ifuncmain1vis_LINK) $(ifuncmain1vis_OBJECTS) $(ifuncmain1vis_LDADD) $(LIBS)
#ifuncmain1vispic$(EXEEXT): $(ifuncmain1vispic_OBJECTS) $(ifuncmain1vispic_DEPENDENCIES) $(EXTRA_ifuncmain1vispic_DEPENDENCIES) 
#	@rm -f ifuncmain1vispic$(EXEEXT)
#	$(LINK) $(ifuncmain1vispic_OBJECTS) $(ifuncmain1vispic_LDADD) $(LIBS)
#ifuncmain1vispic$(EXEEXT): $(ifuncmain1vispic_OBJECTS) $(ifuncmain1vispic_DEPENDENCIES) $(EXTRA_ifuncmain1vispic_DEPENDENCIES) 
#	@rm -f ifuncmain1vispic$(EXEEXT)
#	$(LINK) $(ifuncmain1vispic_OBJECTS) $(ifuncmain1vispic_LDADD) $(LIBS)
#ifuncmain1vispic$(EXEEXT): $(ifuncmain1vispic_OBJECTS) $(ifuncmain1vispic_DEPENDENCIES) $(EXTRA_ifuncmain1vispic_DEPENDENCIES) 
#	@rm -f ifuncmain1vispic$(EXEEXT)
#	$(LINK) $(ifuncmain1vispic_OBJECTS) $(ifuncmain1vispic_LDADD) $(LIBS)
#ifuncmain1vispie$(EXEEXT): $(ifuncmain1vispie_OBJECTS) $(ifuncmain1vispie_DEPENDENCIES) $(EXTRA_ifuncmain1vispie_DEPENDENCIES) 
#	@rm -f ifuncmain1vispie$(EXEEXT)
#	$(LINK) $(ifuncmain1vispie_OBJECTS) $(ifuncmain1vispie_LDADD) $(LIBS)
#ifuncmain1vispie$(EXEEXT): $(ifuncmain1vispie_OBJECTS) $(ifuncmain1vispie_DEPENDENCIES) $(EXTRA_ifuncmain1vispie_DEPENDENCIES) 
#	@rm -f ifuncmain1vispie$(EXEEXT)
#	$(LINK) $(ifuncmain1vispie_OBJECTS) $(ifuncmain1vispie_LDADD) $(LIBS)
#ifuncmain1vispie$(EXEEXT): $(ifuncmain1vispie_OBJECTS) $(ifuncmain1vispie_DEPENDENCIES) $(EXTRA_ifuncmain1vispie_DEPENDENCIES) 
#	@rm -f ifuncmain1vispie$(EXEEXT)
#	$(LINK) $(ifuncmain1vispie_OBJECTS) $(ifuncmain1vispie_LDADD) $(LIBS)
ifuncmain2$(EXEEXT): $(ifuncmain2_OBJECTS) $(ifuncmain2_DEPENDENCIES) $(EXTRA_ifuncmain2_DEPENDENCIES) 
	@rm -f ifuncmain2$(EXEEXT)
	$(ifuncmain2_LINK) $(ifuncmain2_OBJECTS) $(ifuncmain2_LDADD) $(LIBS)
#ifuncmain2pic$(EXEEXT): $(ifuncmain2pic_OBJECTS) $(ifuncmain2pic_DEPENDENCIES) $(EXTRA_ifuncmain2pic_DEPENDENCIES) 
#	@rm -f ifuncmain2pic$(EXEEXT)
#	$(LINK) $(ifuncmain2pic_OBJECTS) $(ifuncmain2pic_LDADD) $(LIBS)
#ifuncmain2pic$(EXEEXT): $(ifuncmain2pic_OBJECTS) $(ifuncmain2pic_DEPENDENCIES) $(EXTRA_ifuncmain2pic_DEPENDENCIES) 
#	@rm -f ifuncmain2pic$(EXEEXT)
#	$(LINK) $(ifuncmain2pic_OBJECTS) $(ifuncmain2pic_LDADD) $(LIBS)
#ifuncmain2pic$(EXEEXT): $(ifuncmain2pic_OBJECTS) $(ifuncmain2pic_DEPENDENCIES) $(EXTRA_ifuncmain2pic_DEPENDENCIES) 
#	@rm -f ifuncmain2pic$(EXEEXT)
#	$(LINK) $(ifuncmain2pic_OBJECTS) $(ifuncmain2pic_LDADD) $(LIBS)
#ifuncmain2picstatic$(EXEEXT): $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_DEPENDENCIES) $(EXTRA_ifuncmain2picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain2picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_LDADD) $(LIBS)
#ifuncmain2picstatic$(EXEEXT): $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_DEPENDENCIES) $(EXTRA_ifuncmain2picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain2picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_LDADD) $(LIBS)
#ifuncmain2picstatic$(EXEEXT): $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_DEPENDENCIES) $(EXTRA_ifuncmain2picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain2picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_LDADD) $(LIBS)
#ifuncmain2picstatic$(EXEEXT): $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_DEPENDENCIES) $(EXTRA_ifuncmain2picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain2picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_LDADD) $(LIBS)
#ifuncmain2picstatic$(EXEEXT): $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_DEPENDENCIES) $(EXTRA_ifuncmain2picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain2picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain2picstatic_OBJECTS) $(ifuncmain2picstatic_LDADD) $(LIBS)
ifuncmain2static$(EXEEXT): $(ifuncmain2static_OBJECTS) $(ifuncmain2static_DEPENDENCIES) $(EXTRA_ifuncmain2static_DEPENDENCIES) 
	@rm -f ifuncmain2static$(EXEEXT)
	$(ifuncmain2static_LINK) $(ifuncmain2static_OBJECTS) $(ifuncmain2static_LDADD) $(LIBS)
ifuncmain3$(EXEEXT): $(ifuncmain3_OBJECTS) $(ifuncmain3_DEPENDENCIES) $(EXTRA_ifuncmain3_DEPENDENCIES) 
	@rm -f ifuncmain3$(EXEEXT)
	$(ifuncmain3_LINK) $(ifuncmain3_OBJECTS) $(ifuncmain3_LDADD) $(LIBS)
ifuncmain4$(EXEEXT): $(ifuncmain4_OBJECTS) $(ifuncmain4_DEPENDENCIES) $(EXTRA_ifuncmain4_DEPENDENCIES) 
	@rm -f ifuncmain4$(EXEEXT)
	$(ifuncmain4_LINK) $(ifuncmain4_OBJECTS) $(ifuncmain4_LDADD) $(LIBS)
#ifuncmain4picstatic$(EXEEXT): $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_DEPENDENCIES) $(EXTRA_ifuncmain4picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain4picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_LDADD) $(LIBS)
#ifuncmain4picstatic$(EXEEXT): $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_DEPENDENCIES) $(EXTRA_ifuncmain4picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain4picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_LDADD) $(LIBS)
#ifuncmain4picstatic$(EXEEXT): $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_DEPENDENCIES) $(EXTRA_ifuncmain4picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain4picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_LDADD) $(LIBS)
#ifuncmain4picstatic$(EXEEXT): $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_DEPENDENCIES) $(EXTRA_ifuncmain4picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain4picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_LDADD) $(LIBS)
#ifuncmain4picstatic$(EXEEXT): $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_DEPENDENCIES) $(EXTRA_ifuncmain4picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain4picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain4picstatic_OBJECTS) $(ifuncmain4picstatic_LDADD) $(LIBS)
ifuncmain4static$(EXEEXT): $(ifuncmain4static_OBJECTS) $(ifuncmain4static_DEPENDENCIES) $(EXTRA_ifuncmain4static_DEPENDENCIES) 
	@rm -f ifuncmain4static$(EXEEXT)
	$(ifuncmain4static_LINK) $(ifuncmain4static_OBJECTS) $(ifuncmain4static_LDADD) $(LIBS)
ifuncmain5$(EXEEXT): $(ifuncmain5_OBJECTS) $(ifuncmain5_DEPENDENCIES) $(EXTRA_ifuncmain5_DEPENDENCIES) 
	@rm -f ifuncmain5$(EXEEXT)
	$(ifuncmain5_LINK) $(ifuncmain5_OBJECTS) $(ifuncmain5_LDADD) $(LIBS)
#ifuncmain5pic$(EXEEXT): $(ifuncmain5pic_OBJECTS) $(ifuncmain5pic_DEPENDENCIES) $(EXTRA_ifuncmain5pic_DEPENDENCIES) 
#	@rm -f ifuncmain5pic$(EXEEXT)
#	$(LINK) $(ifuncmain5pic_OBJECTS) $(ifuncmain5pic_LDADD) $(LIBS)
#ifuncmain5pic$(EXEEXT): $(ifuncmain5pic_OBJECTS) $(ifuncmain5pic_DEPENDENCIES) $(EXTRA_ifuncmain5pic_DEPENDENCIES) 
#	@rm -f ifuncmain5pic$(EXEEXT)
#	$(LINK) $(ifuncmain5pic_OBJECTS) $(ifuncmain5pic_LDADD) $(LIBS)
#ifuncmain5pic$(EXEEXT): $(ifuncmain5pic_OBJECTS) $(ifuncmain5pic_DEPENDENCIES) $(EXTRA_ifuncmain5pic_DEPENDENCIES) 
#	@rm -f ifuncmain5pic$(EXEEXT)
#	$(LINK) $(ifuncmain5pic_OBJECTS) $(ifuncmain5pic_LDADD) $(LIBS)
#ifuncmain5picstatic$(EXEEXT): $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_DEPENDENCIES) $(EXTRA_ifuncmain5picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain5picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_LDADD) $(LIBS)
#ifuncmain5picstatic$(EXEEXT): $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_DEPENDENCIES) $(EXTRA_ifuncmain5picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain5picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_LDADD) $(LIBS)
#ifuncmain5picstatic$(EXEEXT): $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_DEPENDENCIES) $(EXTRA_ifuncmain5picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain5picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_LDADD) $(LIBS)
#ifuncmain5picstatic$(EXEEXT): $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_DEPENDENCIES) $(EXTRA_ifuncmain5picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain5picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_LDADD) $(LIBS)
#ifuncmain5picstatic$(EXEEXT): $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_DEPENDENCIES) $(EXTRA_ifuncmain5picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain5picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain5picstatic_OBJECTS) $(ifuncmain5picstatic_LDADD) $(LIBS)
#ifuncmain5pie$(EXEEXT): $(ifuncmain5pie_OBJECTS) $(ifuncmain5pie_DEPENDENCIES) $(EXTRA_ifuncmain5pie_DEPENDENCIES) 
#	@rm -f ifuncmain5pie$(EXEEXT)
#	$(LINK) $(ifuncmain5pie_OBJECTS) $(ifuncmain5pie_LDADD) $(LIBS)
#ifuncmain5pie$(EXEEXT): $(ifuncmain5pie_OBJECTS) $(ifuncmain5pie_DEPENDENCIES) $(EXTRA_ifuncmain5pie_DEPENDENCIES) 
#	@rm -f ifuncmain5pie$(EXEEXT)
#	$(LINK) $(ifuncmain5pie_OBJECTS) $(ifuncmain5pie_LDADD) $(LIBS)
#ifuncmain5pie$(EXEEXT): $(ifuncmain5pie_OBJECTS) $(ifuncmain5pie_DEPENDENCIES) $(EXTRA_ifuncmain5pie_DEPENDENCIES) 
#	@rm -f ifuncmain5pie$(EXEEXT)
#	$(LINK) $(ifuncmain5pie_OBJECTS) $(ifuncmain5pie_LDADD) $(LIBS)
ifuncmain5static$(EXEEXT): $(ifuncmain5static_OBJECTS) $(ifuncmain5static_DEPENDENCIES) $(EXTRA_ifuncmain5static_DEPENDENCIES) 
	@rm -f ifuncmain5static$(EXEEXT)
	$(ifuncmain5static_LINK) $(ifuncmain5static_OBJECTS) $(ifuncmain5static_LDADD) $(LIBS)
#ifuncmain5staticpic$(EXEEXT): $(ifuncmain5staticpic_OBJECTS) $(ifuncmain5staticpic_DEPENDENCIES) $(EXTRA_ifuncmain5staticpic_DEPENDENCIES) 
#	@rm -f ifuncmain5staticpic$(EXEEXT)
#	$(LINK) $(ifuncmain5staticpic_OBJECTS) $(ifuncmain5staticpic_LDADD) $(LIBS)
#ifuncmain5staticpic$(EXEEXT): $(ifuncmain5staticpic_OBJECTS) $(ifuncmain5staticpic_DEPENDENCIES) $(EXTRA_ifuncmain5staticpic_DEPENDENCIES) 
#	@rm -f ifuncmain5staticpic$(EXEEXT)
#	$(LINK) $(ifuncmain5staticpic_OBJECTS) $(ifuncmain5staticpic_LDADD) $(LIBS)
#ifuncmain5staticpic$(EXEEXT): $(ifuncmain5staticpic_OBJECTS) $(ifuncmain5staticpic_DEPENDENCIES) $(EXTRA_ifuncmain5staticpic_DEPENDENCIES) 
#	@rm -f ifuncmain5staticpic$(EXEEXT)
#	$(LINK) $(ifuncmain5staticpic_OBJECTS) $(ifuncmain5staticpic_LDADD) $(LIBS)
#ifuncmain6pie$(EXEEXT): $(ifuncmain6pie_OBJECTS) $(ifuncmain6pie_DEPENDENCIES) $(EXTRA_ifuncmain6pie_DEPENDENCIES) 
#	@rm -f ifuncmain6pie$(EXEEXT)
#	$(LINK) $(ifuncmain6pie_OBJECTS) $(ifuncmain6pie_LDADD) $(LIBS)
#ifuncmain6pie$(EXEEXT): $(ifuncmain6pie_OBJECTS) $(ifuncmain6pie_DEPENDENCIES) $(EXTRA_ifuncmain6pie_DEPENDENCIES) 
#	@rm -f ifuncmain6pie$(EXEEXT)
#	$(LINK) $(ifuncmain6pie_OBJECTS) $(ifuncmain6pie_LDADD) $(LIBS)
#ifuncmain6pie$(EXEEXT): $(ifuncmain6pie_OBJECTS) $(ifuncmain6pie_DEPENDENCIES) $(EXTRA_ifuncmain6pie_DEPENDENCIES) 
#	@rm -f ifuncmain6pie$(EXEEXT)
#	$(LINK) $(ifuncmain6pie_OBJECTS) $(ifuncmain6pie_LDADD) $(LIBS)
ifuncmain7$(EXEEXT): $(ifuncmain7_OBJECTS) $(ifuncmain7_DEPENDENCIES) $(EXTRA_ifuncmain7_DEPENDENCIES) 
	@rm -f ifuncmain7$(EXEEXT)
	$(ifuncmain7_LINK) $(ifuncmain7_OBJECTS) $(ifuncmain7_LDADD) $(LIBS)
#ifuncmain7pic$(EXEEXT): $(ifuncmain7pic_OBJECTS) $(ifuncmain7pic_DEPENDENCIES) $(EXTRA_ifuncmain7pic_DEPENDENCIES) 
#	@rm -f ifuncmain7pic$(EXEEXT)
#	$(LINK) $(ifuncmain7pic_OBJECTS) $(ifuncmain7pic_LDADD) $(LIBS)
#ifuncmain7pic$(EXEEXT): $(ifuncmain7pic_OBJECTS) $(ifuncmain7pic_DEPENDENCIES) $(EXTRA_ifuncmain7pic_DEPENDENCIES) 
#	@rm -f ifuncmain7pic$(EXEEXT)
#	$(LINK) $(ifuncmain7pic_OBJECTS) $(ifuncmain7pic_LDADD) $(LIBS)
#ifuncmain7pic$(EXEEXT): $(ifuncmain7pic_OBJECTS) $(ifuncmain7pic_DEPENDENCIES) $(EXTRA_ifuncmain7pic_DEPENDENCIES) 
#	@rm -f ifuncmain7pic$(EXEEXT)
#	$(LINK) $(ifuncmain7pic_OBJECTS) $(ifuncmain7pic_LDADD) $(LIBS)
#ifuncmain7picstatic$(EXEEXT): $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_DEPENDENCIES) $(EXTRA_ifuncmain7picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain7picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_LDADD) $(LIBS)
#ifuncmain7picstatic$(EXEEXT): $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_DEPENDENCIES) $(EXTRA_ifuncmain7picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain7picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_LDADD) $(LIBS)
#ifuncmain7picstatic$(EXEEXT): $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_DEPENDENCIES) $(EXTRA_ifuncmain7picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain7picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_LDADD) $(LIBS)
#ifuncmain7picstatic$(EXEEXT): $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_DEPENDENCIES) $(EXTRA_ifuncmain7picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain7picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_LDADD) $(LIBS)
#ifuncmain7picstatic$(EXEEXT): $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_DEPENDENCIES) $(EXTRA_ifuncmain7picstatic_DEPENDENCIES) 
#	@rm -f ifuncmain7picstatic$(EXEEXT)
#	$(LINK) $(ifuncmain7picstatic_OBJECTS) $(ifuncmain7picstatic_LDADD) $(LIBS)
#ifuncmain7pie$(EXEEXT): $(ifuncmain7pie_OBJECTS) $(ifuncmain7pie_DEPENDENCIES) $(EXTRA_ifuncmain7pie_DEPENDENCIES) 
#	@rm -f ifuncmain7pie$(EXEEXT)
#	$(LINK) $(ifuncmain7pie_OBJECTS) $(ifuncmain7pie_LDADD) $(LIBS)
#ifuncmain7pie$(EXEEXT): $(ifuncmain7pie_OBJECTS) $(ifuncmain7pie_DEPENDENCIES) $(EXTRA_ifuncmain7pie_DEPENDENCIES) 
#	@rm -f ifuncmain7pie$(EXEEXT)
#	$(LINK) $(ifuncmain7pie_OBJECTS) $(ifuncmain7pie_LDADD) $(LIBS)
#ifuncmain7pie$(EXEEXT): $(ifuncmain7pie_OBJECTS) $(ifuncmain7pie_DEPENDENCIES) $(EXTRA_ifuncmain7pie_DEPENDENCIES) 
#	@rm -f ifuncmain7pie$(EXEEXT)
#	$(LINK) $(ifuncmain7pie_OBJECTS) $(ifuncmain7pie_LDADD) $(LIBS)
ifuncmain7static$(EXEEXT): $(ifuncmain7static_OBJECTS) $(ifuncmain7static_DEPENDENCIES) $(EXTRA_ifuncmain7static_DEPENDENCIES) 
	@rm -f ifuncmain7static$(EXEEXT)
	$(ifuncmain7static_LINK) $(ifuncmain7static_OBJECTS) $(ifuncmain7static_LDADD) $(LIBS)
ifuncvar$(EXEEXT): $(ifuncvar_OBJECTS) $(ifuncvar_DEPENDENCIES) $(EXTRA_ifuncvar_DEPENDENCIES) 
	@rm -f ifuncvar$(EXEEXT)
	$(ifuncvar_LINK) $(ifuncvar_OBJECTS) $(ifuncvar_LDADD) $(LIBS)
incremental_comdat_test_1$(EXEEXT): $(incremental_comdat_test_1_OBJECTS) $(incremental_comdat_test_1_DEPENDENCIES) $(EXTRA_incremental_comdat_test_1_DEPENDENCIES) 
	@rm -f incremental_comdat_test_1$(EXEEXT)
	$(LINK) $(incremental_comdat_test_1_OBJECTS) $(incremental_comdat_test_1_LDADD) $(LIBS)
#incremental_comdat_test_1$(EXEEXT): $(incremental_comdat_test_1_OBJECTS) $(incremental_comdat_test_1_DEPENDENCIES) $(EXTRA_incremental_comdat_test_1_DEPENDENCIES) 
#	@rm -f incremental_comdat_test_1$(EXEEXT)
#	$(LINK) $(incremental_comdat_test_1_OBJECTS) $(incremental_comdat_test_1_LDADD) $(LIBS)
#incremental_comdat_test_1$(EXEEXT): $(incremental_comdat_test_1_OBJECTS) $(incremental_comdat_test_1_DEPENDENCIES) $(EXTRA_incremental_comdat_test_1_DEPENDENCIES) 
#	@rm -f incremental_comdat_test_1$(EXEEXT)
#	$(LINK) $(incremental_comdat_test_1_OBJECTS) $(incremental_comdat_test_1_LDADD) $(LIBS)
incremental_common_test_1$(EXEEXT): $(incremental_common_test_1_OBJECTS) $(incremental_common_test_1_DEPENDENCIES) $(EXTRA_incremental_common_test_1_DEPENDENCIES) 
	@rm -f incremental_common_test_1$(EXEEXT)
	$(LINK) $(incremental_common_test_1_OBJECTS) $(incremental_common_test_1_LDADD) $(LIBS)
#incremental_common_test_1$(EXEEXT): $(incremental_common_test_1_OBJECTS) $(incremental_common_test_1_DEPENDENCIES) $(EXTRA_incremental_common_test_1_DEPENDENCIES) 
#	@rm -f incremental_common_test_1$(EXEEXT)
#	$(LINK) $(incremental_common_test_1_OBJECTS) $(incremental_common_test_1_LDADD) $(LIBS)
#incremental_common_test_1$(EXEEXT): $(incremental_common_test_1_OBJECTS) $(incremental_common_test_1_DEPENDENCIES) $(EXTRA_incremental_common_test_1_DEPENDENCIES) 
#	@rm -f incremental_common_test_1$(EXEEXT)
#	$(LINK) $(incremental_common_test_1_OBJECTS) $(incremental_common_test_1_LDADD) $(LIBS)
incremental_copy_test$(EXEEXT): $(incremental_copy_test_OBJECTS) $(incremental_copy_test_DEPENDENCIES) $(EXTRA_incremental_copy_test_DEPENDENCIES) 
	@rm -f incremental_copy_test$(EXEEXT)
	$(LINK) $(incremental_copy_test_OBJECTS) $(incremental_copy_test_LDADD) $(LIBS)
#incremental_copy_test$(EXEEXT): $(incremental_copy_test_OBJECTS) $(incremental_copy_test_DEPENDENCIES) $(EXTRA_incremental_copy_test_DEPENDENCIES) 
#	@rm -f incremental_copy_test$(EXEEXT)
#	$(LINK) $(incremental_copy_test_OBJECTS) $(incremental_copy_test_LDADD) $(LIBS)
#incremental_copy_test$(EXEEXT): $(incremental_copy_test_OBJECTS) $(incremental_copy_test_DEPENDENCIES) $(EXTRA_incremental_copy_test_DEPENDENCIES) 
#	@rm -f incremental_copy_test$(EXEEXT)
#	$(LINK) $(incremental_copy_test_OBJECTS) $(incremental_copy_test_LDADD) $(LIBS)
incremental_test_2$(EXEEXT): $(incremental_test_2_OBJECTS) $(incremental_test_2_DEPENDENCIES) $(EXTRA_incremental_test_2_DEPENDENCIES) 
	@rm -f incremental_test_2$(EXEEXT)
	$(LINK) $(incremental_test_2_OBJECTS) $(incremental_test_2_LDADD) $(LIBS)
#incremental_test_2$(EXEEXT): $(incremental_test_2_OBJECTS) $(incremental_test_2_DEPENDENCIES) $(EXTRA_incremental_test_2_DEPENDENCIES) 
#	@rm -f incremental_test_2$(EXEEXT)
#	$(LINK) $(incremental_test_2_OBJECTS) $(incremental_test_2_LDADD) $(LIBS)
#incremental_test_2$(EXEEXT): $(incremental_test_2_OBJECTS) $(incremental_test_2_DEPENDENCIES) $(EXTRA_incremental_test_2_DEPENDENCIES) 
#	@rm -f incremental_test_2$(EXEEXT)
#	$(LINK) $(incremental_test_2_OBJECTS) $(incremental_test_2_LDADD) $(LIBS)
incremental_test_3$(EXEEXT): $(incremental_test_3_OBJECTS) $(incremental_test_3_DEPENDENCIES) $(EXTRA_incremental_test_3_DEPENDENCIES) 
	@rm -f incremental_test_3$(EXEEXT)
	$(LINK) $(incremental_test_3_OBJECTS) $(incremental_test_3_LDADD) $(LIBS)
#incremental_test_3$(EXEEXT): $(incremental_test_3_OBJECTS) $(incremental_test_3_DEPENDENCIES) $(EXTRA_incremental_test_3_DEPENDENCIES) 
#	@rm -f incremental_test_3$(EXEEXT)
#	$(LINK) $(incremental_test_3_OBJECTS) $(incremental_test_3_LDADD) $(LIBS)
#incremental_test_3$(EXEEXT): $(incremental_test_3_OBJECTS) $(incremental_test_3_DEPENDENCIES) $(EXTRA_incremental_test_3_DEPENDENCIES) 
#	@rm -f incremental_test_3$(EXEEXT)
#	$(LINK) $(incremental_test_3_OBJECTS) $(incremental_test_3_LDADD) $(LIBS)
incremental_test_4$(EXEEXT): $(incremental_test_4_OBJECTS) $(incremental_test_4_DEPENDENCIES) $(EXTRA_incremental_test_4_DEPENDENCIES) 
	@rm -f incremental_test_4$(EXEEXT)
	$(LINK) $(incremental_test_4_OBJECTS) $(incremental_test_4_LDADD) $(LIBS)
#incremental_test_4$(EXEEXT): $(incremental_test_4_OBJECTS) $(incremental_test_4_DEPENDENCIES) $(EXTRA_incremental_test_4_DEPENDENCIES) 
#	@rm -f incremental_test_4$(EXEEXT)
#	$(LINK) $(incremental_test_4_OBJECTS) $(incremental_test_4_LDADD) $(LIBS)
#incremental_test_4$(EXEEXT): $(incremental_test_4_OBJECTS) $(incremental_test_4_DEPENDENCIES) $(EXTRA_incremental_test_4_DEPENDENCIES) 
#	@rm -f incremental_test_4$(EXEEXT)
#	$(LINK) $(incremental_test_4_OBJECTS) $(incremental_test_4_LDADD) $(LIBS)
incremental_test_5$(EXEEXT): $(incremental_test_5_OBJECTS) $(incremental_test_5_DEPENDENCIES) $(EXTRA_incremental_test_5_DEPENDENCIES) 
	@rm -f incremental_test_5$(EXEEXT)
	$(LINK) $(incremental_test_5_OBJECTS) $(incremental_test_5_LDADD) $(LIBS)
#incremental_test_5$(EXEEXT): $(incremental_test_5_OBJECTS) $(incremental_test_5_DEPENDENCIES) $(EXTRA_incremental_test_5_DEPENDENCIES) 
#	@rm -f incremental_test_5$(EXEEXT)
#	$(LINK) $(incremental_test_5_OBJECTS) $(incremental_test_5_LDADD) $(LIBS)
#incremental_test_5$(EXEEXT): $(incremental_test_5_OBJECTS) $(incremental_test_5_DEPENDENCIES) $(EXTRA_incremental_test_5_DEPENDENCIES) 
#	@rm -f incremental_test_5$(EXEEXT)
#	$(LINK) $(incremental_test_5_OBJECTS) $(incremental_test_5_LDADD) $(LIBS)
incremental_test_6$(EXEEXT): $(incremental_test_6_OBJECTS) $(incremental_test_6_DEPENDENCIES) $(EXTRA_incremental_test_6_DEPENDENCIES) 
	@rm -f incremental_test_6$(EXEEXT)
	$(LINK) $(incremental_test_6_OBJECTS) $(incremental_test_6_LDADD) $(LIBS)
#incremental_test_6$(EXEEXT): $(incremental_test_6_OBJECTS) $(incremental_test_6_DEPENDENCIES) $(EXTRA_incremental_test_6_DEPENDENCIES) 
#	@rm -f incremental_test_6$(EXEEXT)
#	$(LINK) $(incremental_test_6_OBJECTS) $(incremental_test_6_LDADD) $(LIBS)
#incremental_test_6$(EXEEXT): $(incremental_test_6_OBJECTS) $(incremental_test_6_DEPENDENCIES) $(EXTRA_incremental_test_6_DEPENDENCIES) 
#	@rm -f incremental_test_6$(EXEEXT)
#	$(LINK) $(incremental_test_6_OBJECTS) $(incremental_test_6_LDADD) $(LIBS)
initpri1$(EXEEXT): $(initpri1_OBJECTS) $(initpri1_DEPENDENCIES) $(EXTRA_initpri1_DEPENDENCIES) 
	@rm -f initpri1$(EXEEXT)
	$(initpri1_LINK) $(initpri1_OBJECTS) $(initpri1_LDADD) $(LIBS)
initpri2$(EXEEXT): $(initpri2_OBJECTS) $(initpri2_DEPENDENCIES) $(EXTRA_initpri2_DEPENDENCIES) 
	@rm -f initpri2$(EXEEXT)
	$(initpri2_LINK) $(initpri2_OBJECTS) $(initpri2_LDADD) $(LIBS)
initpri3a$(EXEEXT): $(initpri3a_OBJECTS) $(initpri3a_DEPENDENCIES) $(EXTRA_initpri3a_DEPENDENCIES) 
	@rm -f initpri3a$(EXEEXT)
	$(initpri3a_LINK) $(initpri3a_OBJECTS) $(initpri3a_LDADD) $(LIBS)
justsyms$(EXEEXT): $(justsyms_OBJECTS) $(justsyms_DEPENDENCIES) $(EXTRA_justsyms_DEPENDENCIES) 
	@rm -f justsyms$(EXEEXT)
	$(justsyms_LINK) $(justsyms_OBJECTS) $(justsyms_LDADD) $(LIBS)
justsyms_exec$(EXEEXT): $(justsyms_exec_OBJECTS) $(justsyms_exec_DEPENDENCIES) $(EXTRA_justsyms_exec_DEPENDENCIES) 
	@rm -f justsyms_exec$(EXEEXT)
	$(justsyms_exec_LINK) $(justsyms_exec_OBJECTS) $(justsyms_exec_LDADD) $(LIBS)
large$(EXEEXT): $(large_OBJECTS) $(large_DEPENDENCIES) $(EXTRA_large_DEPENDENCIES) 
	@rm -f large$(EXEEXT)
	$(large_LINK) $(large_OBJECTS) $(large_LDADD) $(LIBS)
large_symbol_alignment$(EXEEXT): $(large_symbol_alignment_OBJECTS) $(large_symbol_alignment_DEPENDENCIES) $(EXTRA_large_symbol_alignment_DEPENDENCIES) 
	@rm -f large_symbol_alignment$(EXEEXT)
	$(large_symbol_alignment_LINK) $(large_symbol_alignment_OBJECTS) $(large_symbol_alignment_LDADD) $(LIBS)
leb128_unittest$(EXEEXT): $(leb128_unittest_OBJECTS) $(leb128_unittest_DEPENDENCIES) $(EXTRA_leb128_unittest_DEPENDENCIES) 
	@rm -f leb128_unittest$(EXEEXT)
	$(CXXLINK) $(leb128_unittest_OBJECTS) $(leb128_unittest_LDADD) $(LIBS)
#local_labels_test$(EXEEXT): $(local_labels_test_OBJECTS) $(local_labels_test_DEPENDENCIES) $(EXTRA_local_labels_test_DEPENDENCIES) 
#	@rm -f local_labels_test$(EXEEXT)
#	$(LINK) $(local_labels_test_OBJECTS) $(local_labels_test_LDADD) $(LIBS)
#local_labels_test$(EXEEXT): $(local_labels_test_OBJECTS) $(local_labels_test_DEPENDENCIES) $(EXTRA_local_labels_test_DEPENDENCIES) 
#	@rm -f local_labels_test$(EXEEXT)
#	$(LINK) $(local_labels_test_OBJECTS) $(local_labels_test_LDADD) $(LIBS)
#many_sections_r_test$(EXEEXT): $(many_sections_r_test_OBJECTS) $(many_sections_r_test_DEPENDENCIES) $(EXTRA_many_sections_r_test_DEPENDENCIES) 
#	@rm -f many_sections_r_test$(EXEEXT)
#	$(LINK) $(many_sections_r_test_OBJECTS) $(many_sections_r_test_LDADD) $(LIBS)
#many_sections_r_test$(EXEEXT): $(many_sections_r_test_OBJECTS) $(many_sections_r_test_DEPENDENCIES) $(EXTRA_many_sections_r_test_DEPENDENCIES) 
#	@rm -f many_sections_r_test$(EXEEXT)
#	$(LINK) $(many_sections_r_test_OBJECTS) $(many_sections_r_test_LDADD) $(LIBS)
many_sections_test$(EXEEXT): $(many_sections_test_OBJECTS) $(many_sections_test_DEPENDENCIES) $(EXTRA_many_sections_test_DEPENDENCIES) 
	@rm -f many_sections_test$(EXEEXT)
	$(many_sections_test_LINK) $(many_sections_test_OBJECTS) $(many_sections_test_LDADD) $(LIBS)
object_unittest$(EXEEXT): $(object_unittest_OBJECTS) $(object_unittest_DEPENDENCIES) $(EXTRA_object_unittest_DEPENDENCIES) 
	@rm -f object_unittest$(EXEEXT)
	$(CXXLINK) $(object_unittest_OBJECTS) $(object_unittest_LDADD) $(LIBS)
overflow_unittest$(EXEEXT): $(overflow_unittest_OBJECTS) $(overflow_unittest_DEPENDENCIES) $(EXTRA_overflow_unittest_DEPENDENCIES) 
	@rm -f overflow_unittest$(EXEEXT)
	$(CXXLINK) $(overflow_unittest_OBJECTS) $(overflow_unittest_LDADD) $(LIBS)
#permission_test$(EXEEXT): $(permission_test_OBJECTS) $(permission_test_DEPENDENCIES) $(EXTRA_permission_test_DEPENDENCIES) 
#	@rm -f permission_test$(EXEEXT)
#	$(LINK) $(permission_test_OBJECTS) $(permission_test_LDADD) $(LIBS)
#permission_test$(EXEEXT): $(permission_test_OBJECTS) $(permission_test_DEPENDENCIES) $(EXTRA_permission_test_DEPENDENCIES) 
#	@rm -f permission_test$(EXEEXT)
#	$(LINK) $(permission_test_OBJECTS) $(permission_test_LDADD) $(LIBS)
pie_copyrelocs_test$(EXEEXT): $(pie_copyrelocs_test_OBJECTS) $(pie_copyrelocs_test_DEPENDENCIES) $(EXTRA_pie_copyrelocs_test_DEPENDENCIES) 
	@rm -f pie_copyrelocs_test$(EXEEXT)
	$(pie_copyrelocs_test_LINK) $(pie_copyrelocs_test_OBJECTS) $(pie_copyrelocs_test_LDADD) $(LIBS)
#plugin_test_1$(EXEEXT): $(plugin_test_1_OBJECTS) $(plugin_test_1_DEPENDENCIES) $(EXTRA_plugin_test_1_DEPENDENCIES) 
#	@rm -f plugin_test_1$(EXEEXT)
#	$(LINK) $(plugin_test_1_OBJECTS) $(plugin_test_1_LDADD) $(LIBS)
#plugin_test_1$(EXEEXT): $(plugin_test_1_OBJECTS) $(plugin_test_1_DEPENDENCIES) $(EXTRA_plugin_test_1_DEPENDENCIES) 
#	@rm -f plugin_test_1$(EXEEXT)
#	$(LINK) $(plugin_test_1_OBJECTS) $(plugin_test_1_LDADD) $(LIBS)
#plugin_test_1$(EXEEXT): $(plugin_test_1_OBJECTS) $(plugin_test_1_DEPENDENCIES) $(EXTRA_plugin_test_1_DEPENDENCIES) 
#	@rm -f plugin_test_1$(EXEEXT)
#	$(LINK) $(plugin_test_1_OBJECTS) $(plugin_test_1_LDADD) $(LIBS)
#plugin_test_10$(EXEEXT): $(plugin_test_10_OBJECTS) $(plugin_test_10_DEPENDENCIES) $(EXTRA_plugin_test_10_DEPENDENCIES) 
#	@rm -f plugin_test_10$(EXEEXT)
#	$(LINK) $(plugin_test_10_OBJECTS) $(plugin_test_10_LDADD) $(LIBS)
#plugin_test_10$(EXEEXT): $(plugin_test_10_OBJECTS) $(plugin_test_10_DEPENDENCIES) $(EXTRA_plugin_test_10_DEPENDENCIES) 
#	@rm -f plugin_test_10$(EXEEXT)
#	$(LINK) $(plugin_test_10_OBJECTS) $(plugin_test_10_LDADD) $(LIBS)
#plugin_test_10$(EXEEXT): $(plugin_test_10_OBJECTS) $(plugin_test_10_DEPENDENCIES) $(EXTRA_plugin_test_10_DEPENDENCIES) 
#	@rm -f plugin_test_10$(EXEEXT)
#	$(LINK) $(plugin_test_10_OBJECTS) $(plugin_test_10_LDADD) $(LIBS)
#plugin_test_11$(EXEEXT): $(plugin_test_11_OBJECTS) $(plugin_test_11_DEPENDENCIES) $(EXTRA_plugin_test_11_DEPENDENCIES) 
#	@rm -f plugin_test_11$(EXEEXT)
#	$(LINK) $(plugin_test_11_OBJECTS) $(plugin_test_11_LDADD) $(LIBS)
#plugin_test_11$(EXEEXT): $(plugin_test_11_OBJECTS) $(plugin_test_11_DEPENDENCIES) $(EXTRA_plugin_test_11_DEPENDENCIES) 
#	@rm -f plugin_test_11$(EXEEXT)
#	$(LINK) $(plugin_test_11_OBJECTS) $(plugin_test_11_LDADD) $(LIBS)
#plugin_test_11$(EXEEXT): $(plugin_test_11_OBJECTS) $(plugin_test_11_DEPENDENCIES) $(EXTRA_plugin_test_11_DEPENDENCIES) 
#	@rm -f plugin_test_11$(EXEEXT)
#	$(LINK) $(plugin_test_11_OBJECTS) $(plugin_test_11_LDADD) $(LIBS)
#plugin_test_12$(EXEEXT): $(plugin_test_12_OBJECTS) $(plugin_test_12_DEPENDENCIES) $(EXTRA_plugin_test_12_DEPENDENCIES) 
#	@rm -f plugin_test_12$(EXEEXT)
#	$(LINK) $(plugin_test_12_OBJECTS) $(plugin_test_12_LDADD) $(LIBS)
#plugin_test_12$(EXEEXT): $(plugin_test_12_OBJECTS) $(plugin_test_12_DEPENDENCIES) $(EXTRA_plugin_test_12_DEPENDENCIES) 
#	@rm -f plugin_test_12$(EXEEXT)
#	$(LINK) $(plugin_test_12_OBJECTS) $(plugin_test_12_LDADD) $(LIBS)
#plugin_test_12$(EXEEXT): $(plugin_test_12_OBJECTS) $(plugin_test_12_DEPENDENCIES) $(EXTRA_plugin_test_12_DEPENDENCIES) 
#	@rm -f plugin_test_12$(EXEEXT)
#	$(LINK) $(plugin_test_12_OBJECTS) $(plugin_test_12_LDADD) $(LIBS)
#plugin_test_2$(EXEEXT): $(plugin_test_2_OBJECTS) $(plugin_test_2_DEPENDENCIES) $(EXTRA_plugin_test_2_DEPENDENCIES) 
#	@rm -f plugin_test_2$(EXEEXT)
#	$(LINK) $(plugin_test_2_OBJECTS) $(plugin_test_2_LDADD) $(LIBS)
#plugin_test_2$(EXEEXT): $(plugin_test_2_OBJECTS) $(plugin_test_2_DEPENDENCIES) $(EXTRA_plugin_test_2_DEPENDENCIES) 
#	@rm -f plugin_test_2$(EXEEXT)
#	$(LINK) $(plugin_test_2_OBJECTS) $(plugin_test_2_LDADD) $(LIBS)
#plugin_test_2$(EXEEXT): $(plugin_test_2_OBJECTS) $(plugin_test_2_DEPENDENCIES) $(EXTRA_plugin_test_2_DEPENDENCIES) 
#	@rm -f plugin_test_2$(EXEEXT)
#	$(LINK) $(plugin_test_2_OBJECTS) $(plugin_test_2_LDADD) $(LIBS)
#plugin_test_3$(EXEEXT): $(plugin_test_3_OBJECTS) $(plugin_test_3_DEPENDENCIES) $(EXTRA_plugin_test_3_DEPENDENCIES) 
#	@rm -f plugin_test_3$(EXEEXT)
#	$(LINK) $(plugin_test_3_OBJECTS) $(plugin_test_3_LDADD) $(LIBS)
#plugin_test_3$(EXEEXT): $(plugin_test_3_OBJECTS) $(plugin_test_3_DEPENDENCIES) $(EXTRA_plugin_test_3_DEPENDENCIES) 
#	@rm -f plugin_test_3$(EXEEXT)
#	$(LINK) $(plugin_test_3_OBJECTS) $(plugin_test_3_LDADD) $(LIBS)
#plugin_test_3$(EXEEXT): $(plugin_test_3_OBJECTS) $(plugin_test_3_DEPENDENCIES) $(EXTRA_plugin_test_3_DEPENDENCIES) 
#	@rm -f plugin_test_3$(EXEEXT)
#	$(LINK) $(plugin_test_3_OBJECTS) $(plugin_test_3_LDADD) $(LIBS)
#plugin_test_4$(EXEEXT): $(plugin_test_4_OBJECTS) $(plugin_test_4_DEPENDENCIES) $(EXTRA_plugin_test_4_DEPENDENCIES) 
#	@rm -f plugin_test_4$(EXEEXT)
#	$(LINK) $(plugin_test_4_OBJECTS) $(plugin_test_4_LDADD) $(LIBS)
#plugin_test_4$(EXEEXT): $(plugin_test_4_OBJECTS) $(plugin_test_4_DEPENDENCIES) $(EXTRA_plugin_test_4_DEPENDENCIES) 
#	@rm -f plugin_test_4$(EXEEXT)
#	$(LINK) $(plugin_test_4_OBJECTS) $(plugin_test_4_LDADD) $(LIBS)
#plugin_test_4$(EXEEXT): $(plugin_test_4_OBJECTS) $(plugin_test_4_DEPENDENCIES) $(EXTRA_plugin_test_4_DEPENDENCIES) 
#	@rm -f plugin_test_4$(EXEEXT)
#	$(LINK) $(plugin_test_4_OBJECTS) $(plugin_test_4_LDADD) $(LIBS)
#plugin_test_5$(EXEEXT): $(plugin_test_5_OBJECTS) $(plugin_test_5_DEPENDENCIES) $(EXTRA_plugin_test_5_DEPENDENCIES) 
#	@rm -f plugin_test_5$(EXEEXT)
#	$(LINK) $(plugin_test_5_OBJECTS) $(plugin_test_5_LDADD) $(LIBS)
#plugin_test_5$(EXEEXT): $(plugin_test_5_OBJECTS) $(plugin_test_5_DEPENDENCIES) $(EXTRA_plugin_test_5_DEPENDENCIES) 
#	@rm -f plugin_test_5$(EXEEXT)
#	$(LINK) $(plugin_test_5_OBJECTS) $(plugin_test_5_LDADD) $(LIBS)
#plugin_test_5$(EXEEXT): $(plugin_test_5_OBJECTS) $(plugin_test_5_DEPENDENCIES) $(EXTRA_plugin_test_5_DEPENDENCIES) 
#	@rm -f plugin_test_5$(EXEEXT)
#	$(LINK) $(plugin_test_5_OBJECTS) $(plugin_test_5_LDADD) $(LIBS)
#plugin_test_6$(EXEEXT): $(plugin_test_6_OBJECTS) $(plugin_test_6_DEPENDENCIES) $(EXTRA_plugin_test_6_DEPENDENCIES) 
#	@rm -f plugin_test_6$(EXEEXT)
#	$(LINK) $(plugin_test_6_OBJECTS) $(plugin_test_6_LDADD) $(LIBS)
#plugin_test_6$(EXEEXT): $(plugin_test_6_OBJECTS) $(plugin_test_6_DEPENDENCIES) $(EXTRA_plugin_test_6_DEPENDENCIES) 
#	@rm -f plugin_test_6$(EXEEXT)
#	$(LINK) $(plugin_test_6_OBJECTS) $(plugin_test_6_LDADD) $(LIBS)
#plugin_test_6$(EXEEXT): $(plugin_test_6_OBJECTS) $(plugin_test_6_DEPENDENCIES) $(EXTRA_plugin_test_6_DEPENDENCIES) 
#	@rm -f plugin_test_6$(EXEEXT)
#	$(LINK) $(plugin_test_6_OBJECTS) $(plugin_test_6_LDADD) $(LIBS)
#plugin_test_7$(EXEEXT): $(plugin_test_7_OBJECTS) $(plugin_test_7_DEPENDENCIES) $(EXTRA_plugin_test_7_DEPENDENCIES) 
#	@rm -f plugin_test_7$(EXEEXT)
#	$(LINK) $(plugin_test_7_OBJECTS) $(plugin_test_7_LDADD) $(LIBS)
#plugin_test_7$(EXEEXT): $(plugin_test_7_OBJECTS) $(plugin_test_7_DEPENDENCIES) $(EXTRA_plugin_test_7_DEPENDENCIES) 
#	@rm -f plugin_test_7$(EXEEXT)
#	$(LINK) $(plugin_test_7_OBJECTS) $(plugin_test_7_LDADD) $(LIBS)
#plugin_test_7$(EXEEXT): $(plugin_test_7_OBJECTS) $(plugin_test_7_DEPENDENCIES) $(EXTRA_plugin_test_7_DEPENDENCIES) 
#	@rm -f plugin_test_7$(EXEEXT)
#	$(LINK) $(plugin_test_7_OBJECTS) $(plugin_test_7_LDADD) $(LIBS)
#plugin_test_8$(EXEEXT): $(plugin_test_8_OBJECTS) $(plugin_test_8_DEPENDENCIES) $(EXTRA_plugin_test_8_DEPENDENCIES) 
#	@rm -f plugin_test_8$(EXEEXT)
#	$(LINK) $(plugin_test_8_OBJECTS) $(plugin_test_8_LDADD) $(LIBS)
#plugin_test_8$(EXEEXT): $(plugin_test_8_OBJECTS) $(plugin_test_8_DEPENDENCIES) $(EXTRA_plugin_test_8_DEPENDENCIES) 
#	@rm -f plugin_test_8$(EXEEXT)
#	$(LINK) $(plugin_test_8_OBJECTS) $(plugin_test_8_LDADD) $(LIBS)
#plugin_test_8$(EXEEXT): $(plugin_test_8_OBJECTS) $(plugin_test_8_DEPENDENCIES) $(EXTRA_plugin_test_8_DEPENDENCIES) 
#	@rm -f plugin_test_8$(EXEEXT)
#	$(LINK) $(plugin_test_8_OBJECTS) $(plugin_test_8_LDADD) $(LIBS)
#plugin_test_start_lib$(EXEEXT): $(plugin_test_start_lib_OBJECTS) $(plugin_test_start_lib_DEPENDENCIES) $(EXTRA_plugin_test_start_lib_DEPENDENCIES) 
#	@rm -f plugin_test_start_lib$(EXEEXT)
#	$(LINK) $(plugin_test_start_lib_OBJECTS) $(plugin_test_start_lib_LDADD) $(LIBS)
#plugin_test_start_lib$(EXEEXT): $(plugin_test_start_lib_OBJECTS) $(plugin_test_start_lib_DEPENDENCIES) $(EXTRA_plugin_test_start_lib_DEPENDENCIES) 
#	@rm -f plugin_test_start_lib$(EXEEXT)
#	$(LINK) $(plugin_test_start_lib_OBJECTS) $(plugin_test_start_lib_LDADD) $(LIBS)
#plugin_test_start_lib$(EXEEXT): $(plugin_test_start_lib_OBJECTS) $(plugin_test_start_lib_DEPENDENCIES) $(EXTRA_plugin_test_start_lib_DEPENDENCIES) 
#	@rm -f plugin_test_start_lib$(EXEEXT)
#	$(LINK) $(plugin_test_start_lib_OBJECTS) $(plugin_test_start_lib_LDADD) $(LIBS)
#plugin_test_tls$(EXEEXT): $(plugin_test_tls_OBJECTS) $(plugin_test_tls_DEPENDENCIES) $(EXTRA_plugin_test_tls_DEPENDENCIES) 
#	@rm -f plugin_test_tls$(EXEEXT)
#	$(LINK) $(plugin_test_tls_OBJECTS) $(plugin_test_tls_LDADD) $(LIBS)
#plugin_test_tls$(EXEEXT): $(plugin_test_tls_OBJECTS) $(plugin_test_tls_DEPENDENCIES) $(EXTRA_plugin_test_tls_DEPENDENCIES) 
#	@rm -f plugin_test_tls$(EXEEXT)
#	$(LINK) $(plugin_test_tls_OBJECTS) $(plugin_test_tls_LDADD) $(LIBS)
#plugin_test_tls$(EXEEXT): $(plugin_test_tls_OBJECTS) $(plugin_test_tls_DEPENDENCIES) $(EXTRA_plugin_test_tls_DEPENDENCIES) 
#	@rm -f plugin_test_tls$(EXEEXT)
#	$(LINK) $(plugin_test_tls_OBJECTS) $(plugin_test_tls_LDADD) $(LIBS)
#plugin_test_tls$(EXEEXT): $(plugin_test_tls_OBJECTS) $(plugin_test_tls_DEPENDENCIES) $(EXTRA_plugin_test_tls_DEPENDENCIES) 
#	@rm -f plugin_test_tls$(EXEEXT)
#	$(LINK) $(plugin_test_tls_OBJECTS) $(plugin_test_tls_LDADD) $(LIBS)
pr17704a_test$(EXEEXT): $(pr17704a_test_OBJECTS) $(pr17704a_test_DEPENDENCIES) $(EXTRA_pr17704a_test_DEPENDENCIES) 
	@rm -f pr17704a_test$(EXEEXT)
	$(LINK) $(pr17704a_test_OBJECTS) $(pr17704a_test_LDADD) $(LIBS)
#pr17704a_test$(EXEEXT): $(pr17704a_test_OBJECTS) $(pr17704a_test_DEPENDENCIES) $(EXTRA_pr17704a_test_DEPENDENCIES) 
#	@rm -f pr17704a_test$(EXEEXT)
#	$(LINK) $(pr17704a_test_OBJECTS) $(pr17704a_test_LDADD) $(LIBS)
#pr17704a_test$(EXEEXT): $(pr17704a_test_OBJECTS) $(pr17704a_test_DEPENDENCIES) $(EXTRA_pr17704a_test_DEPENDENCIES) 
#	@rm -f pr17704a_test$(EXEEXT)
#	$(LINK) $(pr17704a_test_OBJECTS) $(pr17704a_test_LDADD) $(LIBS)
pr20216a_test$(EXEEXT): $(pr20216a_test_OBJECTS) $(pr20216a_test_DEPENDENCIES) $(EXTRA_pr20216a_test_DEPENDENCIES) 
	@rm -f pr20216a_test$(EXEEXT)
	$(pr20216a_test_LINK) $(pr20216a_test_OBJECTS) $(pr20216a_test_LDADD) $(LIBS)
pr20216b_test$(EXEEXT): $(pr20216b_test_OBJECTS) $(pr20216b_test_DEPENDENCIES) $(EXTRA_pr20216b_test_DEPENDENCIES) 
	@rm -f pr20216b_test$(EXEEXT)
	$(pr20216b_test_LINK) $(pr20216b_test_OBJECTS) $(pr20216b_test_LDADD) $(LIBS)
pr20216c_test$(EXEEXT): $(pr20216c_test_OBJECTS) $(pr20216c_test_DEPENDENCIES) $(EXTRA_pr20216c_test_DEPENDENCIES) 
	@rm -f pr20216c_test$(EXEEXT)
	$(pr20216c_test_LINK) $(pr20216c_test_OBJECTS) $(pr20216c_test_LDADD) $(LIBS)
pr20216d_test$(EXEEXT): $(pr20216d_test_OBJECTS) $(pr20216d_test_DEPENDENCIES) $(EXTRA_pr20216d_test_DEPENDENCIES) 
	@rm -f pr20216d_test$(EXEEXT)
	$(pr20216d_test_LINK) $(pr20216d_test_OBJECTS) $(pr20216d_test_LDADD) $(LIBS)
pr20216e_test$(EXEEXT): $(pr20216e_test_OBJECTS) $(pr20216e_test_DEPENDENCIES) $(EXTRA_pr20216e_test_DEPENDENCIES) 
	@rm -f pr20216e_test$(EXEEXT)
	$(pr20216e_test_LINK) $(pr20216e_test_OBJECTS) $(pr20216e_test_LDADD) $(LIBS)
pr20308a_test$(EXEEXT): $(pr20308a_test_OBJECTS) $(pr20308a_test_DEPENDENCIES) $(EXTRA_pr20308a_test_DEPENDENCIES) 
	@rm -f pr20308a_test$(EXEEXT)
	$(pr20308a_test_LINK) $(pr20308a_test_OBJECTS) $(pr20308a_test_LDADD) $(LIBS)
pr20308b_test$(EXEEXT): $(pr20308b_test_OBJECTS) $(pr20308b_test_DEPENDENCIES) $(EXTRA_pr20308b_test_DEPENDENCIES) 
	@rm -f pr20308b_test$(EXEEXT)
	$(pr20308b_test_LINK) $(pr20308b_test_OBJECTS) $(pr20308b_test_LDADD) $(LIBS)
pr20308c_test$(EXEEXT): $(pr20308c_test_OBJECTS) $(pr20308c_test_DEPENDENCIES) $(EXTRA_pr20308c_test_DEPENDENCIES) 
	@rm -f pr20308c_test$(EXEEXT)
	$(pr20308c_test_LINK) $(pr20308c_test_OBJECTS) $(pr20308c_test_LDADD) $(LIBS)
pr20308d_test$(EXEEXT): $(pr20308d_test_OBJECTS) $(pr20308d_test_DEPENDENCIES) $(EXTRA_pr20308d_test_DEPENDENCIES) 
	@rm -f pr20308d_test$(EXEEXT)
	$(pr20308d_test_LINK) $(pr20308d_test_OBJECTS) $(pr20308d_test_LDADD) $(LIBS)
pr20308e_test$(EXEEXT): $(pr20308e_test_OBJECTS) $(pr20308e_test_DEPENDENCIES) $(EXTRA_pr20308e_test_DEPENDENCIES) 
	@rm -f pr20308e_test$(EXEEXT)
	$(pr20308e_test_LINK) $(pr20308e_test_OBJECTS) $(pr20308e_test_LDADD) $(LIBS)
#pr20976$(EXEEXT): $(pr20976_OBJECTS) $(pr20976_DEPENDENCIES) $(EXTRA_pr20976_DEPENDENCIES) 
#	@rm -f pr20976$(EXEEXT)
#	$(LINK) $(pr20976_OBJECTS) $(pr20976_LDADD) $(LIBS)
#pr20976$(EXEEXT): $(pr20976_OBJECTS) $(pr20976_DEPENDENCIES) $(EXTRA_pr20976_DEPENDENCIES) 
#	@rm -f pr20976$(EXEEXT)
#	$(LINK) $(pr20976_OBJECTS) $(pr20976_LDADD) $(LIBS)
#pr22266$(EXEEXT): $(pr22266_OBJECTS) $(pr22266_DEPENDENCIES) $(EXTRA_pr22266_DEPENDENCIES) 
#	@rm -f pr22266$(EXEEXT)
#	$(LINK) $(pr22266_OBJECTS) $(pr22266_LDADD) $(LIBS)
#pr22266$(EXEEXT): $(pr22266_OBJECTS) $(pr22266_DEPENDENCIES) $(EXTRA_pr22266_DEPENDENCIES) 
#	@rm -f pr22266$(EXEEXT)
#	$(LINK) $(pr22266_OBJECTS) $(pr22266_LDADD) $(LIBS)
protected_1$(EXEEXT): $(protected_1_OBJECTS) $(protected_1_DEPENDENCIES) $(EXTRA_protected_1_DEPENDENCIES) 
	@rm -f protected_1$(EXEEXT)
	$(protected_1_LINK) $(protected_1_OBJECTS) $(protected_1_LDADD) $(LIBS)
protected_2$(EXEEXT): $(protected_2_OBJECTS) $(protected_2_DEPENDENCIES) $(EXTRA_protected_2_DEPENDENCIES) 
	@rm -f protected_2$(EXEEXT)
	$(protected_2_LINK) $(protected_2_OBJECTS) $(protected_2_LDADD) $(LIBS)
relro_now_test$(EXEEXT): $(relro_now_test_OBJECTS) $(relro_now_test_DEPENDENCIES) $(EXTRA_relro_now_test_DEPENDENCIES) 
	@rm -f relro_now_test$(EXEEXT)
	$(relro_now_test_LINK) $(relro_now_test_OBJECTS) $(relro_now_test_LDADD) $(LIBS)
relro_script_test$(EXEEXT): $(relro_script_test_OBJECTS) $(relro_script_test_DEPENDENCIES) $(EXTRA_relro_script_test_DEPENDENCIES) 
	@rm -f relro_script_test$(EXEEXT)
	$(relro_script_test_LINK) $(relro_script_test_OBJECTS) $(relro_script_test_LDADD) $(LIBS)
relro_strip_test$(EXEEXT): $(relro_strip_test_OBJECTS) $(relro_strip_test_DEPENDENCIES) $(EXTRA_relro_strip_test_DEPENDENCIES) 
	@rm -f relro_strip_test$(EXEEXT)
	$(relro_strip_test_LINK) $(relro_strip_test_OBJECTS) $(relro_strip_test_LDADD) $(LIBS)
relro_test$(EXEEXT): $(relro_test_OBJECTS) $(relro_test_DEPENDENCIES) $(EXTRA_relro_test_DEPENDENCIES) 
	@rm -f relro_test$(EXEEXT)
	$(relro_test_LINK) $(relro_test_OBJECTS) $(relro_test_LDADD) $(LIBS)
script_test_1$(EXEEXT): $(script_test_1_OBJECTS) $(script_test_1_DEPENDENCIES) $(EXTRA_script_test_1_DEPENDENCIES) 
	@rm -f script_test_1$(EXEEXT)
	$(script_test_1_LINK) $(script_test_1_OBJECTS) $(script_test_1_LDADD) $(LIBS)
#script_test_11$(EXEEXT): $(script_test_11_OBJECTS) $(script_test_11_DEPENDENCIES) $(EXTRA_script_test_11_DEPENDENCIES) 
#	@rm -f script_test_11$(EXEEXT)
#	$(LINK) $(script_test_11_OBJECTS) $(script_test_11_LDADD) $(LIBS)
#script_test_11$(EXEEXT): $(script_test_11_OBJECTS) $(script_test_11_DEPENDENCIES) $(EXTRA_script_test_11_DEPENDENCIES) 
#	@rm -f script_test_11$(EXEEXT)
#	$(LINK) $(script_test_11_OBJECTS) $(script_test_11_LDADD) $(LIBS)
#script_test_12$(EXEEXT): $(script_test_12_OBJECTS) $(script_test_12_DEPENDENCIES) $(EXTRA_script_test_12_DEPENDENCIES) 
#	@rm -f script_test_12$(EXEEXT)
#	$(LINK) $(script_test_12_OBJECTS) $(script_test_12_LDADD) $(LIBS)
#script_test_12$(EXEEXT): $(script_test_12_OBJECTS) $(script_test_12_DEPENDENCIES) $(EXTRA_script_test_12_DEPENDENCIES) 
#	@rm -f script_test_12$(EXEEXT)
#	$(LINK) $(script_test_12_OBJECTS) $(script_test_12_LDADD) $(LIBS)
#script_test_12i$(EXEEXT): $(script_test_12i_OBJECTS) $(script_test_12i_DEPENDENCIES) $(EXTRA_script_test_12i_DEPENDENCIES) 
#	@rm -f script_test_12i$(EXEEXT)
#	$(LINK) $(script_test_12i_OBJECTS) $(script_test_12i_LDADD) $(LIBS)
#script_test_12i$(EXEEXT): $(script_test_12i_OBJECTS) $(script_test_12i_DEPENDENCIES) $(EXTRA_script_test_12i_DEPENDENCIES) 
#	@rm -f script_test_12i$(EXEEXT)
#	$(LINK) $(script_test_12i_OBJECTS) $(script_test_12i_LDADD) $(LIBS)
script_test_2$(EXEEXT): $(script_test_2_OBJECTS) $(script_test_2_DEPENDENCIES) $(EXTRA_script_test_2_DEPENDENCIES) 
	@rm -f script_test_2$(EXEEXT)
	$(script_test_2_LINK) $(script_test_2_OBJECTS) $(script_test_2_LDADD) $(LIBS)
#script_test_3$(EXEEXT): $(script_test_3_OBJECTS) $(script_test_3_DEPENDENCIES) $(EXTRA_script_test_3_DEPENDENCIES) 
#	@rm -f script_test_3$(EXEEXT)
#	$(LINK) $(script_test_3_OBJECTS) $(script_test_3_LDADD) $(LIBS)
#script_test_3$(EXEEXT): $(script_test_3_OBJECTS) $(script_test_3_DEPENDENCIES) $(EXTRA_script_test_3_DEPENDENCIES) 
#	@rm -f script_test_3$(EXEEXT)
#	$(LINK) $(script_test_3_OBJECTS) $(script_test_3_LDADD) $(LIBS)
searched_file_test$(EXEEXT): $(searched_file_test_OBJECTS) $(searched_file_test_DEPENDENCIES) $(EXTRA_searched_file_test_DEPENDENCIES) 
	@rm -f searched_file_test$(EXEEXT)
	$(searched_file_test_LINK) $(searched_file_test_OBJECTS) $(searched_file_test_LDADD) $(LIBS)
#start_lib_test$(EXEEXT): $(start_lib_test_OBJECTS) $(start_lib_test_DEPENDENCIES) $(EXTRA_start_lib_test_DEPENDENCIES) 
#	@rm -f start_lib_test$(EXEEXT)
#	$(LINK) $(start_lib_test_OBJECTS) $(start_lib_test_LDADD) $(LIBS)
#start_lib_test$(EXEEXT): $(start_lib_test_OBJECTS) $(start_lib_test_DEPENDENCIES) $(EXTRA_start_lib_test_DEPENDENCIES) 
#	@rm -f start_lib_test$(EXEEXT)
#	$(LINK) $(start_lib_test_OBJECTS) $(start_lib_test_LDADD) $(LIBS)
thin_archive_test_1$(EXEEXT): $(thin_archive_test_1_OBJECTS) $(thin_archive_test_1_DEPENDENCIES) $(EXTRA_thin_archive_test_1_DEPENDENCIES) 
	@rm -f thin_archive_test_1$(EXEEXT)
	$(thin_archive_test_1_LINK) $(thin_archive_test_1_OBJECTS) $(thin_archive_test_1_LDADD) $(LIBS)
thin_archive_test_2$(EXEEXT): $(thin_archive_test_2_OBJECTS) $(thin_archive_test_2_DEPENDENCIES) $(EXTRA_thin_archive_test_2_DEPENDENCIES) 
	@rm -f thin_archive_test_2$(EXEEXT)
	$(thin_archive_test_2_LINK) $(thin_archive_test_2_OBJECTS) $(thin_archive_test_2_LDADD) $(LIBS)
tls_phdrs_script_test$(EXEEXT): $(tls_phdrs_script_test_OBJECTS) $(tls_phdrs_script_test_DEPENDENCIES) $(EXTRA_tls_phdrs_script_test_DEPENDENCIES) 
	@rm -f tls_phdrs_script_test$(EXEEXT)
	$(tls_phdrs_script_test_LINK) $(tls_phdrs_script_test_OBJECTS) $(tls_phdrs_script_test_LDADD) $(LIBS)
tls_pic_test$(EXEEXT): $(tls_pic_test_OBJECTS) $(tls_pic_test_DEPENDENCIES) $(EXTRA_tls_pic_test_DEPENDENCIES) 
	@rm -f tls_pic_test$(EXEEXT)
	$(tls_pic_test_LINK) $(tls_pic_test_OBJECTS) $(tls_pic_test_LDADD) $(LIBS)
#tls_pie_pic_test$(EXEEXT): $(tls_pie_pic_test_OBJECTS) $(tls_pie_pic_test_DEPENDENCIES) $(EXTRA_tls_pie_pic_test_DEPENDENCIES) 
#	@rm -f tls_pie_pic_test$(EXEEXT)
#	$(LINK) $(tls_pie_pic_test_OBJECTS) $(tls_pie_pic_test_LDADD) $(LIBS)
#tls_pie_pic_test$(EXEEXT): $(tls_pie_pic_test_OBJECTS) $(tls_pie_pic_test_DEPENDENCIES) $(EXTRA_tls_pie_pic_test_DEPENDENCIES) 
#	@rm -f tls_pie_pic_test$(EXEEXT)
#	$(LINK) $(tls_pie_pic_test_OBJECTS) $(tls_pie_pic_test_LDADD) $(LIBS)
#tls_pie_pic_test$(EXEEXT): $(tls_pie_pic_test_OBJECTS) $(tls_pie_pic_test_DEPENDENCIES) $(EXTRA_tls_pie_pic_test_DEPENDENCIES) 
#	@rm -f tls_pie_pic_test$(EXEEXT)
#	$(LINK) $(tls_pie_pic_test_OBJECTS) $(tls_pie_pic_test_LDADD) $(LIBS)
#tls_pie_test$(EXEEXT): $(tls_pie_test_OBJECTS) $(tls_pie_test_DEPENDENCIES) $(EXTRA_tls_pie_test_DEPENDENCIES) 
#	@rm -f tls_pie_test$(EXEEXT)
#	$(LINK) $(tls_pie_test_OBJECTS) $(tls_pie_test_LDADD) $(LIBS)
#tls_pie_test$(EXEEXT): $(tls_pie_test_OBJECTS) $(tls_pie_test_DEPENDENCIES) $(EXTRA_tls_pie_test_DEPENDENCIES) 
#	@rm -f tls_pie_test$(EXEEXT)
#	$(LINK) $(tls_pie_test_OBJECTS) $(tls_pie_test_LDADD) $(LIBS)
#tls_pie_test$(EXEEXT): $(tls_pie_test_OBJECTS) $(tls_pie_test_DEPENDENCIES) $(EXTRA_tls_pie_test_DEPENDENCIES) 
#	@rm -f tls_pie_test$(EXEEXT)
#	$(LINK) $(tls_pie_test_OBJECTS) $(tls_pie_test_LDADD) $(LIBS)
tls_script_test$(EXEEXT): $(tls_script_test_OBJECTS) $(tls_script_test_DEPENDENCIES) $(EXTRA_tls_script_test_DEPENDENCIES) 
	@rm -f tls_script_test$(EXEEXT)
	$(tls_script_test_LINK) $(tls_script_test_OBJECTS) $(tls_script_test_LDADD) $(LIBS)
tls_shared_gd_to_ie_test$(EXEEXT): $(tls_shared_gd_to_ie_test_OBJECTS) $(tls_shared_gd_to_ie_test_DEPENDENCIES) $(EXTRA_tls_shared_gd_to_ie_test_DEPENDENCIES) 
	@rm -f tls_shared_gd_to_ie_test$(EXEEXT)
	$(tls_shared_gd_to_ie_test_LINK) $(tls_shared_gd_to_ie_test_OBJECTS) $(tls_shared_gd_to_ie_test_LDADD) $(LIBS)
tls_shared_gnu2_gd_to_ie_test$(EXEEXT): $(tls_shared_gnu2_gd_to_ie_test_OBJECTS) $(tls_shared_gnu2_gd_to_ie_test_DEPENDENCIES) $(EXTRA_tls_shared_gnu2_gd_to_ie_test_DEPENDENCIES) 
	@rm -f tls_shared_gnu2_gd_to_ie_test$(EXEEXT)
	$(tls_shared_gnu2_gd_to_ie_test_LINK) $(tls_shared_gnu2_gd_to_ie_test_OBJECTS) $(tls_shared_gnu2_gd_to_ie_test_LDADD) $(LIBS)
tls_shared_gnu2_test$(EXEEXT): $(tls_shared_gnu2_test_OBJECTS) $(tls_shared_gnu2_test_DEPENDENCIES) $(EXTRA_tls_shared_gnu2_test_DEPENDENCIES) 
	@rm -f tls_shared_gnu2_test$(EXEEXT)
	$(tls_shared_gnu2_test_LINK) $(tls_shared_gnu2_test_OBJECTS) $(tls_shared_gnu2_test_LDADD) $(LIBS)
tls_shared_ie_test$(EXEEXT): $(tls_shared_ie_test_OBJECTS) $(tls_shared_ie_test_DEPENDENCIES) $(EXTRA_tls_shared_ie_test_DEPENDENCIES) 
	@rm -f tls_shared_ie_test$(EXEEXT)
	$(tls_shared_ie_test_LINK) $(tls_shared_ie_test_OBJECTS) $(tls_shared_ie_test_LDADD) $(LIBS)
tls_shared_nonpic_test$(EXEEXT): $(tls_shared_nonpic_test_OBJECTS) $(tls_shared_nonpic_test_DEPENDENCIES) $(EXTRA_tls_shared_nonpic_test_DEPENDENCIES) 
	@rm -f tls_shared_nonpic_test$(EXEEXT)
	$(tls_shared_nonpic_test_LINK) $(tls_shared_nonpic_test_OBJECTS) $(tls_shared_nonpic_test_LDADD) $(LIBS)
tls_shared_test$(EXEEXT): $(tls_shared_test_OBJECTS) $(tls_shared_test_DEPENDENCIES) $(EXTRA_tls_shared_test_DEPENDENCIES) 
	@rm -f tls_shared_test$(EXEEXT)
	$(tls_shared_test_LINK) $(tls_shared_test_OBJECTS) $(tls_shared_test_LDADD) $(LIBS)
tls_static_pic_test$(EXEEXT): $(tls_static_pic_test_OBJECTS) $(tls_static_pic_test_DEPENDENCIES) $(EXTRA_tls_static_pic_test_DEPENDENCIES) 
	@rm -f tls_static_pic_test$(EXEEXT)
	$(tls_static_pic_test_LINK) $(tls_static_pic_test_OBJECTS) $(tls_static_pic_test_LDADD) $(LIBS)
tls_static_test$(EXEEXT): $(tls_static_test_OBJECTS) $(tls_static_test_DEPENDENCIES) $(EXTRA_tls_static_test_DEPENDENCIES) 
	@rm -f tls_static_test$(EXEEXT)
	$(tls_static_test_LINK) $(tls_static_test_OBJECTS) $(tls_static_test_LDADD) $(LIBS)
tls_test$(EXEEXT): $(tls_test_OBJECTS) $(tls_test_DEPENDENCIES) $(EXTRA_tls_test_DEPENDENCIES) 
	@rm -f tls_test$(EXEEXT)
	$(tls_test_LINK) $(tls_test_OBJECTS) $(tls_test_LDADD) $(LIBS)
two_file_mixed_2_shared_test$(EXEEXT): $(two_file_mixed_2_shared_test_OBJECTS) $(two_file_mixed_2_shared_test_DEPENDENCIES) $(EXTRA_two_file_mixed_2_shared_test_DEPENDENCIES) 
	@rm -f two_file_mixed_2_shared_test$(EXEEXT)
	$(two_file_mixed_2_shared_test_LINK) $(two_file_mixed_2_shared_test_OBJECTS) $(two_file_mixed_2_shared_test_LDADD) $(LIBS)
#two_file_mixed_pie_test$(EXEEXT): $(two_file_mixed_pie_test_OBJECTS) $(two_file_mixed_pie_test_DEPENDENCIES) $(EXTRA_two_file_mixed_pie_test_DEPENDENCIES) 
#	@rm -f two_file_mixed_pie_test$(EXEEXT)
#	$(LINK) $(two_file_mixed_pie_test_OBJECTS) $(two_file_mixed_pie_test_LDADD) $(LIBS)
#two_file_mixed_pie_test$(EXEEXT): $(two_file_mixed_pie_test_OBJECTS) $(two_file_mixed_pie_test_DEPENDENCIES) $(EXTRA_two_file_mixed_pie_test_DEPENDENCIES) 
#	@rm -f two_file_mixed_pie_test$(EXEEXT)
#	$(LINK) $(two_file_mixed_pie_test_OBJECTS) $(two_file_mixed_pie_test_LDADD) $(LIBS)
#two_file_mixed_pie_test$(EXEEXT): $(two_file_mixed_pie_test_OBJECTS) $(two_file_mixed_pie_test_DEPENDENCIES) $(EXTRA_two_file_mixed_pie_test_DEPENDENCIES) 
#	@rm -f two_file_mixed_pie_test$(EXEEXT)
#	$(LINK) $(two_file_mixed_pie_test_OBJECTS) $(two_file_mixed_pie_test_LDADD) $(LIBS)
two_file_mixed_shared_test$(EXEEXT): $(two_file_mixed_shared_test_OBJECTS) $(two_file_mixed_shared_test_DEPENDENCIES) $(EXTRA_two_file_mixed_shared_test_DEPENDENCIES) 
	@rm -f two_file_mixed_shared_test$(EXEEXT)
	$(two_file_mixed_shared_test_LINK) $(two_file_mixed_shared_test_OBJECTS) $(two_file_mixed_shared_test_LDADD) $(LIBS)
two_file_pic_test$(EXEEXT): $(two_file_pic_test_OBJECTS) $(two_file_pic_test_DEPENDENCIES) $(EXTRA_two_file_pic_test_DEPENDENCIES) 
	@rm -f two_file_pic_test$(EXEEXT)
	$(two_file_pic_test_LINK) $(two_file_pic_test_OBJECTS) $(two_file_pic_test_LDADD) $(LIBS)
#two_file_pie_test$(EXEEXT): $(two_file_pie_test_OBJECTS) $(two_file_pie_test_DEPENDENCIES) $(EXTRA_two_file_pie_test_DEPENDENCIES) 
#	@rm -f two_file_pie_test$(EXEEXT)
#	$(LINK) $(two_file_pie_test_OBJECTS) $(two_file_pie_test_LDADD) $(LIBS)
#two_file_pie_test$(EXEEXT): $(two_file_pie_test_OBJECTS) $(two_file_pie_test_DEPENDENCIES) $(EXTRA_two_file_pie_test_DEPENDENCIES) 
#	@rm -f two_file_pie_test$(EXEEXT)
#	$(LINK) $(two_file_pie_test_OBJECTS) $(two_file_pie_test_LDADD) $(LIBS)
two_file_relocatable_test$(EXEEXT): $(two_file_relocatable_test_OBJECTS) $(two_file_relocatable_test_DEPENDENCIES) $(EXTRA_two_file_relocatable_test_DEPENDENCIES) 
	@rm -f two_file_relocatable_test$(EXEEXT)
	$(two_file_relocatable_test_LINK) $(two_file_relocatable_test_OBJECTS) $(two_file_relocatable_test_LDADD) $(LIBS)
two_file_same_shared_nonpic_test$(EXEEXT): $(two_file_same_shared_nonpic_test_OBJECTS) $(two_file_same_shared_nonpic_test_DEPENDENCIES) $(EXTRA_two_file_same_shared_nonpic_test_DEPENDENCIES) 
	@rm -f two_file_same_shared_nonpic_test$(EXEEXT)
	$(two_file_same_shared_nonpic_test_LINK) $(two_file_same_shared_nonpic_test_OBJECTS) $(two_file_same_shared_nonpic_test_LDADD) $(LIBS)
two_file_same_shared_strip_test$(EXEEXT): $(two_file_same_shared_strip_test_OBJECTS) $(two_file_same_shared_strip_test_DEPENDENCIES) $(EXTRA_two_file_same_shared_strip_test_DEPENDENCIES) 
	@rm -f two_file_same_shared_strip_test$(EXEEXT)
	$(two_file_same_shared_strip_test_LINK) $(two_file_same_shared_strip_test_OBJECTS) $(two_file_same_shared_strip_test_LDADD) $(LIBS)
two_file_same_shared_test$(EXEEXT): $(two_file_same_shared_test_OBJECTS) $(two_file_same_shared_test_DEPENDENCIES) $(EXTRA_two_file_same_shared_test_DEPENDENCIES) 
	@rm -f two_file_same_shared_test$(EXEEXT)
	$(two_file_same_shared_test_LINK) $(two_file_same_shared_test_OBJECTS) $(two_file_same_shared_test_LDADD) $(LIBS)
two_file_separate_shared_12_nonpic_test$(EXEEXT): $(two_file_separate_shared_12_nonpic_test_OBJECTS) $(two_file_separate_shared_12_nonpic_test_DEPENDENCIES) $(EXTRA_two_file_separate_shared_12_nonpic_test_DEPENDENCIES) 
	@rm -f two_file_separate_shared_12_nonpic_test$(EXEEXT)
	$(two_file_separate_shared_12_nonpic_test_LINK) $(two_file_separate_shared_12_nonpic_test_OBJECTS) $(two_file_separate_shared_12_nonpic_test_LDADD) $(LIBS)
two_file_separate_shared_12_test$(EXEEXT): $(two_file_separate_shared_12_test_OBJECTS) $(two_file_separate_shared_12_test_DEPENDENCIES) $(EXTRA_two_file_separate_shared_12_test_DEPENDENCIES) 
	@rm -f two_file_separate_shared_12_test$(EXEEXT)
	$(two_file_separate_shared_12_test_LINK) $(two_file_separate_shared_12_test_OBJECTS) $(two_file_separate_shared_12_test_LDADD) $(LIBS)
two_file_separate_shared_21_nonpic_test$(EXEEXT): $(two_file_separate_shared_21_nonpic_test_OBJECTS) $(two_file_separate_shared_21_nonpic_test_DEPENDENCIES) $(EXTRA_two_file_separate_shared_21_nonpic_test_DEPENDENCIES) 
	@rm -f two_file_separate_shared_21_nonpic_test$(EXEEXT)
	$(two_file_separate_shared_21_nonpic_test_LINK) $(two_file_separate_shared_21_nonpic_test_OBJECTS) $(two_file_separate_shared_21_nonpic_test_LDADD) $(LIBS)
two_file_separate_shared_21_test$(EXEEXT): $(two_file_separate_shared_21_test_OBJECTS) $(two_file_separate_shared_21_test_DEPENDENCIES) $(EXTRA_two_file_separate_shared_21_test_DEPENDENCIES) 
	@rm -f two_file_separate_shared_21_test$(EXEEXT)
	$(two_file_separate_shared_21_test_LINK) $(two_file_separate_shared_21_test_OBJECTS) $(two_file_separate_shared_21_test_LDADD) $(LIBS)
two_file_shared_1_nonpic_test$(EXEEXT): $(two_file_shared_1_nonpic_test_OBJECTS) $(two_file_shared_1_nonpic_test_DEPENDENCIES) $(EXTRA_two_file_shared_1_nonpic_test_DEPENDENCIES) 
	@rm -f two_file_shared_1_nonpic_test$(EXEEXT)
	$(two_file_shared_1_nonpic_test_LINK) $(two_file_shared_1_nonpic_test_OBJECTS) $(two_file_shared_1_nonpic_test_LDADD) $(LIBS)
two_file_shared_1_pic_2_test$(EXEEXT): $(two_file_shared_1_pic_2_test_OBJECTS) $(two_file_shared_1_pic_2_test_DEPENDENCIES) $(EXTRA_two_file_shared_1_pic_2_test_DEPENDENCIES) 
	@rm -f two_file_shared_1_pic_2_test$(EXEEXT)
	$(two_file_shared_1_pic_2_test_LINK) $(two_file_shared_1_pic_2_test_OBJECTS) $(two_file_shared_1_pic_2_test_LDADD) $(LIBS)
two_file_shared_1_test$(EXEEXT): $(two_file_shared_1_test_OBJECTS) $(two_file_shared_1_test_DEPENDENCIES) $(EXTRA_two_file_shared_1_test_DEPENDENCIES) 
	@rm -f two_file_shared_1_test$(EXEEXT)
	$(two_file_shared_1_test_LINK) $(two_file_shared_1_test_OBJECTS) $(two_file_shared_1_test_LDADD) $(LIBS)
two_file_shared_2_nonpic_test$(EXEEXT): $(two_file_shared_2_nonpic_test_OBJECTS) $(two_file_shared_2_nonpic_test_DEPENDENCIES) $(EXTRA_two_file_shared_2_nonpic_test_DEPENDENCIES) 
	@rm -f two_file_shared_2_nonpic_test$(EXEEXT)
	$(two_file_shared_2_nonpic_test_LINK) $(two_file_shared_2_nonpic_test_OBJECTS) $(two_file_shared_2_nonpic_test_LDADD) $(LIBS)
two_file_shared_2_pic_1_test$(EXEEXT): $(two_file_shared_2_pic_1_test_OBJECTS) $(two_file_shared_2_pic_1_test_DEPENDENCIES) $(EXTRA_two_file_shared_2_pic_1_test_DEPENDENCIES) 
	@rm -f two_file_shared_2_pic_1_test$(EXEEXT)
	$(two_file_shared_2_pic_1_test_LINK) $(two_file_shared_2_pic_1_test_OBJECTS) $(two_file_shared_2_pic_1_test_LDADD) $(LIBS)
two_file_shared_2_test$(EXEEXT): $(two_file_shared_2_test_OBJECTS) $(two_file_shared_2_test_DEPENDENCIES) $(EXTRA_two_file_shared_2_test_DEPENDENCIES) 
	@rm -f two_file_shared_2_test$(EXEEXT)
	$(two_file_shared_2_test_LINK) $(two_file_shared_2_test_OBJECTS) $(two_file_shared_2_test_LDADD) $(LIBS)
two_file_static_test$(EXEEXT): $(two_file_static_test_OBJECTS) $(two_file_static_test_DEPENDENCIES) $(EXTRA_two_file_static_test_DEPENDENCIES) 
	@rm -f two_file_static_test$(EXEEXT)
	$(two_file_static_test_LINK) $(two_file_static_test_OBJECTS) $(two_file_static_test_LDADD) $(LIBS)
#two_file_strip_test$(EXEEXT): $(two_file_strip_test_OBJECTS) $(two_file_strip_test_DEPENDENCIES) $(EXTRA_two_file_strip_test_DEPENDENCIES) 
#	@rm -f two_file_strip_test$(EXEEXT)
#	$(LINK) $(two_file_strip_test_OBJECTS) $(two_file_strip_test_LDADD) $(LIBS)
#two_file_strip_test$(EXEEXT): $(two_file_strip_test_OBJECTS) $(two_file_strip_test_DEPENDENCIES) $(EXTRA_two_file_strip_test_DEPENDENCIES) 
#	@rm -f two_file_strip_test$(EXEEXT)
#	$(LINK) $(two_file_strip_test_OBJECTS) $(two_file_strip_test_LDADD) $(LIBS)
two_file_test$(EXEEXT): $(two_file_test_OBJECTS) $(two_file_test_DEPENDENCIES) $(EXTRA_two_file_test_DEPENDENCIES) 
	@rm -f two_file_test$(EXEEXT)
	$(two_file_test_LINK) $(two_file_test_OBJECTS) $(two_file_test_LDADD) $(LIBS)
ver_test$(EXEEXT): $(ver_test_OBJECTS) $(ver_test_DEPENDENCIES) $(EXTRA_ver_test_DEPENDENCIES) 
	@rm -f ver_test$(EXEEXT)
	$(ver_test_LINK) $(ver_test_OBJECTS) $(ver_test_LDADD) $(LIBS)
ver_test_11$(EXEEXT): $(ver_test_11_OBJECTS) $(ver_test_11_DEPENDENCIES) $(EXTRA_ver_test_11_DEPENDENCIES) 
	@rm -f ver_test_11$(EXEEXT)
	$(ver_test_11_LINK) $(ver_test_11_OBJECTS) $(ver_test_11_LDADD) $(LIBS)
ver_test_12$(EXEEXT): $(ver_test_12_OBJECTS) $(ver_test_12_DEPENDENCIES) $(EXTRA_ver_test_12_DEPENDENCIES) 
	@rm -f ver_test_12$(EXEEXT)
	$(ver_test_12_LINK) $(ver_test_12_OBJECTS) $(ver_test_12_LDADD) $(LIBS)
ver_test_2$(EXEEXT): $(ver_test_2_OBJECTS) $(ver_test_2_DEPENDENCIES) $(EXTRA_ver_test_2_DEPENDENCIES) 
	@rm -f ver_test_2$(EXEEXT)
	$(ver_test_2_LINK) $(ver_test_2_OBJECTS) $(ver_test_2_LDADD) $(LIBS)
ver_test_6$(EXEEXT): $(ver_test_6_OBJECTS) $(ver_test_6_DEPENDENCIES) $(EXTRA_ver_test_6_DEPENDENCIES) 
	@rm -f ver_test_6$(EXEEXT)
	$(ver_test_6_LINK) $(ver_test_6_OBJECTS) $(ver_test_6_LDADD) $(LIBS)
ver_test_8$(EXEEXT): $(ver_test_8_OBJECTS) $(ver_test_8_DEPENDENCIES) $(EXTRA_ver_test_8_DEPENDENCIES) 
	@rm -f ver_test_8$(EXEEXT)
	$(ver_test_8_LINK) $(ver_test_8_OBJECTS) $(ver_test_8_LDADD) $(LIBS)
ver_test_9$(EXEEXT): $(ver_test_9_OBJECTS) $(ver_test_9_DEPENDENCIES) $(EXTRA_ver_test_9_DEPENDENCIES) 
	@rm -f ver_test_9$(EXEEXT)
	$(ver_test_9_LINK) $(ver_test_9_OBJECTS) $(ver_test_9_LDADD) $(LIBS)
weak_alias_test$(EXEEXT): $(weak_alias_test_OBJECTS) $(weak_alias_test_DEPENDENCIES) $(EXTRA_weak_alias_test_DEPENDENCIES) 
	@rm -f weak_alias_test$(EXEEXT)
	$(weak_alias_test_LINK) $(weak_alias_test_OBJECTS) $(weak_alias_test_LDADD) $(LIBS)
#weak_plt$(EXEEXT): $(weak_plt_OBJECTS) $(weak_plt_DEPENDENCIES) $(EXTRA_weak_plt_DEPENDENCIES) 
#	@rm -f weak_plt$(EXEEXT)
#	$(LINK) $(weak_plt_OBJECTS) $(weak_plt_LDADD) $(LIBS)
#weak_plt$(EXEEXT): $(weak_plt_OBJECTS) $(weak_plt_DEPENDENCIES) $(EXTRA_weak_plt_DEPENDENCIES) 
#	@rm -f weak_plt$(EXEEXT)
#	$(LINK) $(weak_plt_OBJECTS) $(weak_plt_LDADD) $(LIBS)
weak_test$(EXEEXT): $(weak_test_OBJECTS) $(weak_test_DEPENDENCIES) $(EXTRA_weak_test_DEPENDENCIES) 
	@rm -f weak_test$(EXEEXT)
	$(weak_test_LINK) $(weak_test_OBJECTS) $(weak_test_LDADD) $(LIBS)
weak_undef_nonpic_test$(EXEEXT): $(weak_undef_nonpic_test_OBJECTS) $(weak_undef_nonpic_test_DEPENDENCIES) $(EXTRA_weak_undef_nonpic_test_DEPENDENCIES) 
	@rm -f weak_undef_nonpic_test$(EXEEXT)
	$(weak_undef_nonpic_test_LINK) $(weak_undef_nonpic_test_OBJECTS) $(weak_undef_nonpic_test_LDADD) $(LIBS)
weak_undef_test$(EXEEXT): $(weak_undef_test_OBJECTS) $(weak_undef_test_DEPENDENCIES) $(EXTRA_weak_undef_test_DEPENDENCIES) 
	@rm -f weak_undef_test$(EXEEXT)
	$(weak_undef_test_LINK) $(weak_undef_test_OBJECTS) $(weak_undef_test_LDADD) $(LIBS)
weak_undef_test_2$(EXEEXT): $(weak_undef_test_2_OBJECTS) $(weak_undef_test_2_DEPENDENCIES) $(EXTRA_weak_undef_test_2_DEPENDENCIES) 
	@rm -f weak_undef_test_2$(EXEEXT)
	$(weak_undef_test_2_LINK) $(weak_undef_test_2_OBJECTS) $(weak_undef_test_2_LDADD) $(LIBS)
weak_unresolved_symbols_test$(EXEEXT): $(weak_unresolved_symbols_test_OBJECTS) $(weak_unresolved_symbols_test_DEPENDENCIES) $(EXTRA_weak_unresolved_symbols_test_DEPENDENCIES) 
	@rm -f weak_unresolved_symbols_test$(EXEEXT)
	$(weak_unresolved_symbols_test_LINK) $(weak_unresolved_symbols_test_OBJECTS) $(weak_unresolved_symbols_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/basic_pic_test.Po
include ./$(DEPDIR)/basic_pie_test.Po
include ./$(DEPDIR)/basic_static_pic_test.Po
include ./$(DEPDIR)/basic_static_test.Po
include ./$(DEPDIR)/basic_test.Po
include ./$(DEPDIR)/binary_test.Po
include ./$(DEPDIR)/binary_unittest.Po
include ./$(DEPDIR)/common_test_1.Po
include ./$(DEPDIR)/constructor_test.Po
include ./$(DEPDIR)/copy_test.Po
include ./$(DEPDIR)/copy_test_relro.Po
include ./$(DEPDIR)/discard_locals_test.Po
include ./$(DEPDIR)/dynamic_list_2.Po
include ./$(DEPDIR)/eh_test.Po
include ./$(DEPDIR)/ehdr_start_test_1-ehdr_start_test.Po
include ./$(DEPDIR)/ehdr_start_test_2-ehdr_start_test.Po
include ./$(DEPDIR)/ehdr_start_test_3-ehdr_start_test.Po
include ./$(DEPDIR)/ehdr_start_test_5-ehdr_start_def.Po
include ./$(DEPDIR)/ehdr_start_test_5-ehdr_start_test.Po
include ./$(DEPDIR)/exception_test_1.Po
include ./$(DEPDIR)/exception_test_2.Po
include ./$(DEPDIR)/exception_test_main.Po
include ./$(DEPDIR)/exclude_libs_test.Po
include ./$(DEPDIR)/flagstest_compress_debug_sections.Po
include ./$(DEPDIR)/flagstest_compress_debug_sections_and_build_id_tree.Po
include ./$(DEPDIR)/flagstest_compress_debug_sections_gabi.Po
include ./$(DEPDIR)/flagstest_compress_debug_sections_gnu.Po
include ./$(DEPDIR)/flagstest_compress_debug_sections_none.Po
include ./$(DEPDIR)/flagstest_o_specialfile.Po
include ./$(DEPDIR)/flagstest_o_specialfile_and_compress_debug_sections.Po
include ./$(DEPDIR)/flagstest_o_ttext_1.Po
include ./$(DEPDIR)/icf_virtual_function_folding_test.Po
include ./$(DEPDIR)/ifuncdep2.Po
include ./$(DEPDIR)/ifuncmain1.Po
include ./$(DEPDIR)/ifuncmain1pic.Po
include ./$(DEPDIR)/ifuncmain1picstatic.Po
include ./$(DEPDIR)/ifuncmain1pie.Po
include ./$(DEPDIR)/ifuncmain1staticpic.Po
include ./$(DEPDIR)/ifuncmain1staticpie.Po
include ./$(DEPDIR)/ifuncmain1vis.Po
include ./$(DEPDIR)/ifuncmain1vispic.Po
include ./$(DEPDIR)/ifuncmain1vispie.Po
include ./$(DEPDIR)/ifuncmain2.Po
include ./$(DEPDIR)/ifuncmain2pic.Po
include ./$(DEPDIR)/ifuncmain2picstatic.Po
include ./$(DEPDIR)/ifuncmain3.Po
include ./$(DEPDIR)/ifuncmain4.Po
include ./$(DEPDIR)/ifuncmain4picstatic.Po
include ./$(DEPDIR)/ifuncmain5.Po
include ./$(DEPDIR)/ifuncmain5pic.Po
include ./$(DEPDIR)/ifuncmain5picstatic.Po
include ./$(DEPDIR)/ifuncmain5pie.Po
include ./$(DEPDIR)/ifuncmain5staticpic.Po
include ./$(DEPDIR)/ifuncmain6pie.Po
include ./$(DEPDIR)/ifuncmain7.Po
include ./$(DEPDIR)/ifuncmain7pic.Po
include ./$(DEPDIR)/ifuncmain7picstatic.Po
include ./$(DEPDIR)/ifuncmain7pie.Po
include ./$(DEPDIR)/ifuncvar3.Po
include ./$(DEPDIR)/incremental_comdat_test_1.Po
include ./$(DEPDIR)/incremental_common_test_1.Po
include ./$(DEPDIR)/incremental_copy_test.Po
include ./$(DEPDIR)/incremental_test_2.Po
include ./$(DEPDIR)/incremental_test_3.Po
include ./$(DEPDIR)/incremental_test_4.Po
include ./$(DEPDIR)/incremental_test_5.Po
include ./$(DEPDIR)/incremental_test_6.Po
include ./$(DEPDIR)/initpri1.Po
include ./$(DEPDIR)/initpri2.Po
include ./$(DEPDIR)/initpri3.Po
include ./$(DEPDIR)/justsyms_1.Po
include ./$(DEPDIR)/justsyms_exec.Po
include ./$(DEPDIR)/large-large.Po
include ./$(DEPDIR)/large_symbol_alignment.Po
include ./$(DEPDIR)/leb128_unittest.Po
include ./$(DEPDIR)/local_labels_test.Po
include ./$(DEPDIR)/many_sections_r_test.Po
include ./$(DEPDIR)/many_sections_test.Po
include ./$(DEPDIR)/object_unittest.Po
include ./$(DEPDIR)/overflow_unittest.Po
include ./$(DEPDIR)/permission_test.Po
include ./$(DEPDIR)/pie_copyrelocs_test-pie_copyrelocs_test.Po
include ./$(DEPDIR)/plugin_test_1.Po
include ./$(DEPDIR)/plugin_test_10.Po
include ./$(DEPDIR)/plugin_test_11.Po
include ./$(DEPDIR)/plugin_test_12.Po
include ./$(DEPDIR)/plugin_test_2.Po
include ./$(DEPDIR)/plugin_test_3.Po
include ./$(DEPDIR)/plugin_test_4.Po
include ./$(DEPDIR)/plugin_test_5.Po
include ./$(DEPDIR)/plugin_test_6.Po
include ./$(DEPDIR)/plugin_test_7.Po
include ./$(DEPDIR)/plugin_test_8.Po
include ./$(DEPDIR)/plugin_test_start_lib.Po
include ./$(DEPDIR)/plugin_test_tls.Po
include ./$(DEPDIR)/pr17704a_test.Po
include ./$(DEPDIR)/pr20216a_test-pr20216_def.Po
include ./$(DEPDIR)/pr20216a_test-pr20216_main.Po
include ./$(DEPDIR)/pr20216b_test-pr20216_def.Po
include ./$(DEPDIR)/pr20216b_test-pr20216_main.Po
include ./$(DEPDIR)/pr20216c_test-pr20216_def.Po
include ./$(DEPDIR)/pr20216c_test-pr20216_main.Po
include ./$(DEPDIR)/pr20216d_test-pr20216_def.Po
include ./$(DEPDIR)/pr20216d_test-pr20216_main.Po
include ./$(DEPDIR)/pr20216e_test-pr20216_main.Po
include ./$(DEPDIR)/pr20308a_test-pr20308_def.Po
include ./$(DEPDIR)/pr20308a_test-pr20308_main.Po
include ./$(DEPDIR)/pr20308b_test-pr20308_def.Po
include ./$(DEPDIR)/pr20308b_test-pr20308_main.Po
include ./$(DEPDIR)/pr20308c_test-pr20308_def.Po
include ./$(DEPDIR)/pr20308c_test-pr20308_main.Po
include ./$(DEPDIR)/pr20308d_test-pr20308_def.Po
include ./$(DEPDIR)/pr20308d_test-pr20308_main.Po
include ./$(DEPDIR)/pr20308e_test-pr20308_main.Po
include ./$(DEPDIR)/pr20976.Po
include ./$(DEPDIR)/pr22266.Po
include ./$(DEPDIR)/protected_3.Po
include ./$(DEPDIR)/protected_main_1.Po
include ./$(DEPDIR)/protected_main_2.Po
include ./$(DEPDIR)/protected_main_3.Po
include ./$(DEPDIR)/relro_test_main.Po
include ./$(DEPDIR)/script_test_11.Po
include ./$(DEPDIR)/script_test_12.Po
include ./$(DEPDIR)/script_test_12i.Po
include ./$(DEPDIR)/script_test_1a.Po
include ./$(DEPDIR)/script_test_1b.Po
include ./$(DEPDIR)/script_test_2.Po
include ./$(DEPDIR)/script_test_2a.Po
include ./$(DEPDIR)/script_test_2b.Po
include ./$(DEPDIR)/script_test_3.Po
include ./$(DEPDIR)/searched_file_test.Po
include ./$(DEPDIR)/start_lib_test.Po
include ./$(DEPDIR)/test.Po
include ./$(DEPDIR)/testfile.Po
include ./$(DEPDIR)/testmain.Po
include ./$(DEPDIR)/thin_archive_main.Po
include ./$(DEPDIR)/tls_pie_pic_test.Po
include ./$(DEPDIR)/tls_pie_test.Po
include ./$(DEPDIR)/tls_test.Po
include ./$(DEPDIR)/tls_test_file2.Po
include ./$(DEPDIR)/tls_test_main.Po
include ./$(DEPDIR)/two_file_mixed_pie_test.Po
include ./$(DEPDIR)/two_file_pie_test.Po
include ./$(DEPDIR)/two_file_strip_test.Po
include ./$(DEPDIR)/two_file_test_1.Po
include ./$(DEPDIR)/two_file_test_1b.Po
include ./$(DEPDIR)/two_file_test_2.Po
include ./$(DEPDIR)/two_file_test_main.Po
include ./$(DEPDIR)/ver_test_6.Po
include ./$(DEPDIR)/ver_test_main.Po
include ./$(DEPDIR)/ver_test_main_2.Po
include ./$(DEPDIR)/weak_alias_test_main.Po
include ./$(DEPDIR)/weak_plt.Po
include ./$(DEPDIR)/weak_test.Po
include ./$(DEPDIR)/weak_undef_test.Po
include ./$(DEPDIR)/weak_undef_test_2.Po
include ./$(DEPDIR)/weak_unresolved_symbols_test-weak_unresolved_symbols_test.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

large-large.o: large.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(large_CFLAGS) $(CFLAGS) -MT large-large.o -MD -MP -MF $(DEPDIR)/large-large.Tpo -c -o large-large.o `test -f 'large.c' || echo '$(srcdir)/'`large.c
	$(am__mv) $(DEPDIR)/large-large.Tpo $(DEPDIR)/large-large.Po
#	source='large.c' object='large-large.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(large_CFLAGS) $(CFLAGS) -c -o large-large.o `test -f 'large.c' || echo '$(srcdir)/'`large.c

large-large.obj: large.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(large_CFLAGS) $(CFLAGS) -MT large-large.obj -MD -MP -MF $(DEPDIR)/large-large.Tpo -c -o large-large.obj `if test -f 'large.c'; then $(CYGPATH_W) 'large.c'; else $(CYGPATH_W) '$(srcdir)/large.c'; fi`
	$(am__mv) $(DEPDIR)/large-large.Tpo $(DEPDIR)/large-large.Po
#	source='large.c' object='large-large.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(large_CFLAGS) $(CFLAGS) -c -o large-large.obj `if test -f 'large.c'; then $(CYGPATH_W) 'large.c'; else $(CYGPATH_W) '$(srcdir)/large.c'; fi`

pr20216a_test-pr20216_main.o: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216a_test_CFLAGS) $(CFLAGS) -MT pr20216a_test-pr20216_main.o -MD -MP -MF $(DEPDIR)/pr20216a_test-pr20216_main.Tpo -c -o pr20216a_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c
	$(am__mv) $(DEPDIR)/pr20216a_test-pr20216_main.Tpo $(DEPDIR)/pr20216a_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216a_test-pr20216_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216a_test_CFLAGS) $(CFLAGS) -c -o pr20216a_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c

pr20216a_test-pr20216_main.obj: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216a_test_CFLAGS) $(CFLAGS) -MT pr20216a_test-pr20216_main.obj -MD -MP -MF $(DEPDIR)/pr20216a_test-pr20216_main.Tpo -c -o pr20216a_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216a_test-pr20216_main.Tpo $(DEPDIR)/pr20216a_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216a_test-pr20216_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216a_test_CFLAGS) $(CFLAGS) -c -o pr20216a_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`

pr20216a_test-pr20216_def.o: pr20216_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216a_test_CFLAGS) $(CFLAGS) -MT pr20216a_test-pr20216_def.o -MD -MP -MF $(DEPDIR)/pr20216a_test-pr20216_def.Tpo -c -o pr20216a_test-pr20216_def.o `test -f 'pr20216_def.c' || echo '$(srcdir)/'`pr20216_def.c
	$(am__mv) $(DEPDIR)/pr20216a_test-pr20216_def.Tpo $(DEPDIR)/pr20216a_test-pr20216_def.Po
#	source='pr20216_def.c' object='pr20216a_test-pr20216_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216a_test_CFLAGS) $(CFLAGS) -c -o pr20216a_test-pr20216_def.o `test -f 'pr20216_def.c' || echo '$(srcdir)/'`pr20216_def.c

pr20216a_test-pr20216_def.obj: pr20216_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216a_test_CFLAGS) $(CFLAGS) -MT pr20216a_test-pr20216_def.obj -MD -MP -MF $(DEPDIR)/pr20216a_test-pr20216_def.Tpo -c -o pr20216a_test-pr20216_def.obj `if test -f 'pr20216_def.c'; then $(CYGPATH_W) 'pr20216_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_def.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216a_test-pr20216_def.Tpo $(DEPDIR)/pr20216a_test-pr20216_def.Po
#	source='pr20216_def.c' object='pr20216a_test-pr20216_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216a_test_CFLAGS) $(CFLAGS) -c -o pr20216a_test-pr20216_def.obj `if test -f 'pr20216_def.c'; then $(CYGPATH_W) 'pr20216_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_def.c'; fi`

pr20216b_test-pr20216_main.o: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216b_test_CFLAGS) $(CFLAGS) -MT pr20216b_test-pr20216_main.o -MD -MP -MF $(DEPDIR)/pr20216b_test-pr20216_main.Tpo -c -o pr20216b_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c
	$(am__mv) $(DEPDIR)/pr20216b_test-pr20216_main.Tpo $(DEPDIR)/pr20216b_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216b_test-pr20216_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216b_test_CFLAGS) $(CFLAGS) -c -o pr20216b_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c

pr20216b_test-pr20216_main.obj: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216b_test_CFLAGS) $(CFLAGS) -MT pr20216b_test-pr20216_main.obj -MD -MP -MF $(DEPDIR)/pr20216b_test-pr20216_main.Tpo -c -o pr20216b_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216b_test-pr20216_main.Tpo $(DEPDIR)/pr20216b_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216b_test-pr20216_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216b_test_CFLAGS) $(CFLAGS) -c -o pr20216b_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`

pr20216b_test-pr20216_def.o: pr20216_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216b_test_CFLAGS) $(CFLAGS) -MT pr20216b_test-pr20216_def.o -MD -MP -MF $(DEPDIR)/pr20216b_test-pr20216_def.Tpo -c -o pr20216b_test-pr20216_def.o `test -f 'pr20216_def.c' || echo '$(srcdir)/'`pr20216_def.c
	$(am__mv) $(DEPDIR)/pr20216b_test-pr20216_def.Tpo $(DEPDIR)/pr20216b_test-pr20216_def.Po
#	source='pr20216_def.c' object='pr20216b_test-pr20216_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216b_test_CFLAGS) $(CFLAGS) -c -o pr20216b_test-pr20216_def.o `test -f 'pr20216_def.c' || echo '$(srcdir)/'`pr20216_def.c

pr20216b_test-pr20216_def.obj: pr20216_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216b_test_CFLAGS) $(CFLAGS) -MT pr20216b_test-pr20216_def.obj -MD -MP -MF $(DEPDIR)/pr20216b_test-pr20216_def.Tpo -c -o pr20216b_test-pr20216_def.obj `if test -f 'pr20216_def.c'; then $(CYGPATH_W) 'pr20216_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_def.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216b_test-pr20216_def.Tpo $(DEPDIR)/pr20216b_test-pr20216_def.Po
#	source='pr20216_def.c' object='pr20216b_test-pr20216_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216b_test_CFLAGS) $(CFLAGS) -c -o pr20216b_test-pr20216_def.obj `if test -f 'pr20216_def.c'; then $(CYGPATH_W) 'pr20216_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_def.c'; fi`

pr20216c_test-pr20216_main.o: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216c_test_CFLAGS) $(CFLAGS) -MT pr20216c_test-pr20216_main.o -MD -MP -MF $(DEPDIR)/pr20216c_test-pr20216_main.Tpo -c -o pr20216c_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c
	$(am__mv) $(DEPDIR)/pr20216c_test-pr20216_main.Tpo $(DEPDIR)/pr20216c_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216c_test-pr20216_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216c_test_CFLAGS) $(CFLAGS) -c -o pr20216c_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c

pr20216c_test-pr20216_main.obj: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216c_test_CFLAGS) $(CFLAGS) -MT pr20216c_test-pr20216_main.obj -MD -MP -MF $(DEPDIR)/pr20216c_test-pr20216_main.Tpo -c -o pr20216c_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216c_test-pr20216_main.Tpo $(DEPDIR)/pr20216c_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216c_test-pr20216_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216c_test_CFLAGS) $(CFLAGS) -c -o pr20216c_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`

pr20216c_test-pr20216_def.o: pr20216_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216c_test_CFLAGS) $(CFLAGS) -MT pr20216c_test-pr20216_def.o -MD -MP -MF $(DEPDIR)/pr20216c_test-pr20216_def.Tpo -c -o pr20216c_test-pr20216_def.o `test -f 'pr20216_def.c' || echo '$(srcdir)/'`pr20216_def.c
	$(am__mv) $(DEPDIR)/pr20216c_test-pr20216_def.Tpo $(DEPDIR)/pr20216c_test-pr20216_def.Po
#	source='pr20216_def.c' object='pr20216c_test-pr20216_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216c_test_CFLAGS) $(CFLAGS) -c -o pr20216c_test-pr20216_def.o `test -f 'pr20216_def.c' || echo '$(srcdir)/'`pr20216_def.c

pr20216c_test-pr20216_def.obj: pr20216_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216c_test_CFLAGS) $(CFLAGS) -MT pr20216c_test-pr20216_def.obj -MD -MP -MF $(DEPDIR)/pr20216c_test-pr20216_def.Tpo -c -o pr20216c_test-pr20216_def.obj `if test -f 'pr20216_def.c'; then $(CYGPATH_W) 'pr20216_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_def.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216c_test-pr20216_def.Tpo $(DEPDIR)/pr20216c_test-pr20216_def.Po
#	source='pr20216_def.c' object='pr20216c_test-pr20216_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216c_test_CFLAGS) $(CFLAGS) -c -o pr20216c_test-pr20216_def.obj `if test -f 'pr20216_def.c'; then $(CYGPATH_W) 'pr20216_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_def.c'; fi`

pr20216d_test-pr20216_main.o: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216d_test_CFLAGS) $(CFLAGS) -MT pr20216d_test-pr20216_main.o -MD -MP -MF $(DEPDIR)/pr20216d_test-pr20216_main.Tpo -c -o pr20216d_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c
	$(am__mv) $(DEPDIR)/pr20216d_test-pr20216_main.Tpo $(DEPDIR)/pr20216d_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216d_test-pr20216_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216d_test_CFLAGS) $(CFLAGS) -c -o pr20216d_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c

pr20216d_test-pr20216_main.obj: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216d_test_CFLAGS) $(CFLAGS) -MT pr20216d_test-pr20216_main.obj -MD -MP -MF $(DEPDIR)/pr20216d_test-pr20216_main.Tpo -c -o pr20216d_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216d_test-pr20216_main.Tpo $(DEPDIR)/pr20216d_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216d_test-pr20216_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216d_test_CFLAGS) $(CFLAGS) -c -o pr20216d_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`

pr20216d_test-pr20216_def.o: pr20216_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216d_test_CFLAGS) $(CFLAGS) -MT pr20216d_test-pr20216_def.o -MD -MP -MF $(DEPDIR)/pr20216d_test-pr20216_def.Tpo -c -o pr20216d_test-pr20216_def.o `test -f 'pr20216_def.c' || echo '$(srcdir)/'`pr20216_def.c
	$(am__mv) $(DEPDIR)/pr20216d_test-pr20216_def.Tpo $(DEPDIR)/pr20216d_test-pr20216_def.Po
#	source='pr20216_def.c' object='pr20216d_test-pr20216_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216d_test_CFLAGS) $(CFLAGS) -c -o pr20216d_test-pr20216_def.o `test -f 'pr20216_def.c' || echo '$(srcdir)/'`pr20216_def.c

pr20216d_test-pr20216_def.obj: pr20216_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216d_test_CFLAGS) $(CFLAGS) -MT pr20216d_test-pr20216_def.obj -MD -MP -MF $(DEPDIR)/pr20216d_test-pr20216_def.Tpo -c -o pr20216d_test-pr20216_def.obj `if test -f 'pr20216_def.c'; then $(CYGPATH_W) 'pr20216_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_def.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216d_test-pr20216_def.Tpo $(DEPDIR)/pr20216d_test-pr20216_def.Po
#	source='pr20216_def.c' object='pr20216d_test-pr20216_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216d_test_CFLAGS) $(CFLAGS) -c -o pr20216d_test-pr20216_def.obj `if test -f 'pr20216_def.c'; then $(CYGPATH_W) 'pr20216_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_def.c'; fi`

pr20216e_test-pr20216_main.o: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216e_test_CFLAGS) $(CFLAGS) -MT pr20216e_test-pr20216_main.o -MD -MP -MF $(DEPDIR)/pr20216e_test-pr20216_main.Tpo -c -o pr20216e_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c
	$(am__mv) $(DEPDIR)/pr20216e_test-pr20216_main.Tpo $(DEPDIR)/pr20216e_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216e_test-pr20216_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216e_test_CFLAGS) $(CFLAGS) -c -o pr20216e_test-pr20216_main.o `test -f 'pr20216_main.c' || echo '$(srcdir)/'`pr20216_main.c

pr20216e_test-pr20216_main.obj: pr20216_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216e_test_CFLAGS) $(CFLAGS) -MT pr20216e_test-pr20216_main.obj -MD -MP -MF $(DEPDIR)/pr20216e_test-pr20216_main.Tpo -c -o pr20216e_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20216e_test-pr20216_main.Tpo $(DEPDIR)/pr20216e_test-pr20216_main.Po
#	source='pr20216_main.c' object='pr20216e_test-pr20216_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20216e_test_CFLAGS) $(CFLAGS) -c -o pr20216e_test-pr20216_main.obj `if test -f 'pr20216_main.c'; then $(CYGPATH_W) 'pr20216_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20216_main.c'; fi`

pr20308a_test-pr20308_main.o: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308a_test_CFLAGS) $(CFLAGS) -MT pr20308a_test-pr20308_main.o -MD -MP -MF $(DEPDIR)/pr20308a_test-pr20308_main.Tpo -c -o pr20308a_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c
	$(am__mv) $(DEPDIR)/pr20308a_test-pr20308_main.Tpo $(DEPDIR)/pr20308a_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308a_test-pr20308_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308a_test_CFLAGS) $(CFLAGS) -c -o pr20308a_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c

pr20308a_test-pr20308_main.obj: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308a_test_CFLAGS) $(CFLAGS) -MT pr20308a_test-pr20308_main.obj -MD -MP -MF $(DEPDIR)/pr20308a_test-pr20308_main.Tpo -c -o pr20308a_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308a_test-pr20308_main.Tpo $(DEPDIR)/pr20308a_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308a_test-pr20308_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308a_test_CFLAGS) $(CFLAGS) -c -o pr20308a_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`

pr20308a_test-pr20308_def.o: pr20308_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308a_test_CFLAGS) $(CFLAGS) -MT pr20308a_test-pr20308_def.o -MD -MP -MF $(DEPDIR)/pr20308a_test-pr20308_def.Tpo -c -o pr20308a_test-pr20308_def.o `test -f 'pr20308_def.c' || echo '$(srcdir)/'`pr20308_def.c
	$(am__mv) $(DEPDIR)/pr20308a_test-pr20308_def.Tpo $(DEPDIR)/pr20308a_test-pr20308_def.Po
#	source='pr20308_def.c' object='pr20308a_test-pr20308_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308a_test_CFLAGS) $(CFLAGS) -c -o pr20308a_test-pr20308_def.o `test -f 'pr20308_def.c' || echo '$(srcdir)/'`pr20308_def.c

pr20308a_test-pr20308_def.obj: pr20308_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308a_test_CFLAGS) $(CFLAGS) -MT pr20308a_test-pr20308_def.obj -MD -MP -MF $(DEPDIR)/pr20308a_test-pr20308_def.Tpo -c -o pr20308a_test-pr20308_def.obj `if test -f 'pr20308_def.c'; then $(CYGPATH_W) 'pr20308_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_def.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308a_test-pr20308_def.Tpo $(DEPDIR)/pr20308a_test-pr20308_def.Po
#	source='pr20308_def.c' object='pr20308a_test-pr20308_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308a_test_CFLAGS) $(CFLAGS) -c -o pr20308a_test-pr20308_def.obj `if test -f 'pr20308_def.c'; then $(CYGPATH_W) 'pr20308_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_def.c'; fi`

pr20308b_test-pr20308_main.o: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308b_test_CFLAGS) $(CFLAGS) -MT pr20308b_test-pr20308_main.o -MD -MP -MF $(DEPDIR)/pr20308b_test-pr20308_main.Tpo -c -o pr20308b_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c
	$(am__mv) $(DEPDIR)/pr20308b_test-pr20308_main.Tpo $(DEPDIR)/pr20308b_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308b_test-pr20308_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308b_test_CFLAGS) $(CFLAGS) -c -o pr20308b_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c

pr20308b_test-pr20308_main.obj: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308b_test_CFLAGS) $(CFLAGS) -MT pr20308b_test-pr20308_main.obj -MD -MP -MF $(DEPDIR)/pr20308b_test-pr20308_main.Tpo -c -o pr20308b_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308b_test-pr20308_main.Tpo $(DEPDIR)/pr20308b_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308b_test-pr20308_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308b_test_CFLAGS) $(CFLAGS) -c -o pr20308b_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`

pr20308b_test-pr20308_def.o: pr20308_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308b_test_CFLAGS) $(CFLAGS) -MT pr20308b_test-pr20308_def.o -MD -MP -MF $(DEPDIR)/pr20308b_test-pr20308_def.Tpo -c -o pr20308b_test-pr20308_def.o `test -f 'pr20308_def.c' || echo '$(srcdir)/'`pr20308_def.c
	$(am__mv) $(DEPDIR)/pr20308b_test-pr20308_def.Tpo $(DEPDIR)/pr20308b_test-pr20308_def.Po
#	source='pr20308_def.c' object='pr20308b_test-pr20308_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308b_test_CFLAGS) $(CFLAGS) -c -o pr20308b_test-pr20308_def.o `test -f 'pr20308_def.c' || echo '$(srcdir)/'`pr20308_def.c

pr20308b_test-pr20308_def.obj: pr20308_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308b_test_CFLAGS) $(CFLAGS) -MT pr20308b_test-pr20308_def.obj -MD -MP -MF $(DEPDIR)/pr20308b_test-pr20308_def.Tpo -c -o pr20308b_test-pr20308_def.obj `if test -f 'pr20308_def.c'; then $(CYGPATH_W) 'pr20308_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_def.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308b_test-pr20308_def.Tpo $(DEPDIR)/pr20308b_test-pr20308_def.Po
#	source='pr20308_def.c' object='pr20308b_test-pr20308_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308b_test_CFLAGS) $(CFLAGS) -c -o pr20308b_test-pr20308_def.obj `if test -f 'pr20308_def.c'; then $(CYGPATH_W) 'pr20308_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_def.c'; fi`

pr20308c_test-pr20308_main.o: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308c_test_CFLAGS) $(CFLAGS) -MT pr20308c_test-pr20308_main.o -MD -MP -MF $(DEPDIR)/pr20308c_test-pr20308_main.Tpo -c -o pr20308c_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c
	$(am__mv) $(DEPDIR)/pr20308c_test-pr20308_main.Tpo $(DEPDIR)/pr20308c_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308c_test-pr20308_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308c_test_CFLAGS) $(CFLAGS) -c -o pr20308c_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c

pr20308c_test-pr20308_main.obj: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308c_test_CFLAGS) $(CFLAGS) -MT pr20308c_test-pr20308_main.obj -MD -MP -MF $(DEPDIR)/pr20308c_test-pr20308_main.Tpo -c -o pr20308c_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308c_test-pr20308_main.Tpo $(DEPDIR)/pr20308c_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308c_test-pr20308_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308c_test_CFLAGS) $(CFLAGS) -c -o pr20308c_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`

pr20308c_test-pr20308_def.o: pr20308_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308c_test_CFLAGS) $(CFLAGS) -MT pr20308c_test-pr20308_def.o -MD -MP -MF $(DEPDIR)/pr20308c_test-pr20308_def.Tpo -c -o pr20308c_test-pr20308_def.o `test -f 'pr20308_def.c' || echo '$(srcdir)/'`pr20308_def.c
	$(am__mv) $(DEPDIR)/pr20308c_test-pr20308_def.Tpo $(DEPDIR)/pr20308c_test-pr20308_def.Po
#	source='pr20308_def.c' object='pr20308c_test-pr20308_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308c_test_CFLAGS) $(CFLAGS) -c -o pr20308c_test-pr20308_def.o `test -f 'pr20308_def.c' || echo '$(srcdir)/'`pr20308_def.c

pr20308c_test-pr20308_def.obj: pr20308_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308c_test_CFLAGS) $(CFLAGS) -MT pr20308c_test-pr20308_def.obj -MD -MP -MF $(DEPDIR)/pr20308c_test-pr20308_def.Tpo -c -o pr20308c_test-pr20308_def.obj `if test -f 'pr20308_def.c'; then $(CYGPATH_W) 'pr20308_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_def.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308c_test-pr20308_def.Tpo $(DEPDIR)/pr20308c_test-pr20308_def.Po
#	source='pr20308_def.c' object='pr20308c_test-pr20308_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308c_test_CFLAGS) $(CFLAGS) -c -o pr20308c_test-pr20308_def.obj `if test -f 'pr20308_def.c'; then $(CYGPATH_W) 'pr20308_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_def.c'; fi`

pr20308d_test-pr20308_main.o: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308d_test_CFLAGS) $(CFLAGS) -MT pr20308d_test-pr20308_main.o -MD -MP -MF $(DEPDIR)/pr20308d_test-pr20308_main.Tpo -c -o pr20308d_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c
	$(am__mv) $(DEPDIR)/pr20308d_test-pr20308_main.Tpo $(DEPDIR)/pr20308d_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308d_test-pr20308_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308d_test_CFLAGS) $(CFLAGS) -c -o pr20308d_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c

pr20308d_test-pr20308_main.obj: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308d_test_CFLAGS) $(CFLAGS) -MT pr20308d_test-pr20308_main.obj -MD -MP -MF $(DEPDIR)/pr20308d_test-pr20308_main.Tpo -c -o pr20308d_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308d_test-pr20308_main.Tpo $(DEPDIR)/pr20308d_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308d_test-pr20308_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308d_test_CFLAGS) $(CFLAGS) -c -o pr20308d_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`

pr20308d_test-pr20308_def.o: pr20308_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308d_test_CFLAGS) $(CFLAGS) -MT pr20308d_test-pr20308_def.o -MD -MP -MF $(DEPDIR)/pr20308d_test-pr20308_def.Tpo -c -o pr20308d_test-pr20308_def.o `test -f 'pr20308_def.c' || echo '$(srcdir)/'`pr20308_def.c
	$(am__mv) $(DEPDIR)/pr20308d_test-pr20308_def.Tpo $(DEPDIR)/pr20308d_test-pr20308_def.Po
#	source='pr20308_def.c' object='pr20308d_test-pr20308_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308d_test_CFLAGS) $(CFLAGS) -c -o pr20308d_test-pr20308_def.o `test -f 'pr20308_def.c' || echo '$(srcdir)/'`pr20308_def.c

pr20308d_test-pr20308_def.obj: pr20308_def.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308d_test_CFLAGS) $(CFLAGS) -MT pr20308d_test-pr20308_def.obj -MD -MP -MF $(DEPDIR)/pr20308d_test-pr20308_def.Tpo -c -o pr20308d_test-pr20308_def.obj `if test -f 'pr20308_def.c'; then $(CYGPATH_W) 'pr20308_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_def.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308d_test-pr20308_def.Tpo $(DEPDIR)/pr20308d_test-pr20308_def.Po
#	source='pr20308_def.c' object='pr20308d_test-pr20308_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308d_test_CFLAGS) $(CFLAGS) -c -o pr20308d_test-pr20308_def.obj `if test -f 'pr20308_def.c'; then $(CYGPATH_W) 'pr20308_def.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_def.c'; fi`

pr20308e_test-pr20308_main.o: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308e_test_CFLAGS) $(CFLAGS) -MT pr20308e_test-pr20308_main.o -MD -MP -MF $(DEPDIR)/pr20308e_test-pr20308_main.Tpo -c -o pr20308e_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c
	$(am__mv) $(DEPDIR)/pr20308e_test-pr20308_main.Tpo $(DEPDIR)/pr20308e_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308e_test-pr20308_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308e_test_CFLAGS) $(CFLAGS) -c -o pr20308e_test-pr20308_main.o `test -f 'pr20308_main.c' || echo '$(srcdir)/'`pr20308_main.c

pr20308e_test-pr20308_main.obj: pr20308_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308e_test_CFLAGS) $(CFLAGS) -MT pr20308e_test-pr20308_main.obj -MD -MP -MF $(DEPDIR)/pr20308e_test-pr20308_main.Tpo -c -o pr20308e_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`
	$(am__mv) $(DEPDIR)/pr20308e_test-pr20308_main.Tpo $(DEPDIR)/pr20308e_test-pr20308_main.Po
#	source='pr20308_main.c' object='pr20308e_test-pr20308_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr20308e_test_CFLAGS) $(CFLAGS) -c -o pr20308e_test-pr20308_main.obj `if test -f 'pr20308_main.c'; then $(CYGPATH_W) 'pr20308_main.c'; else $(CYGPATH_W) '$(srcdir)/pr20308_main.c'; fi`

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ehdr_start_test_1-ehdr_start_test.o: ehdr_start_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_1_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_1-ehdr_start_test.o -MD -MP -MF $(DEPDIR)/ehdr_start_test_1-ehdr_start_test.Tpo -c -o ehdr_start_test_1-ehdr_start_test.o `test -f 'ehdr_start_test.cc' || echo '$(srcdir)/'`ehdr_start_test.cc
	$(am__mv) $(DEPDIR)/ehdr_start_test_1-ehdr_start_test.Tpo $(DEPDIR)/ehdr_start_test_1-ehdr_start_test.Po
#	source='ehdr_start_test.cc' object='ehdr_start_test_1-ehdr_start_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_1_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_1-ehdr_start_test.o `test -f 'ehdr_start_test.cc' || echo '$(srcdir)/'`ehdr_start_test.cc

ehdr_start_test_1-ehdr_start_test.obj: ehdr_start_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_1_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_1-ehdr_start_test.obj -MD -MP -MF $(DEPDIR)/ehdr_start_test_1-ehdr_start_test.Tpo -c -o ehdr_start_test_1-ehdr_start_test.obj `if test -f 'ehdr_start_test.cc'; then $(CYGPATH_W) 'ehdr_start_test.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_test.cc'; fi`
	$(am__mv) $(DEPDIR)/ehdr_start_test_1-ehdr_start_test.Tpo $(DEPDIR)/ehdr_start_test_1-ehdr_start_test.Po
#	source='ehdr_start_test.cc' object='ehdr_start_test_1-ehdr_start_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_1_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_1-ehdr_start_test.obj `if test -f 'ehdr_start_test.cc'; then $(CYGPATH_W) 'ehdr_start_test.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_test.cc'; fi`

ehdr_start_test_2-ehdr_start_test.o: ehdr_start_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_2_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_2-ehdr_start_test.o -MD -MP -MF $(DEPDIR)/ehdr_start_test_2-ehdr_start_test.Tpo -c -o ehdr_start_test_2-ehdr_start_test.o `test -f 'ehdr_start_test.cc' || echo '$(srcdir)/'`ehdr_start_test.cc
	$(am__mv) $(DEPDIR)/ehdr_start_test_2-ehdr_start_test.Tpo $(DEPDIR)/ehdr_start_test_2-ehdr_start_test.Po
#	source='ehdr_start_test.cc' object='ehdr_start_test_2-ehdr_start_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_2_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_2-ehdr_start_test.o `test -f 'ehdr_start_test.cc' || echo '$(srcdir)/'`ehdr_start_test.cc

ehdr_start_test_2-ehdr_start_test.obj: ehdr_start_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_2_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_2-ehdr_start_test.obj -MD -MP -MF $(DEPDIR)/ehdr_start_test_2-ehdr_start_test.Tpo -c -o ehdr_start_test_2-ehdr_start_test.obj `if test -f 'ehdr_start_test.cc'; then $(CYGPATH_W) 'ehdr_start_test.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_test.cc'; fi`
	$(am__mv) $(DEPDIR)/ehdr_start_test_2-ehdr_start_test.Tpo $(DEPDIR)/ehdr_start_test_2-ehdr_start_test.Po
#	source='ehdr_start_test.cc' object='ehdr_start_test_2-ehdr_start_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_2_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_2-ehdr_start_test.obj `if test -f 'ehdr_start_test.cc'; then $(CYGPATH_W) 'ehdr_start_test.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_test.cc'; fi`

ehdr_start_test_3-ehdr_start_test.o: ehdr_start_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_3_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_3-ehdr_start_test.o -MD -MP -MF $(DEPDIR)/ehdr_start_test_3-ehdr_start_test.Tpo -c -o ehdr_start_test_3-ehdr_start_test.o `test -f 'ehdr_start_test.cc' || echo '$(srcdir)/'`ehdr_start_test.cc
	$(am__mv) $(DEPDIR)/ehdr_start_test_3-ehdr_start_test.Tpo $(DEPDIR)/ehdr_start_test_3-ehdr_start_test.Po
#	source='ehdr_start_test.cc' object='ehdr_start_test_3-ehdr_start_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_3_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_3-ehdr_start_test.o `test -f 'ehdr_start_test.cc' || echo '$(srcdir)/'`ehdr_start_test.cc

ehdr_start_test_3-ehdr_start_test.obj: ehdr_start_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_3_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_3-ehdr_start_test.obj -MD -MP -MF $(DEPDIR)/ehdr_start_test_3-ehdr_start_test.Tpo -c -o ehdr_start_test_3-ehdr_start_test.obj `if test -f 'ehdr_start_test.cc'; then $(CYGPATH_W) 'ehdr_start_test.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_test.cc'; fi`
	$(am__mv) $(DEPDIR)/ehdr_start_test_3-ehdr_start_test.Tpo $(DEPDIR)/ehdr_start_test_3-ehdr_start_test.Po
#	source='ehdr_start_test.cc' object='ehdr_start_test_3-ehdr_start_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_3_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_3-ehdr_start_test.obj `if test -f 'ehdr_start_test.cc'; then $(CYGPATH_W) 'ehdr_start_test.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_test.cc'; fi`

ehdr_start_test_5-ehdr_start_test.o: ehdr_start_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_5_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_5-ehdr_start_test.o -MD -MP -MF $(DEPDIR)/ehdr_start_test_5-ehdr_start_test.Tpo -c -o ehdr_start_test_5-ehdr_start_test.o `test -f 'ehdr_start_test.cc' || echo '$(srcdir)/'`ehdr_start_test.cc
	$(am__mv) $(DEPDIR)/ehdr_start_test_5-ehdr_start_test.Tpo $(DEPDIR)/ehdr_start_test_5-ehdr_start_test.Po
#	source='ehdr_start_test.cc' object='ehdr_start_test_5-ehdr_start_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_5_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_5-ehdr_start_test.o `test -f 'ehdr_start_test.cc' || echo '$(srcdir)/'`ehdr_start_test.cc

ehdr_start_test_5-ehdr_start_test.obj: ehdr_start_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_5_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_5-ehdr_start_test.obj -MD -MP -MF $(DEPDIR)/ehdr_start_test_5-ehdr_start_test.Tpo -c -o ehdr_start_test_5-ehdr_start_test.obj `if test -f 'ehdr_start_test.cc'; then $(CYGPATH_W) 'ehdr_start_test.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_test.cc'; fi`
	$(am__mv) $(DEPDIR)/ehdr_start_test_5-ehdr_start_test.Tpo $(DEPDIR)/ehdr_start_test_5-ehdr_start_test.Po
#	source='ehdr_start_test.cc' object='ehdr_start_test_5-ehdr_start_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_5_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_5-ehdr_start_test.obj `if test -f 'ehdr_start_test.cc'; then $(CYGPATH_W) 'ehdr_start_test.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_test.cc'; fi`

ehdr_start_test_5-ehdr_start_def.o: ehdr_start_def.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_5_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_5-ehdr_start_def.o -MD -MP -MF $(DEPDIR)/ehdr_start_test_5-ehdr_start_def.Tpo -c -o ehdr_start_test_5-ehdr_start_def.o `test -f 'ehdr_start_def.cc' || echo '$(srcdir)/'`ehdr_start_def.cc
	$(am__mv) $(DEPDIR)/ehdr_start_test_5-ehdr_start_def.Tpo $(DEPDIR)/ehdr_start_test_5-ehdr_start_def.Po
#	source='ehdr_start_def.cc' object='ehdr_start_test_5-ehdr_start_def.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_5_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_5-ehdr_start_def.o `test -f 'ehdr_start_def.cc' || echo '$(srcdir)/'`ehdr_start_def.cc

ehdr_start_test_5-ehdr_start_def.obj: ehdr_start_def.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_5_CXXFLAGS) $(CXXFLAGS) -MT ehdr_start_test_5-ehdr_start_def.obj -MD -MP -MF $(DEPDIR)/ehdr_start_test_5-ehdr_start_def.Tpo -c -o ehdr_start_test_5-ehdr_start_def.obj `if test -f 'ehdr_start_def.cc'; then $(CYGPATH_W) 'ehdr_start_def.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_def.cc'; fi`
	$(am__mv) $(DEPDIR)/ehdr_start_test_5-ehdr_start_def.Tpo $(DEPDIR)/ehdr_start_test_5-ehdr_start_def.Po
#	source='ehdr_start_def.cc' object='ehdr_start_test_5-ehdr_start_def.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ehdr_start_test_5_CXXFLAGS) $(CXXFLAGS) -c -o ehdr_start_test_5-ehdr_start_def.obj `if test -f 'ehdr_start_def.cc'; then $(CYGPATH_W) 'ehdr_start_def.cc'; else $(CYGPATH_W) '$(srcdir)/ehdr_start_def.cc'; fi`

pie_copyrelocs_test-pie_copyrelocs_test.o: pie_copyrelocs_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pie_copyrelocs_test_CXXFLAGS) $(CXXFLAGS) -MT pie_copyrelocs_test-pie_copyrelocs_test.o -MD -MP -MF $(DEPDIR)/pie_copyrelocs_test-pie_copyrelocs_test.Tpo -c -o pie_copyrelocs_test-pie_copyrelocs_test.o `test -f 'pie_copyrelocs_test.cc' || echo '$(srcdir)/'`pie_copyrelocs_test.cc
	$(am__mv) $(DEPDIR)/pie_copyrelocs_test-pie_copyrelocs_test.Tpo $(DEPDIR)/pie_copyrelocs_test-pie_copyrelocs_test.Po
#	source='pie_copyrelocs_test.cc' object='pie_copyrelocs_test-pie_copyrelocs_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pie_copyrelocs_test_CXXFLAGS) $(CXXFLAGS) -c -o pie_copyrelocs_test-pie_copyrelocs_test.o `test -f 'pie_copyrelocs_test.cc' || echo '$(srcdir)/'`pie_copyrelocs_test.cc

pie_copyrelocs_test-pie_copyrelocs_test.obj: pie_copyrelocs_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pie_copyrelocs_test_CXXFLAGS) $(CXXFLAGS) -MT pie_copyrelocs_test-pie_copyrelocs_test.obj -MD -MP -MF $(DEPDIR)/pie_copyrelocs_test-pie_copyrelocs_test.Tpo -c -o pie_copyrelocs_test-pie_copyrelocs_test.obj `if test -f 'pie_copyrelocs_test.cc'; then $(CYGPATH_W) 'pie_copyrelocs_test.cc'; else $(CYGPATH_W) '$(srcdir)/pie_copyrelocs_test.cc'; fi`
	$(am__mv) $(DEPDIR)/pie_copyrelocs_test-pie_copyrelocs_test.Tpo $(DEPDIR)/pie_copyrelocs_test-pie_copyrelocs_test.Po
#	source='pie_copyrelocs_test.cc' object='pie_copyrelocs_test-pie_copyrelocs_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pie_copyrelocs_test_CXXFLAGS) $(CXXFLAGS) -c -o pie_copyrelocs_test-pie_copyrelocs_test.obj `if test -f 'pie_copyrelocs_test.cc'; then $(CYGPATH_W) 'pie_copyrelocs_test.cc'; else $(CYGPATH_W) '$(srcdir)/pie_copyrelocs_test.cc'; fi`

weak_unresolved_symbols_test-weak_unresolved_symbols_test.o: weak_unresolved_symbols_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(weak_unresolved_symbols_test_CXXFLAGS) $(CXXFLAGS) -MT weak_unresolved_symbols_test-weak_unresolved_symbols_test.o -MD -MP -MF $(DEPDIR)/weak_unresolved_symbols_test-weak_unresolved_symbols_test.Tpo -c -o weak_unresolved_symbols_test-weak_unresolved_symbols_test.o `test -f 'weak_unresolved_symbols_test.cc' || echo '$(srcdir)/'`weak_unresolved_symbols_test.cc
	$(am__mv) $(DEPDIR)/weak_unresolved_symbols_test-weak_unresolved_symbols_test.Tpo $(DEPDIR)/weak_unresolved_symbols_test-weak_unresolved_symbols_test.Po
#	source='weak_unresolved_symbols_test.cc' object='weak_unresolved_symbols_test-weak_unresolved_symbols_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(weak_unresolved_symbols_test_CXXFLAGS) $(CXXFLAGS) -c -o weak_unresolved_symbols_test-weak_unresolved_symbols_test.o `test -f 'weak_unresolved_symbols_test.cc' || echo '$(srcdir)/'`weak_unresolved_symbols_test.cc

weak_unresolved_symbols_test-weak_unresolved_symbols_test.obj: weak_unresolved_symbols_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(weak_unresolved_symbols_test_CXXFLAGS) $(CXXFLAGS) -MT weak_unresolved_symbols_test-weak_unresolved_symbols_test.obj -MD -MP -MF $(DEPDIR)/weak_unresolved_symbols_test-weak_unresolved_symbols_test.Tpo -c -o weak_unresolved_symbols_test-weak_unresolved_symbols_test.obj `if test -f 'weak_unresolved_symbols_test.cc'; then $(CYGPATH_W) 'weak_unresolved_symbols_test.cc'; else $(CYGPATH_W) '$(srcdir)/weak_unresolved_symbols_test.cc'; fi`
	$(am__mv) $(DEPDIR)/weak_unresolved_symbols_test-weak_unresolved_symbols_test.Tpo $(DEPDIR)/weak_unresolved_symbols_test-weak_unresolved_symbols_test.Po
#	source='weak_unresolved_symbols_test.cc' object='weak_unresolved_symbols_test-weak_unresolved_symbols_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(weak_unresolved_symbols_test_CXXFLAGS) $(CXXFLAGS) -c -o weak_unresolved_symbols_test-weak_unresolved_symbols_test.obj `if test -f 'weak_unresolved_symbols_test.cc'; then $(CYGPATH_W) 'weak_unresolved_symbols_test.cc'; else $(CYGPATH_W) '$(srcdir)/weak_unresolved_symbols_test.cc'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__sh_e_setup);						\
	list='$(TEST_LOGS)';						\
	results=`for f in $$list; do					\
		   test -r $$f && read line < $$f && echo "$$line"	\
		     || echo FAIL;					\
		 done`;							\
	all=`echo "$$results" | sed '/^$$/d' | wc -l | sed -e 's/^[	 ]*//'`; \
	fail=`echo "$$results" | grep -c '^FAIL'`;			\
	pass=`echo "$$results" | grep -c '^PASS'`;			\
	skip=`echo "$$results" | grep -c '^SKIP'`;			\
	xfail=`echo "$$results" | grep -c '^XFAIL'`;			\
	xpass=`echo "$$results" | grep -c '^XPASS'`;			\
	failures=`expr $$fail + $$xpass`;				\
	all=`expr $$all - $$skip`;					\
	if test "$$all" -eq 1; then tests=test; All=;			\
	else tests=tests; All="All "; fi;				\
	case fail=$$fail:xpass=$$xpass:xfail=$$xfail in			\
	  fail=0:xpass=0:xfail=0)					\
	    msg="$$All$$all $$tests passed.  ";				\
	    exit=true;;							\
	  fail=0:xpass=0:xfail=*)					\
	    msg="$$All$$all $$tests behaved as expected";		\
	    if test "$$xfail" -eq 1; then xfailures=failure;		\
	    else xfailures=failures; fi;				\
	    msg="$$msg ($$xfail expected $$xfailures).  ";		\
	    exit=true;;							\
	  fail=*:xpass=0:xfail=*)					\
	    msg="$$fail of $$all $$tests failed.  ";			\
	    exit=false;;						\
	  fail=*:xpass=*:xfail=*)					\
	    msg="$$failures of $$all $$tests did not behave as expected"; \
	    if test "$$xpass" -eq 1; then xpasses=pass;			\
	    else xpasses=passes; fi;					\
	    msg="$$msg ($$xpass unexpected $$xpasses).  ";		\
	    exit=false;;						\
	  *)								\
	    echo >&2 "incorrect case"; exit 4;;				\
	esac;								\
	if test "$$skip" -ne 0; then					\
	  if test "$$skip" -eq 1; then					\
	    msg="$$msg($$skip test was not run).  ";			\
	  else								\
	    msg="$$msg($$skip tests were not run).  ";			\
	  fi;								\
	fi;								\
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  echo "$$msg";							\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for f in $$list; do						\
	    test -r $$f && read line < $$f || line=;			\
	    case $$line in						\
	      PASS:*|XFAIL:*);;						\
	      *) echo; cat $$f;;					\
	    esac;							\
	  done;								\
	} >$(TEST_SUITE_LOG).tmp;					\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if test "$$failures" -ne 0; then				\
	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    msg="$${msg}Please report to $(PACKAGE_BUGREPORT).  ";	\
	  fi;								\
	fi;								\
	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
	$(am__tty_colors);						\
	if $$exit; then							\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	fi;								\
	echo "$$msg" | $(am__text_box) "col=$$col" "std=$$std";		\
	$$exit || exit 1

check-TESTS recheck:
	@if test $@ != recheck; then \
	   list='$(RECHECK_LOGS)'; test -z "$$list" || rm -f $$list; \
	 fi
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@list='' list2='$(TEST_LOGS)'; for f in $$list2; do \
	  test .log = $$f && continue; \
	  if test $@ = recheck; then \
	    test -f $$f || continue; \
	    if test -r $$f && read line < $$f; then \
	      case $$line in FAIL*|XPASS*) : ;; *) continue;; esac; \
	    fi; \
	  fi; \
	  if test -z "$$list"; then list=$$f; else list="$$list $$f"; fi; \
	done; \
	if test $@ = recheck && test -n "$$list"; then \
	  $(am__make_dryrun) || rm -f $$list || exit 1; \
	fi; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$list"
recheck: $(check_LIBRARIES) $(check_PROGRAMS) $(check_SCRIPTS) $(check_DATA)

am--mostlyclean-test-html:
	list='$(TEST_LOGS:.log=.html)'; test -z "$$list" || rm -f $$list
	rm -f $(TEST_SUITE_HTML)

.log.html:
	@list='$(RST2HTML) $$RST2HTML rst2html rst2html.py';		\
	for r2h in $$list; do						\
	  if ($$r2h --version) >/dev/null 2>&1; then			\
	    R2H=$$r2h;							\
	  fi;								\
	done;								\
	if test -z "$$R2H"; then					\
	  echo >&2 "cannot find rst2html, cannot create $@";		\
	  exit 2;							\
	fi;								\
	$$R2H $< >$@.tmp
	@mv $@.tmp $@

# Be sure to run check first, and then to convert the result.
# Beware of concurrent executions.  Run "check" not "check-TESTS", as
# check-SCRIPTS and other dependencies are rebuilt by the former only.
# And expect check to fail.
check-html recheck-html:
	@target=`echo $@ | sed 's/-html$$//'`; \
	rv=0; $(MAKE) $(AM_MAKEFLAGS) $$target || rv=$$?; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML) TEST_LOGS= || exit 4; \
	exit $$rv
empty_command_line_test.sh.log: empty_command_line_test.sh
	@p='empty_command_line_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_test.sh.log: incremental_test.sh
	@p='incremental_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gc_comdat_test.sh.log: gc_comdat_test.sh
	@p='gc_comdat_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gc_tls_test.sh.log: gc_tls_test.sh
	@p='gc_tls_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gc_orphan_section_test.sh.log: gc_orphan_section_test.sh
	@p='gc_orphan_section_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr14265.sh.log: pr14265.sh
	@p='pr14265.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20717.sh.log: pr20717.sh
	@p='pr20717.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gc_dynamic_list_test.sh.log: gc_dynamic_list_test.sh
	@p='gc_dynamic_list_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_test.sh.log: icf_test.sh
	@p='icf_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_keep_unique_test.sh.log: icf_keep_unique_test.sh
	@p='icf_keep_unique_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_safe_test.sh.log: icf_safe_test.sh
	@p='icf_safe_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_safe_pie_test.sh.log: icf_safe_pie_test.sh
	@p='icf_safe_pie_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_safe_so_test.sh.log: icf_safe_so_test.sh
	@p='icf_safe_so_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
final_layout.sh.log: final_layout.sh
	@p='final_layout.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
text_section_grouping.sh.log: text_section_grouping.sh
	@p='text_section_grouping.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
section_sorting_name.sh.log: section_sorting_name.sh
	@p='section_sorting_name.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
text_unlikely_segment.sh.log: text_unlikely_segment.sh
	@p='text_unlikely_segment.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_preemptible_functions_test.sh.log: icf_preemptible_functions_test.sh
	@p='icf_preemptible_functions_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_string_merge_test.sh.log: icf_string_merge_test.sh
	@p='icf_string_merge_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_sht_rel_addend_test.sh.log: icf_sht_rel_addend_test.sh
	@p='icf_sht_rel_addend_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
merge_string_literals.sh.log: merge_string_literals.sh
	@p='merge_string_literals.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
eh_test_2.sh.log: eh_test_2.sh
	@p='eh_test_2.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_shared.sh.log: two_file_shared.sh
	@p='two_file_shared.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
weak_plt.sh.log: weak_plt.sh
	@p='weak_plt.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
copy_test_protected.sh.log: copy_test_protected.sh
	@p='copy_test_protected.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_pie_test.sh.log: tls_pie_test.sh
	@p='tls_pie_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
x86_64_mov_to_lea.sh.log: x86_64_mov_to_lea.sh
	@p='x86_64_mov_to_lea.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
x86_64_indirect_call_to_direct.sh.log: x86_64_indirect_call_to_direct.sh
	@p='x86_64_indirect_call_to_direct.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
x86_64_overflow_pc32.sh.log: x86_64_overflow_pc32.sh
	@p='x86_64_overflow_pc32.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
x32_overflow_pc32.sh.log: x32_overflow_pc32.sh
	@p='x32_overflow_pc32.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
i386_mov_to_lea.sh.log: i386_mov_to_lea.sh
	@p='i386_mov_to_lea.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
file_in_many_sections_test.sh.log: file_in_many_sections_test.sh
	@p='file_in_many_sections_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
debug_msg.sh.log: debug_msg.sh
	@p='debug_msg.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
missing_key_func.sh.log: missing_key_func.sh
	@p='missing_key_func.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
undef_symbol.sh.log: undef_symbol.sh
	@p='undef_symbol.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr18689.sh.log: pr18689.sh
	@p='pr18689.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_1.sh.log: ver_test_1.sh
	@p='ver_test_1.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_2.sh.log: ver_test_2.sh
	@p='ver_test_2.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_4.sh.log: ver_test_4.sh
	@p='ver_test_4.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_5.sh.log: ver_test_5.sh
	@p='ver_test_5.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_7.sh.log: ver_test_7.sh
	@p='ver_test_7.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_8.sh.log: ver_test_8.sh
	@p='ver_test_8.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_10.sh.log: ver_test_10.sh
	@p='ver_test_10.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_13.sh.log: ver_test_13.sh
	@p='ver_test_13.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
relro_test.sh.log: relro_test.sh
	@p='relro_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_matching_test.sh.log: ver_matching_test.sh
	@p='ver_matching_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_3.sh.log: script_test_3.sh
	@p='script_test_3.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_4.sh.log: script_test_4.sh
	@p='script_test_4.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_5.sh.log: script_test_5.sh
	@p='script_test_5.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_6.sh.log: script_test_6.sh
	@p='script_test_6.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_7.sh.log: script_test_7.sh
	@p='script_test_7.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_8.sh.log: script_test_8.sh
	@p='script_test_8.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_9.sh.log: script_test_9.sh
	@p='script_test_9.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_13.sh.log: script_test_13.sh
	@p='script_test_13.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_14.sh.log: script_test_14.sh
	@p='script_test_14.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_15a.sh.log: script_test_15a.sh
	@p='script_test_15a.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_15b.sh.log: script_test_15b.sh
	@p='script_test_15b.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_15c.sh.log: script_test_15c.sh
	@p='script_test_15c.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
dynamic_list.sh.log: dynamic_list.sh
	@p='dynamic_list.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_1.sh.log: plugin_test_1.sh
	@p='plugin_test_1.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_2.sh.log: plugin_test_2.sh
	@p='plugin_test_2.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_3.sh.log: plugin_test_3.sh
	@p='plugin_test_3.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_4.sh.log: plugin_test_4.sh
	@p='plugin_test_4.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_6.sh.log: plugin_test_6.sh
	@p='plugin_test_6.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_7.sh.log: plugin_test_7.sh
	@p='plugin_test_7.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_10.sh.log: plugin_test_10.sh
	@p='plugin_test_10.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_11.sh.log: plugin_test_11.sh
	@p='plugin_test_11.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_12.sh.log: plugin_test_12.sh
	@p='plugin_test_12.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_start_lib.sh.log: plugin_test_start_lib.sh
	@p='plugin_test_start_lib.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_tls.sh.log: plugin_test_tls.sh
	@p='plugin_test_tls.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_final_layout.sh.log: plugin_final_layout.sh
	@p='plugin_final_layout.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_layout_with_alignment.sh.log: plugin_layout_with_alignment.sh
	@p='plugin_layout_with_alignment.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exclude_libs_test.sh.log: exclude_libs_test.sh
	@p='exclude_libs_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
discard_locals_test.sh.log: discard_locals_test.sh
	@p='discard_locals_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hidden_test.sh.log: hidden_test.sh
	@p='hidden_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
retain_symbols_file_test.sh.log: retain_symbols_file_test.sh
	@p='retain_symbols_file_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
no_version_test.sh.log: no_version_test.sh
	@p='no_version_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmod1.sh.log: ifuncmod1.sh
	@p='ifuncmod1.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
strong_ref_weak_def.sh.log: strong_ref_weak_def.sh
	@p='strong_ref_weak_def.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
dyn_weak_ref.sh.log: dyn_weak_ref.sh
	@p='dyn_weak_ref.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
memory_test.sh.log: memory_test.sh
	@p='memory_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gdb_index_test_1.sh.log: gdb_index_test_1.sh
	@p='gdb_index_test_1.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gdb_index_test_2.sh.log: gdb_index_test_2.sh
	@p='gdb_index_test_2.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gdb_index_test_2_gabi.sh.log: gdb_index_test_2_gabi.sh
	@p='gdb_index_test_2_gabi.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gdb_index_test_3.sh.log: gdb_index_test_3.sh
	@p='gdb_index_test_3.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gdb_index_test_4.sh.log: gdb_index_test_4.sh
	@p='gdb_index_test_4.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ehdr_start_test_4.sh.log: ehdr_start_test_4.sh
	@p='ehdr_start_test_4.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
defsym_test.sh.log: defsym_test.sh
	@p='defsym_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_10.sh.log: script_test_10.sh
	@p='script_test_10.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
split_i386.sh.log: split_i386.sh
	@p='split_i386.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
split_x86_64.sh.log: split_x86_64.sh
	@p='split_x86_64.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
bnd_plt_1.sh.log: bnd_plt_1.sh
	@p='bnd_plt_1.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
bnd_ifunc_1.sh.log: bnd_ifunc_1.sh
	@p='bnd_ifunc_1.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
bnd_ifunc_2.sh.log: bnd_ifunc_2.sh
	@p='bnd_ifunc_2.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
split_x32.sh.log: split_x32.sh
	@p='split_x32.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_abs_global.sh.log: arm_abs_global.sh
	@p='arm_abs_global.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_branch_in_range.sh.log: arm_branch_in_range.sh
	@p='arm_branch_in_range.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_branch_out_of_range.sh.log: arm_branch_out_of_range.sh
	@p='arm_branch_out_of_range.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_fix_v4bx.sh.log: arm_fix_v4bx.sh
	@p='arm_fix_v4bx.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_attr_merge.sh.log: arm_attr_merge.sh
	@p='arm_attr_merge.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_fix_1176.sh.log: arm_fix_1176.sh
	@p='arm_fix_1176.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_cortex_a8.sh.log: arm_cortex_a8.sh
	@p='arm_cortex_a8.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_exidx_test.sh.log: arm_exidx_test.sh
	@p='arm_exidx_test.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr12826.sh.log: pr12826.sh
	@p='pr12826.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_unaligned_reloc.sh.log: arm_unaligned_reloc.sh
	@p='arm_unaligned_reloc.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_farcall_arm_arm.sh.log: arm_farcall_arm_arm.sh
	@p='arm_farcall_arm_arm.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_farcall_arm_thumb.sh.log: arm_farcall_arm_thumb.sh
	@p='arm_farcall_arm_thumb.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_farcall_thumb_thumb.sh.log: arm_farcall_thumb_thumb.sh
	@p='arm_farcall_thumb_thumb.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_farcall_arm_arm_be8.sh.log: arm_farcall_arm_arm_be8.sh
	@p='arm_farcall_arm_arm_be8.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_farcall_thumb_thumb_be8.sh.log: arm_farcall_thumb_thumb_be8.sh
	@p='arm_farcall_thumb_thumb_be8.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_farcall_thumb_arm.sh.log: arm_farcall_thumb_arm.sh
	@p='arm_farcall_thumb_arm.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_target1_abs.sh.log: arm_target1_abs.sh
	@p='arm_target1_abs.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_target1_rel.sh.log: arm_target1_rel.sh
	@p='arm_target1_rel.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_target2_rel.sh.log: arm_target2_rel.sh
	@p='arm_target2_rel.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_target2_abs.sh.log: arm_target2_abs.sh
	@p='arm_target2_abs.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
arm_target2_got_rel.sh.log: arm_target2_got_rel.sh
	@p='arm_target2_got_rel.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
aarch64_reloc_none.sh.log: aarch64_reloc_none.sh
	@p='aarch64_reloc_none.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
aarch64_relocs.sh.log: aarch64_relocs.sh
	@p='aarch64_relocs.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr21430.sh.log: pr21430.sh
	@p='pr21430.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
aarch64_tlsdesc.sh.log: aarch64_tlsdesc.sh
	@p='aarch64_tlsdesc.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
split_s390.sh.log: split_s390.sh
	@p='split_s390.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
dwp_test_1.sh.log: dwp_test_1.sh
	@p='dwp_test_1.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
dwp_test_2.sh.log: dwp_test_2.sh
	@p='dwp_test_2.sh'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
object_unittest.log: object_unittest$(EXEEXT)
	@p='object_unittest$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
binary_unittest.log: binary_unittest$(EXEEXT)
	@p='binary_unittest$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
leb128_unittest.log: leb128_unittest$(EXEEXT)
	@p='leb128_unittest$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
overflow_unittest.log: overflow_unittest$(EXEEXT)
	@p='overflow_unittest$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
icf_virtual_function_folding_test.log: icf_virtual_function_folding_test$(EXEEXT)
	@p='icf_virtual_function_folding_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
large_symbol_alignment.log: large_symbol_alignment$(EXEEXT)
	@p='large_symbol_alignment$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
basic_test.log: basic_test$(EXEEXT)
	@p='basic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
basic_pic_test.log: basic_pic_test$(EXEEXT)
	@p='basic_pic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
eh_test.log: eh_test$(EXEEXT)
	@p='eh_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
basic_static_test.log: basic_static_test$(EXEEXT)
	@p='basic_static_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
basic_static_pic_test.log: basic_static_pic_test$(EXEEXT)
	@p='basic_static_pic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
basic_pie_test.log: basic_pie_test$(EXEEXT)
	@p='basic_pie_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
constructor_test.log: constructor_test$(EXEEXT)
	@p='constructor_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
constructor_static_test.log: constructor_static_test$(EXEEXT)
	@p='constructor_static_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_test.log: two_file_test$(EXEEXT)
	@p='two_file_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_pic_test.log: two_file_pic_test$(EXEEXT)
	@p='two_file_pic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_static_test.log: two_file_static_test$(EXEEXT)
	@p='two_file_static_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_shared_1_test.log: two_file_shared_1_test$(EXEEXT)
	@p='two_file_shared_1_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_shared_2_test.log: two_file_shared_2_test$(EXEEXT)
	@p='two_file_shared_2_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_shared_1_pic_2_test.log: two_file_shared_1_pic_2_test$(EXEEXT)
	@p='two_file_shared_1_pic_2_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_shared_2_pic_1_test.log: two_file_shared_2_pic_1_test$(EXEEXT)
	@p='two_file_shared_2_pic_1_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_same_shared_test.log: two_file_same_shared_test$(EXEEXT)
	@p='two_file_same_shared_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_separate_shared_12_test.log: two_file_separate_shared_12_test$(EXEEXT)
	@p='two_file_separate_shared_12_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_separate_shared_21_test.log: two_file_separate_shared_21_test$(EXEEXT)
	@p='two_file_separate_shared_21_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_relocatable_test.log: two_file_relocatable_test$(EXEEXT)
	@p='two_file_relocatable_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_pie_test.log: two_file_pie_test$(EXEEXT)
	@p='two_file_pie_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pie_copyrelocs_test.log: pie_copyrelocs_test$(EXEEXT)
	@p='pie_copyrelocs_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
weak_unresolved_symbols_test.log: weak_unresolved_symbols_test$(EXEEXT)
	@p='weak_unresolved_symbols_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_shared_1_nonpic_test.log: two_file_shared_1_nonpic_test$(EXEEXT)
	@p='two_file_shared_1_nonpic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_shared_2_nonpic_test.log: two_file_shared_2_nonpic_test$(EXEEXT)
	@p='two_file_shared_2_nonpic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_same_shared_nonpic_test.log: two_file_same_shared_nonpic_test$(EXEEXT)
	@p='two_file_same_shared_nonpic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_separate_shared_12_nonpic_test.log: two_file_separate_shared_12_nonpic_test$(EXEEXT)
	@p='two_file_separate_shared_12_nonpic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_separate_shared_21_nonpic_test.log: two_file_separate_shared_21_nonpic_test$(EXEEXT)
	@p='two_file_separate_shared_21_nonpic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_mixed_shared_test.log: two_file_mixed_shared_test$(EXEEXT)
	@p='two_file_mixed_shared_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_mixed_2_shared_test.log: two_file_mixed_2_shared_test$(EXEEXT)
	@p='two_file_mixed_2_shared_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_mixed_pie_test.log: two_file_mixed_pie_test$(EXEEXT)
	@p='two_file_mixed_pie_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_strip_test.log: two_file_strip_test$(EXEEXT)
	@p='two_file_strip_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
two_file_same_shared_strip_test.log: two_file_same_shared_strip_test$(EXEEXT)
	@p='two_file_same_shared_strip_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
common_test_1.log: common_test_1$(EXEEXT)
	@p='common_test_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
common_test_2.log: common_test_2$(EXEEXT)
	@p='common_test_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exception_test.log: exception_test$(EXEEXT)
	@p='exception_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exception_shared_1_test.log: exception_shared_1_test$(EXEEXT)
	@p='exception_shared_1_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exception_shared_2_test.log: exception_shared_2_test$(EXEEXT)
	@p='exception_shared_2_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exception_same_shared_test.log: exception_same_shared_test$(EXEEXT)
	@p='exception_same_shared_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exception_separate_shared_12_test.log: exception_separate_shared_12_test$(EXEEXT)
	@p='exception_separate_shared_12_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exception_separate_shared_21_test.log: exception_separate_shared_21_test$(EXEEXT)
	@p='exception_separate_shared_21_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exception_static_test.log: exception_static_test$(EXEEXT)
	@p='exception_static_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
weak_test.log: weak_test$(EXEEXT)
	@p='weak_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
weak_undef_test.log: weak_undef_test$(EXEEXT)
	@p='weak_undef_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
weak_undef_test_2.log: weak_undef_test_2$(EXEEXT)
	@p='weak_undef_test_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
weak_undef_nonpic_test.log: weak_undef_nonpic_test$(EXEEXT)
	@p='weak_undef_nonpic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
weak_alias_test.log: weak_alias_test$(EXEEXT)
	@p='weak_alias_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
weak_plt.log: weak_plt$(EXEEXT)
	@p='weak_plt$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
copy_test.log: copy_test$(EXEEXT)
	@p='copy_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
copy_test_relro.log: copy_test_relro$(EXEEXT)
	@p='copy_test_relro$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_test.log: tls_test$(EXEEXT)
	@p='tls_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_pic_test.log: tls_pic_test$(EXEEXT)
	@p='tls_pic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_pie_test.log: tls_pie_test$(EXEEXT)
	@p='tls_pie_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_pie_pic_test.log: tls_pie_pic_test$(EXEEXT)
	@p='tls_pie_pic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_shared_test.log: tls_shared_test$(EXEEXT)
	@p='tls_shared_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_shared_ie_test.log: tls_shared_ie_test$(EXEEXT)
	@p='tls_shared_ie_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_shared_gd_to_ie_test.log: tls_shared_gd_to_ie_test$(EXEEXT)
	@p='tls_shared_gd_to_ie_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_shared_gnu2_gd_to_ie_test.log: tls_shared_gnu2_gd_to_ie_test$(EXEEXT)
	@p='tls_shared_gnu2_gd_to_ie_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_shared_gnu2_test.log: tls_shared_gnu2_test$(EXEEXT)
	@p='tls_shared_gnu2_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_static_test.log: tls_static_test$(EXEEXT)
	@p='tls_static_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_static_pic_test.log: tls_static_pic_test$(EXEEXT)
	@p='tls_static_pic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_shared_nonpic_test.log: tls_shared_nonpic_test$(EXEEXT)
	@p='tls_shared_nonpic_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr17704a_test.log: pr17704a_test$(EXEEXT)
	@p='pr17704a_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20216a_test.log: pr20216a_test$(EXEEXT)
	@p='pr20216a_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20216b_test.log: pr20216b_test$(EXEEXT)
	@p='pr20216b_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20216c_test.log: pr20216c_test$(EXEEXT)
	@p='pr20216c_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20216d_test.log: pr20216d_test$(EXEEXT)
	@p='pr20216d_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20216e_test.log: pr20216e_test$(EXEEXT)
	@p='pr20216e_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20308a_test.log: pr20308a_test$(EXEEXT)
	@p='pr20308a_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20308b_test.log: pr20308b_test$(EXEEXT)
	@p='pr20308b_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20308c_test.log: pr20308c_test$(EXEEXT)
	@p='pr20308c_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20308d_test.log: pr20308d_test$(EXEEXT)
	@p='pr20308d_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20308e_test.log: pr20308e_test$(EXEEXT)
	@p='pr20308e_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
many_sections_test.log: many_sections_test$(EXEEXT)
	@p='many_sections_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
many_sections_r_test.log: many_sections_r_test$(EXEEXT)
	@p='many_sections_r_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
initpri1.log: initpri1$(EXEEXT)
	@p='initpri1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
initpri2.log: initpri2$(EXEEXT)
	@p='initpri2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
initpri3a.log: initpri3a$(EXEEXT)
	@p='initpri3a$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
flagstest_o_specialfile.log: flagstest_o_specialfile$(EXEEXT)
	@p='flagstest_o_specialfile$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
flagstest_compress_debug_sections_none.log: flagstest_compress_debug_sections_none$(EXEEXT)
	@p='flagstest_compress_debug_sections_none$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
flagstest_compress_debug_sections.log: flagstest_compress_debug_sections$(EXEEXT)
	@p='flagstest_compress_debug_sections$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
flagstest_compress_debug_sections_and_build_id_tree.log: flagstest_compress_debug_sections_and_build_id_tree$(EXEEXT)
	@p='flagstest_compress_debug_sections_and_build_id_tree$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
flagstest_compress_debug_sections_gnu.log: flagstest_compress_debug_sections_gnu$(EXEEXT)
	@p='flagstest_compress_debug_sections_gnu$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
flagstest_compress_debug_sections_gabi.log: flagstest_compress_debug_sections_gabi$(EXEEXT)
	@p='flagstest_compress_debug_sections_gabi$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
flagstest_o_specialfile_and_compress_debug_sections.log: flagstest_o_specialfile_and_compress_debug_sections$(EXEEXT)
	@p='flagstest_o_specialfile_and_compress_debug_sections$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
flagstest_o_ttext_1.log: flagstest_o_ttext_1$(EXEEXT)
	@p='flagstest_o_ttext_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test.log: ver_test$(EXEEXT)
	@p='ver_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_2.log: ver_test_2$(EXEEXT)
	@p='ver_test_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_6.log: ver_test_6$(EXEEXT)
	@p='ver_test_6$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_8.log: ver_test_8$(EXEEXT)
	@p='ver_test_8$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_9.log: ver_test_9$(EXEEXT)
	@p='ver_test_9$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_11.log: ver_test_11$(EXEEXT)
	@p='ver_test_11$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ver_test_12.log: ver_test_12$(EXEEXT)
	@p='ver_test_12$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
protected_1.log: protected_1$(EXEEXT)
	@p='protected_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
protected_2.log: protected_2$(EXEEXT)
	@p='protected_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
relro_test.log: relro_test$(EXEEXT)
	@p='relro_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
relro_now_test.log: relro_now_test$(EXEEXT)
	@p='relro_now_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
relro_strip_test.log: relro_strip_test$(EXEEXT)
	@p='relro_strip_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
relro_script_test.log: relro_script_test$(EXEEXT)
	@p='relro_script_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_1.log: script_test_1$(EXEEXT)
	@p='script_test_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_2.log: script_test_2$(EXEEXT)
	@p='script_test_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
justsyms.log: justsyms$(EXEEXT)
	@p='justsyms$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
justsyms_exec.log: justsyms_exec$(EXEEXT)
	@p='justsyms_exec$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
binary_test.log: binary_test$(EXEEXT)
	@p='binary_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_3.log: script_test_3$(EXEEXT)
	@p='script_test_3$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_phdrs_script_test.log: tls_phdrs_script_test$(EXEEXT)
	@p='tls_phdrs_script_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
tls_script_test.log: tls_script_test$(EXEEXT)
	@p='tls_script_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_11.log: script_test_11$(EXEEXT)
	@p='script_test_11$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_12.log: script_test_12$(EXEEXT)
	@p='script_test_12$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
script_test_12i.log: script_test_12i$(EXEEXT)
	@p='script_test_12i$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
dynamic_list_2.log: dynamic_list_2$(EXEEXT)
	@p='dynamic_list_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
thin_archive_test_1.log: thin_archive_test_1$(EXEEXT)
	@p='thin_archive_test_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
thin_archive_test_2.log: thin_archive_test_2$(EXEEXT)
	@p='thin_archive_test_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_1.log: plugin_test_1$(EXEEXT)
	@p='plugin_test_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_2.log: plugin_test_2$(EXEEXT)
	@p='plugin_test_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_3.log: plugin_test_3$(EXEEXT)
	@p='plugin_test_3$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_4.log: plugin_test_4$(EXEEXT)
	@p='plugin_test_4$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_5.log: plugin_test_5$(EXEEXT)
	@p='plugin_test_5$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_6.log: plugin_test_6$(EXEEXT)
	@p='plugin_test_6$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_7.log: plugin_test_7$(EXEEXT)
	@p='plugin_test_7$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_8.log: plugin_test_8$(EXEEXT)
	@p='plugin_test_8$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_10.log: plugin_test_10$(EXEEXT)
	@p='plugin_test_10$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_11.log: plugin_test_11$(EXEEXT)
	@p='plugin_test_11$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_12.log: plugin_test_12$(EXEEXT)
	@p='plugin_test_12$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_start_lib.log: plugin_test_start_lib$(EXEEXT)
	@p='plugin_test_start_lib$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
plugin_test_tls.log: plugin_test_tls$(EXEEXT)
	@p='plugin_test_tls$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exclude_libs_test.log: exclude_libs_test$(EXEEXT)
	@p='exclude_libs_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
local_labels_test.log: local_labels_test$(EXEEXT)
	@p='local_labels_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
discard_locals_test.log: discard_locals_test$(EXEEXT)
	@p='discard_locals_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
large.log: large$(EXEEXT)
	@p='large$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
permission_test.log: permission_test$(EXEEXT)
	@p='permission_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
searched_file_test.log: searched_file_test$(EXEEXT)
	@p='searched_file_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1static.log: ifuncmain1static$(EXEEXT)
	@p='ifuncmain1static$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1picstatic.log: ifuncmain1picstatic$(EXEEXT)
	@p='ifuncmain1picstatic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1.log: ifuncmain1$(EXEEXT)
	@p='ifuncmain1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1pic.log: ifuncmain1pic$(EXEEXT)
	@p='ifuncmain1pic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1vis.log: ifuncmain1vis$(EXEEXT)
	@p='ifuncmain1vis$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1vispic.log: ifuncmain1vispic$(EXEEXT)
	@p='ifuncmain1vispic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1staticpic.log: ifuncmain1staticpic$(EXEEXT)
	@p='ifuncmain1staticpic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1pie.log: ifuncmain1pie$(EXEEXT)
	@p='ifuncmain1pie$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1vispie.log: ifuncmain1vispie$(EXEEXT)
	@p='ifuncmain1vispie$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain1staticpie.log: ifuncmain1staticpie$(EXEEXT)
	@p='ifuncmain1staticpie$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain2static.log: ifuncmain2static$(EXEEXT)
	@p='ifuncmain2static$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain2picstatic.log: ifuncmain2picstatic$(EXEEXT)
	@p='ifuncmain2picstatic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain2.log: ifuncmain2$(EXEEXT)
	@p='ifuncmain2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain2pic.log: ifuncmain2pic$(EXEEXT)
	@p='ifuncmain2pic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain3.log: ifuncmain3$(EXEEXT)
	@p='ifuncmain3$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain4static.log: ifuncmain4static$(EXEEXT)
	@p='ifuncmain4static$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain4picstatic.log: ifuncmain4picstatic$(EXEEXT)
	@p='ifuncmain4picstatic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain4.log: ifuncmain4$(EXEEXT)
	@p='ifuncmain4$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain5static.log: ifuncmain5static$(EXEEXT)
	@p='ifuncmain5static$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain5picstatic.log: ifuncmain5picstatic$(EXEEXT)
	@p='ifuncmain5picstatic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain5.log: ifuncmain5$(EXEEXT)
	@p='ifuncmain5$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain5pic.log: ifuncmain5pic$(EXEEXT)
	@p='ifuncmain5pic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain5staticpic.log: ifuncmain5staticpic$(EXEEXT)
	@p='ifuncmain5staticpic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain5pie.log: ifuncmain5pie$(EXEEXT)
	@p='ifuncmain5pie$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain6pie.log: ifuncmain6pie$(EXEEXT)
	@p='ifuncmain6pie$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain7static.log: ifuncmain7static$(EXEEXT)
	@p='ifuncmain7static$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain7picstatic.log: ifuncmain7picstatic$(EXEEXT)
	@p='ifuncmain7picstatic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain7.log: ifuncmain7$(EXEEXT)
	@p='ifuncmain7$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain7pic.log: ifuncmain7pic$(EXEEXT)
	@p='ifuncmain7pic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncmain7pie.log: ifuncmain7pie$(EXEEXT)
	@p='ifuncmain7pie$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ifuncvar.log: ifuncvar$(EXEEXT)
	@p='ifuncvar$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
start_lib_test.log: start_lib_test$(EXEEXT)
	@p='start_lib_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ehdr_start_test_1.log: ehdr_start_test_1$(EXEEXT)
	@p='ehdr_start_test_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ehdr_start_test_2.log: ehdr_start_test_2$(EXEEXT)
	@p='ehdr_start_test_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ehdr_start_test_3.log: ehdr_start_test_3$(EXEEXT)
	@p='ehdr_start_test_3$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
ehdr_start_test_5.log: ehdr_start_test_5$(EXEEXT)
	@p='ehdr_start_test_5$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr20976.log: pr20976$(EXEEXT)
	@p='pr20976$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_test_2.log: incremental_test_2$(EXEEXT)
	@p='incremental_test_2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_test_3.log: incremental_test_3$(EXEEXT)
	@p='incremental_test_3$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_test_4.log: incremental_test_4$(EXEEXT)
	@p='incremental_test_4$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_test_5.log: incremental_test_5$(EXEEXT)
	@p='incremental_test_5$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_test_6.log: incremental_test_6$(EXEEXT)
	@p='incremental_test_6$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_copy_test.log: incremental_copy_test$(EXEEXT)
	@p='incremental_copy_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_common_test_1.log: incremental_common_test_1$(EXEEXT)
	@p='incremental_common_test_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
incremental_comdat_test_1.log: incremental_comdat_test_1$(EXEEXT)
	@p='incremental_comdat_test_1$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
exception_x86_64_bnd_test.log: exception_x86_64_bnd_test$(EXEEXT)
	@p='exception_x86_64_bnd_test$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
pr22266.log: pr22266$(EXEEXT)
	@p='pr22266$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
.test.log:
	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
#.test$(EXEEXT).log:
#	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LIBRARIES) $(check_PROGRAMS) \
	  $(check_SCRIPTS) $(check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS_TMP)" || rm -f $(TEST_LOGS_TMP)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: am--mostlyclean-test-html mostlyclean-compile \
	mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check check-am check-html install install-am install-strip \
	recheck-html

.PHONY: CTAGS GTAGS all all-am am--mostlyclean-test-html check \
	check-TESTS check-am check-html clean clean-checkLIBRARIES \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags dvi dvi-am \
	html html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck recheck-html \
	tags uninstall uninstall-am


# Export make variables to the shell scripts so that they can see
# (for example) DEFAULT_TARGET.
.EXPORT_ALL_VARIABLES:

# The unittests themselves

# Infrastucture needed for the unittests: a directory where the linker
# is named 'ld'.  This is because the -B flag appends 'ld' to its arg.
gcctestdir/ld: ../ld-new
	test -d gcctestdir || mkdir -p gcctestdir
	rm -f gcctestdir/ld
	(cd gcctestdir && $(LN_S) ../../ld-new ld)

# Some tests require the latest features of an in-tree assembler.
gcctestdir/as: $(TEST_AS)
	test -d gcctestdir || mkdir -p gcctestdir
	rm -f gcctestdir/as
	(cd gcctestdir && $(LN_S) $(abs_top_builddir)/../gas/as-new as)
overflow_unittest.o: overflow_unittest.cc
	$(CXXCOMPILE) -O3 -c -o $@ $<
empty_command_line_test.sh: gcctestdir/ld

# Each of these .o's is a useful, small complete program.  They're
# particularly useful for making sure ld-new's flags do what they're
# supposed to (hence their names), but are used for many tests that
# don't actually involve analyzing input data.
flagstest_debug.o: constructor_test.cc
	$(CXXCOMPILE) -O0 -g -c -o $@ $<
flagstest_ndebug.o: constructor_test.cc
	$(CXXCOMPILE) -O0 -c -o $@ $<
incremental_test_1.o: incremental_test_1.c
	$(COMPILE) -O0 -c -ffunction-sections -g -o $@ $<
incremental_test_2.o: incremental_test_2.c
	$(COMPILE) -O0 -c -ffunction-sections -g -o $@ $<
incremental_test: incremental_test_1.o incremental_test_2.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -Wl,--incremental-full -Wl,-z,norelro,-no-pie incremental_test_1.o incremental_test_2.o -Wl,-debug 2> incremental_test.cmdline
incremental_test.stdout: incremental_test ../incremental-dump
	../incremental-dump incremental_test > $@
gc_comdat_test_1.o: gc_comdat_test_1.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -g -o $@ $<
gc_comdat_test_2.o: gc_comdat_test_2.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -g -o $@ $<
gc_comdat_test: gc_comdat_test_1.o gc_comdat_test_2.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--gc-sections gc_comdat_test_1.o gc_comdat_test_2.o
gc_comdat_test.stdout: gc_comdat_test
	$(TEST_NM) -C gc_comdat_test > gc_comdat_test.stdout
gc_tls_test.o: gc_tls_test.cc
	$(CXXCOMPILE) -O0 -c -g -o $@ $<
gc_tls_test:gc_tls_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--gc-sections gc_tls_test.o
gc_tls_test.stdout: gc_tls_test
	$(TEST_NM) -C gc_tls_test > gc_tls_test.stdout
gc_orphan_section_test.o: gc_orphan_section_test.cc
	$(CXXCOMPILE) -O0 -c -g -o $@ $<
gc_orphan_section_test:gc_orphan_section_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--gc-sections gc_orphan_section_test.o
gc_orphan_section_test.stdout: gc_orphan_section_test
	$(TEST_NM) gc_orphan_section_test > gc_orphan_section_test.stdout
pr14265.o: pr14265.c
	$(COMPILE) -O0 -c -o $@ $<
pr14265: pr14265.o gcctestdir/ld $(srcdir)/pr14265.t
	$(LINK) -Bgcctestdir/ -Wl,--gc-sections -Wl,-T,$(srcdir)/pr14265.t -o $@ $<
pr14265.stdout: pr14265
	$(TEST_NM) --format=bsd --numeric-sort $< > $@
pr20717.o: pr20717.c
	$(COMPILE) -O0 -ffunction-sections -c -o $@ $<
pr20717: pr20717.o gcctestdir/ld $(srcdir)/pr20717.t
	$(LINK) -Bgcctestdir/ -Wl,--gc-sections -Wl,-T,$(srcdir)/pr20717.t -o $@ $<
pr20717.stdout: pr20717
	$(TEST_NM) $< > $@
gc_dynamic_list_test.o: gc_dynamic_list_test.c
	$(COMPILE) -c -ffunction-sections -o $@ $<
gc_dynamic_list_test: gc_dynamic_list_test.o gcctestdir/ld $(srcdir)/gc_dynamic_list_test.t
	$(LINK) -Bgcctestdir/ -Wl,--gc-sections -Wl,--dynamic-list,$(srcdir)/gc_dynamic_list_test.t gc_dynamic_list_test.o
gc_dynamic_list_test.stdout: gc_dynamic_list_test
	$(TEST_NM) gc_dynamic_list_test > $@
icf_test.o: icf_test.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -g -o $@ $<
icf_test: icf_test.o gcctestdir/ld
	$(CXXLINK) -o icf_test -Bgcctestdir/ -Wl,--icf=all,-Map,icf_test.map icf_test.o
icf_test.map: icf_test
	@touch icf_test.map
icf_keep_unique_test.o: icf_keep_unique_test.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -g -o $@ $<
icf_keep_unique_test: icf_keep_unique_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--icf=all -Wl,--keep-unique,_Z11unique_funcv icf_keep_unique_test.o
icf_keep_unique_test.stdout: icf_keep_unique_test
	$(TEST_NM) -C $< > $@
icf_safe_test.o: icf_safe_test.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -g -o $@ $<
icf_safe_test: icf_safe_test.o gcctestdir/ld
	$(CXXLINK) -o icf_safe_test -Bgcctestdir/ -Wl,--icf=safe,-Map,icf_safe_test.map icf_safe_test.o
icf_safe_test.map: icf_safe_test
	@touch icf_safe_test.map
icf_safe_test_1.stdout: icf_safe_test
	$(TEST_NM) $< > $@
icf_safe_test_2.stdout: icf_safe_test
	$(TEST_READELF) -h $< > $@
icf_safe_pie_test.o: icf_safe_test.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -fPIE -g -o $@ $<
icf_safe_pie_test: icf_safe_pie_test.o gcctestdir/ld
	$(CXXLINK) -o icf_safe_pie_test -Bgcctestdir/ -Wl,--icf=safe,-Map,icf_safe_pie_test.map icf_safe_pie_test.o -pie
icf_safe_pie_test.map: icf_safe_pie_test
	@touch icf_safe_pie_test.map
icf_safe_pie_test_1.stdout: icf_safe_pie_test
	$(TEST_NM) $< > $@
icf_safe_pie_test_2.stdout: icf_safe_pie_test
	$(TEST_READELF) -h $< > $@
icf_safe_so_test.o: icf_safe_so_test.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -fPIC -g -o $@ $<
icf_safe_so_test: icf_safe_so_test.o gcctestdir/ld
	$(CXXLINK) -o icf_safe_so_test -Bgcctestdir/ -Wl,--icf=safe,-Map,icf_safe_so_test.map icf_safe_so_test.o -fPIC -shared
icf_safe_so_test.map:
	@touch icf_safe_so_test.map
icf_safe_so_test_1.stdout: icf_safe_so_test
	$(TEST_NM) $< > $@
icf_safe_so_test_2.stdout: icf_safe_so_test
	$(TEST_READELF) -h $< > $@
final_layout.o: final_layout.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections  -fdata-sections -g -o $@ $<
final_layout_sequence.txt:
	(echo "*_Z3barv*" && echo ".text._Z3bazv" && echo "*_Z3foov*" && echo "*global_varb*" && echo "*global_vara*" && echo "*global_varc*") > final_layout_sequence.txt
final_layout_script.lds:
	(echo "SECTIONS { .text : { *(.text*) } .got : { *(.got .toc) } .sbss : { *(.sbss*) } .bss : { *(.bss*) } }") > final_layout_script.lds
final_layout: final_layout.o final_layout_sequence.txt final_layout_script.lds gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--section-ordering-file,final_layout_sequence.txt -Wl,-T,final_layout_script.lds final_layout.o
final_layout.stdout: final_layout
	$(TEST_NM) -n --synthetic final_layout > final_layout.stdout
text_section_grouping.o: text_section_grouping.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -g -o $@ $<
text_section_grouping: text_section_grouping.o gcctestdir/ld
	$(CXXLINK)  -Bgcctestdir/ text_section_grouping.o
text_section_no_grouping: text_section_grouping.o gcctestdir/ld
	$(CXXLINK)  -Bgcctestdir/ -Wl,--no-text-reorder text_section_grouping.o
text_section_grouping.stdout: text_section_grouping
	$(TEST_NM) -n --synthetic text_section_grouping > text_section_grouping.stdout
text_section_no_grouping.stdout: text_section_no_grouping
	$(TEST_NM) -n --synthetic text_section_no_grouping > text_section_no_grouping.stdout
section_sorting_name.o: section_sorting_name.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -g -o $@ $<
section_sorting_name: section_sorting_name.o gcctestdir/ld
	$(CXXLINK)  -Bgcctestdir/ -Wl,--sort-section=name section_sorting_name.o
section_sorting_name.stdout: section_sorting_name
	$(TEST_NM) -n --synthetic section_sorting_name > section_sorting_name.stdout
text_unlikely_segment.o: text_unlikely_segment.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -g -o $@ $<
text_unlikely_segment: text_unlikely_segment.o gcctestdir/ld
	$(CXXLINK)  -Bgcctestdir/ -Wl,-z,text-unlikely-segment text_unlikely_segment.o
text_unlikely_segment_readelf.stdout: text_unlikely_segment
	$(TEST_READELF) -Wl $< >$@
icf_virtual_function_folding_test.o: icf_virtual_function_folding_test.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -fPIE -g -o $@ $<
icf_virtual_function_folding_test: icf_virtual_function_folding_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--icf=all icf_virtual_function_folding_test.o -pie
icf_preemptible_functions_test.o: icf_preemptible_functions_test.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -fPIC -g -o $@ $<
icf_preemptible_functions_test: icf_preemptible_functions_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--icf=all icf_preemptible_functions_test.o -fPIC -shared
icf_preemptible_functions_test.stdout: icf_preemptible_functions_test
	$(TEST_NM) icf_preemptible_functions_test > icf_preemptible_functions_test.stdout
icf_string_merge_test.o: icf_string_merge_test.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -fPIC -g -o $@ $<
icf_string_merge_test: icf_string_merge_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--icf=all icf_string_merge_test.o
icf_string_merge_test.stdout: icf_string_merge_test
	$(TEST_NM) icf_string_merge_test > icf_string_merge_test.stdout
icf_sht_rel_addend_test_1.o: icf_sht_rel_addend_test_1.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -fPIC -g -o $@ $<
icf_sht_rel_addend_test_2.o: icf_sht_rel_addend_test_2.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections -fPIC -g -o $@ $<
icf_sht_rel_addend_test: icf_sht_rel_addend_test_1.o icf_sht_rel_addend_test_2.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--icf=all icf_sht_rel_addend_test_1.o icf_sht_rel_addend_test_2.o
icf_sht_rel_addend_test.stdout: icf_sht_rel_addend_test
	$(TEST_NM) icf_sht_rel_addend_test > icf_sht_rel_addend_test.stdout
merge_string_literals_1.o: merge_string_literals_1.cc
	$(CXXCOMPILE) -O2 -c -fPIC -g -o $@ $<
merge_string_literals_2.o: merge_string_literals_2.cc
	$(CXXCOMPILE) -O2 -c -fPIC -g -o $@ $<
merge_string_literals: merge_string_literals_1.o merge_string_literals_2.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ merge_string_literals_1.o merge_string_literals_2.o -O2 -shared -nostdlib
merge_string_literals.stdout: merge_string_literals
	$(TEST_OBJDUMP) -s -j.rodata merge_string_literals > merge_string_literals.stdout
basic_test.o: basic_test.cc
	$(CXXCOMPILE) -O0 -c -o $@ $<
basic_test: basic_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ basic_test.o
eh_test_a.o: eh_test_a.cc
	$(CXXCOMPILE) -O0 -c -o $@ $<
eh_test_b.o: eh_test_b.cc
	$(CXXCOMPILE) -O0 -c -o $@ $<
eh_test: eh_test_a.o eh_test_b.o  gcctestdir/ld
	$(CXXLINK_S) -Bgcctestdir/ eh_test_a.o eh_test_b.o
eh_test_r.o: eh_test_a.o eh_test_b.o gcctestdir/ld
	gcctestdir/ld -r -o $@ eh_test_a.o eh_test_b.o
eh_test_2: eh_test_r.o gcctestdir/ld
	$(CXXLINK_S) -Bgcctestdir/ -Wl,--eh-frame-hdr eh_test_r.o
eh_test_2.sects: eh_test_2
	$(TEST_READELF) -SW $< >$@ 2>/dev/null
basic_static_test: basic_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -static basic_test.o

basic_pic_test.o: basic_test.cc
	$(CXXCOMPILE) -O0 -c -fpic -o $@ $<
basic_pic_test: basic_pic_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ basic_pic_test.o
basic_static_pic_test: basic_pic_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -static basic_pic_test.o
basic_pie_test.o: basic_test.cc
	$(CXXCOMPILE) -O0 -c -fpie -o $@ $<
basic_pie_test: basic_pie_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -pie basic_pie_test.o
two_file_test_1_pic.o: two_file_test_1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
two_file_test_1b_pic.o: two_file_test_1b.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
two_file_test_2_pic.o: two_file_test_2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
two_file_shared_1.so: two_file_test_1_pic.o two_file_test_1b_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_1_pic.o two_file_test_1b_pic.o
two_file_shared_2.so: two_file_test_2_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_2_pic.o
two_file_shared.so: two_file_test_1_pic.o two_file_test_1b_pic.o two_file_test_2_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_1_pic.o two_file_test_1b_pic.o two_file_test_2_pic.o
two_file_relocatable.o: gcctestdir/ld two_file_test_1.o two_file_test_1b.o two_file_test_2.o
	gcctestdir/ld -r -o $@ two_file_test_1.o two_file_test_1b.o two_file_test_2.o
two_file_test_1_pie.o: two_file_test_1.cc
	$(CXXCOMPILE) -c -fpie -o $@ $<
two_file_test_1b_pie.o: two_file_test_1b.cc
	$(CXXCOMPILE) -c -fpie -o $@ $<
two_file_test_2_pie.o: two_file_test_2.cc
	$(CXXCOMPILE) -c -fpie -o $@ $<
two_file_test_main_pie.o: two_file_test_main.cc
	$(CXXCOMPILE) -c -fpie -o $@ $<
two_file_pie_test: two_file_test_1_pie.o two_file_test_1b_pie.o \
		two_file_test_2_pie.o two_file_test_main_pie.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -pie two_file_test_1_pie.o two_file_test_1b_pie.o two_file_test_2_pie.o two_file_test_main_pie.o
pie_copyrelocs_shared_test.o: pie_copyrelocs_shared_test.cc
	$(CXXCOMPILE) -O2 -fpic -c -o $@ $<
pie_copyrelocs_shared_test.so: pie_copyrelocs_shared_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared pie_copyrelocs_shared_test.o
two_file_shared.dbg: two_file_shared.so
	$(TEST_READELF) -w $< >$@ 2>/dev/null
two_file_shared_1_nonpic.so: two_file_test_1.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_1.o two_file_test_1b.o -Wl,-z,notext
two_file_shared_2_nonpic.so: two_file_test_2.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_2.o
two_file_shared_nonpic.so: two_file_test_1.o two_file_test_1b.o two_file_test_2.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_1.o two_file_test_1b.o two_file_test_2.o -Wl,-z,notext
two_file_shared_mixed.so: two_file_test_1_pic.o two_file_test_1b_pic.o two_file_test_2.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_1_pic.o two_file_test_1b_pic.o two_file_test_2.o -Wl,-z,notext
two_file_shared_mixed_1.so: two_file_test_1.o two_file_test_1b_pic.o two_file_shared_2.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_1.o two_file_test_1b_pic.o two_file_shared_2.so -Wl,-z,notext
two_file_mixed_pie_test: two_file_test_1.o two_file_test_1b_pie.o \
		two_file_test_main_pie.o two_file_shared_2.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,-R,. -pie two_file_test_1.o two_file_test_1b_pie.o two_file_test_main_pie.o two_file_shared_2.so
two_file_strip_test: two_file_test
	$(TEST_STRIP) -o two_file_strip_test two_file_test
two_file_shared_strip.so: two_file_shared.so
	$(TEST_STRIP) -S -o two_file_shared_strip.so two_file_shared.so
common_test_2_pic.o: common_test_2.c
	$(COMPILE) -c -fpic -o $@ $<
common_test_2.so: common_test_2_pic.o common_test_3.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared common_test_2_pic.o common_test_3.so
common_test_3_pic.o: common_test_3.c
	$(COMPILE) -c -fpic -o $@ $<
common_test_3.so: common_test_3_pic.o ver_test_2.script gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared common_test_3_pic.o -Wl,--version-script,$(srcdir)/ver_test_2.script
exception_test_1_pic.o: exception_test_1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
exception_test_2_pic.o: exception_test_2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
exception_shared_1.so: exception_test_1_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared exception_test_1_pic.o
exception_shared_2.so: exception_test_2_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared exception_test_2_pic.o
exception_shared.so: exception_test_1_pic.o exception_test_2_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared exception_test_1_pic.o exception_test_2_pic.o
weak_undef_file1.o: weak_undef_file1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
weak_undef_file2.o: weak_undef_file2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
weak_undef_lib.so: weak_undef_file1.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared weak_undef_file1.o
alt/weak_undef_lib.so: weak_undef_file2.o gcctestdir/ld
	test -d alt || mkdir -p alt
	$(CXXLINK) -Bgcctestdir/ -shared weak_undef_file2.o
libweak_undef_2.a: weak_undef_file3.o weak_undef_file4.o
	$(TEST_AR) rc $@ $^
weak_undef_file3.o: weak_undef_file3.cc
	$(CXXCOMPILE) -c -o $@ $<
weak_undef_file4.o: weak_undef_file4.cc
	$(CXXCOMPILE) -c -o $@ $<
weak_undef_file1_nonpic.o: weak_undef_file1.cc
	$(CXXCOMPILE) -c -o $@ $<
weak_undef_file2_nonpic.o: weak_undef_file2.cc
	$(CXXCOMPILE) -c -o $@ $<
weak_undef_lib_nonpic.so: weak_undef_file1_nonpic.o
	$(CXXLINK) -Bgcctestdir/ -shared weak_undef_file1_nonpic.o -Wl,-z,notext
alt/weak_undef_lib_nonpic.so: weak_undef_file2_nonpic.o
	test -d alt || mkdir -p alt
	$(CXXLINK) -Bgcctestdir/ -shared weak_undef_file2_nonpic.o -Wl,-z,notext
weak_alias_test_1_pic.o: weak_alias_test_1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
weak_alias_test_1.so: weak_alias_test_1_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared weak_alias_test_1_pic.o
weak_alias_test_2_pic.o: weak_alias_test_2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
weak_alias_test_2.so: weak_alias_test_2_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared weak_alias_test_2_pic.o
weak_alias_test_3.o: weak_alias_test_3.cc
	$(CXXCOMPILE) -c -o $@ $<
weak_alias_test_4_pic.o: weak_alias_test_4.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
weak_alias_test_4.so: weak_alias_test_4_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared weak_alias_test_4_pic.o
weak_alias_test_5_pic.o: weak_alias_test_5.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
weak_alias_test_5.so: weak_alias_test_5_pic.o $(srcdir)/weak_alias_test.script gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared weak_alias_test_5_pic.o \
		-Wl,--version-script,$(srcdir)/weak_alias_test.script
weak_plt_main_pic.o: weak_plt_main.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
weak_plt: weak_plt_main_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ weak_plt_main_pic.o
weak_plt_shared_pic.o: weak_plt_shared.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
weak_plt_shared.so: weak_plt_shared_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared weak_plt_shared_pic.o
copy_test_1_pic.o: copy_test_1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
copy_test_1.so: gcctestdir/ld copy_test_1_pic.o
	$(CXXLINK) -Bgcctestdir/ -shared copy_test_1_pic.o
copy_test_2_pic.o: copy_test_2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
copy_test_2.so: gcctestdir/ld copy_test_2_pic.o
	$(CXXLINK) -Bgcctestdir/ -shared copy_test_2_pic.o
copy_test_relro_1_pic.o: copy_test_relro_1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
copy_test_relro_1.so: gcctestdir/ld copy_test_relro_1_pic.o
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,-z,relro copy_test_relro_1_pic.o
copy_test_protected.err: copy_test_protected.o copy_test_2.so gcctestdir/ld
	@echo $(CXXLINK) -Bgcctestdir/ -o copy_test_protected copy_test_protected.o copy_test_2.so -Wl,-R,. "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -o copy_test_protected copy_test_protected.o copy_test_2.so -Wl,-R,. 2>$@; \
	then \
	  echo 1>&2 "Link of copy_test_protected should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
tls_test_pic.o: tls_test.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
tls_test_file2_pic.o: tls_test_file2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
tls_test_c_pic.o: tls_test_c.c
	$(COMPILE) -c -fpic $(TLS_TEST_C_CFLAGS) -o $@ $<
tls_test_shared.so: tls_test_pic.o tls_test_file2_pic.o tls_test_c_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared tls_test_pic.o tls_test_file2_pic.o tls_test_c_pic.o -Wl,-z,defs
tls_test_shared2.so: tls_test_file2_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared tls_test_file2_pic.o

tls_test_pic_ie.o: tls_test.cc
	$(CXXCOMPILE) -c -fpic -ftls-model=initial-exec -o $@ $<
tls_test_file2_pic_ie.o: tls_test_file2.cc
	$(CXXCOMPILE) -c -fpic -ftls-model=initial-exec -o $@ $<
tls_test_c_pic_ie.o: tls_test_c.c
	$(COMPILE) -c -fpic -ftls-model=initial-exec $(TLS_TEST_C_CFLAGS) -o $@ $<
tls_test_ie_shared.so: tls_test_pic_ie.o tls_test_file2_pic_ie.o tls_test_c_pic_ie.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared tls_test_pic_ie.o tls_test_file2_pic_ie.o tls_test_c_pic_ie.o
tls_test_c.o: tls_test_c.c
	$(COMPILE) -c $(TLS_TEST_C_CFLAGS) -o $@ $<

tls_test_main_pie.o: tls_test_main.cc tls_test.h
	$(CXXCOMPILE) -c -fpie -o $@ $<
tls_test_pie.o: tls_test.cc tls_test.h
	$(CXXCOMPILE) -c -fpie -o $@ $<
tls_test_file2_pie.o: tls_test_file2.cc tls_test.h
	$(CXXCOMPILE) -c -fpie -o $@ $<
tls_test_c_pie.o: tls_test_c.c
	$(COMPILE) -c -fpic $(TLS_TEST_C_CFLAGS) -o $@ $<
tls_pie_test: tls_test_main_pie.o tls_test_pie.o tls_test_file2_pie.o \
		tls_test_c_pie.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -pie tls_test_main_pie.o tls_test_pie.o tls_test_file2_pie.o tls_test_c_pie.o -lpthread
tls_pie_test.stdout: tls_pie_test
	$(TEST_READELF) -rW $< > $@ 2>/dev/null

tls_pie_pic_test: tls_test_main_pie.o tls_test_pic.o tls_test_file2_pic.o \
		tls_test_c_pic.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -pie tls_test_main_pie.o tls_test_pic.o tls_test_file2_pic.o tls_test_c_pic.o -lpthread

tls_test_gnu2.o: tls_test.cc
	$(CXXCOMPILE) -c -fpic -mtls-dialect=gnu2 -o $@ $<
tls_test_file2_gnu2.o: tls_test_file2.cc
	$(CXXCOMPILE) -c -fpic -mtls-dialect=gnu2 -o $@ $<
tls_test_c_gnu2.o: tls_test_c.c
	$(COMPILE) -c -fpic -mtls-dialect=gnu2 $(TLS_TEST_C_CFLAGS) -o $@ $<
tls_test_gnu2_shared2.so: tls_test_file2_gnu2.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared tls_test_file2_gnu2.o

tls_test_gnu2_shared.so: tls_test_gnu2.o tls_test_file2_gnu2.o tls_test_c_gnu2.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared tls_test_gnu2.o tls_test_file2_gnu2.o tls_test_c_gnu2.o
tls_test_shared_nonpic.so: tls_test.o tls_test_file2.o tls_test_c.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared tls_test.o tls_test_file2.o tls_test_c.o -Wl,-z,notext

#x86_64_mov_to_lea1.o: x86_64_mov_to_lea1.s
#	$(TEST_AS) --64 -o $@ $<
#x86_64_mov_to_lea2.o: x86_64_mov_to_lea1.s
#	$(TEST_AS) --x32 -o $@ $<
#x86_64_mov_to_lea3.o: x86_64_mov_to_lea2.s
#	$(TEST_AS) --x32 -o $@ $<
#x86_64_mov_to_lea4.o: x86_64_mov_to_lea2.s
#	$(TEST_AS) --64 -o $@ $<
#x86_64_mov_to_lea5.o: x86_64_mov_to_lea3.s
#	$(TEST_AS) --x32 -mrelax-relocations=yes -o $@ $<
#x86_64_mov_to_lea6.o: x86_64_mov_to_lea3.s
#	$(TEST_AS) --64 -mrelax-relocations=yes -o $@ $<
#x86_64_mov_to_lea7.o: x86_64_mov_to_lea4.s
#	$(TEST_AS) --x32 -o $@ $<
#x86_64_mov_to_lea8.o: x86_64_mov_to_lea4.s
#	$(TEST_AS) --64 -o $@ $<
#x86_64_mov_to_lea1: x86_64_mov_to_lea1.o ../ld-new
#	../ld-new -Bsymbolic -shared  -melf_x86_64  -o $@ $<
#x86_64_mov_to_lea2: x86_64_mov_to_lea1.o ../ld-new
#	../ld-new -pie -melf_x86_64  -o $@ $<
#x86_64_mov_to_lea3: x86_64_mov_to_lea1.o ../ld-new
#	../ld-new -melf_x86_64  -o $@ $<
#x86_64_mov_to_lea4: x86_64_mov_to_lea2.o ../ld-new
#	../ld-new -Bsymbolic -shared  -melf32_x86_64  -o $@ $<
#x86_64_mov_to_lea5: x86_64_mov_to_lea2.o ../ld-new
#	../ld-new -pie -melf32_x86_64  -o $@ $<
#x86_64_mov_to_lea6: x86_64_mov_to_lea2.o ../ld-new
#	../ld-new -melf32_x86_64  -o $@ $<
#x86_64_mov_to_lea7: x86_64_mov_to_lea3.o ../ld-new
#	../ld-new -melf32_x86_64 -pie -o $@ $<
#x86_64_mov_to_lea8: x86_64_mov_to_lea4.o ../ld-new
#	../ld-new -melf_x86_64 -pie -o $@ $<
#x86_64_mov_to_lea9: x86_64_mov_to_lea5.o ../ld-new
#	../ld-new -melf32_x86_64  -o $@ $<
#x86_64_mov_to_lea10: x86_64_mov_to_lea6.o ../ld-new
#	../ld-new -melf_x86_64  -o $@ $<
#x86_64_mov_to_lea11: x86_64_mov_to_lea2.o ../ld-new
#	../ld-new -melf32_x86_64 -shared  -o $@ $<
#x86_64_mov_to_lea12: x86_64_mov_to_lea1.o ../ld-new
#	../ld-new -melf_x86_64 -shared  -o $@ $<
#x86_64_mov_to_lea13: x86_64_mov_to_lea7.o ../ld-new
#	../ld-new -melf32_x86_64 -shared  -o $@ $<
#x86_64_mov_to_lea14: x86_64_mov_to_lea8.o ../ld-new
#	../ld-new -melf_x86_64 -shared  -o $@ $<
#x86_64_mov_to_lea1.stdout: x86_64_mov_to_lea1
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea2.stdout: x86_64_mov_to_lea2
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea3.stdout: x86_64_mov_to_lea3
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea4.stdout: x86_64_mov_to_lea4
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea5.stdout: x86_64_mov_to_lea5
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea6.stdout: x86_64_mov_to_lea6
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea7.stdout: x86_64_mov_to_lea7
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea8.stdout: x86_64_mov_to_lea8
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea9.stdout: x86_64_mov_to_lea9
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea10.stdout: x86_64_mov_to_lea10
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea11.stdout: x86_64_mov_to_lea11
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea12.stdout: x86_64_mov_to_lea12
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea13.stdout: x86_64_mov_to_lea13
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_mov_to_lea14.stdout: x86_64_mov_to_lea14
#	$(TEST_OBJDUMP) -dw $< > $@

#x86_64_indirect_call_to_direct1.o: x86_64_indirect_call_to_direct1.s
#	$(TEST_AS) --64 -mrelax-relocations=yes -o $@ $<
#x86_64_indirect_call_to_direct1: x86_64_indirect_call_to_direct1.o gcctestdir/ld
#	gcctestdir/ld -o $@ $<
#x86_64_indirect_call_to_direct1.stdout: x86_64_indirect_call_to_direct1
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_indirect_jump_to_direct1.o: x86_64_indirect_jump_to_direct1.s
#	$(TEST_AS) --64 -mrelax-relocations=yes -o $@ $<
#x86_64_indirect_jump_to_direct1: x86_64_indirect_jump_to_direct1.o gcctestdir/ld
#	gcctestdir/ld -o $@ $<
#x86_64_indirect_jump_to_direct1.stdout: x86_64_indirect_jump_to_direct1
#	$(TEST_OBJDUMP) -dw $< > $@
#x86_64_overflow_pc32.o: x86_64_overflow_pc32.s
#	$(TEST_AS) -o $@ $<
#x86_64_overflow_pc32.err: x86_64_overflow_pc32.o gcctestdir/ld
#	@echo gcctestdir/ld -e bar -Tdata=0x81000000 -o x86_64_overflow_pc32 x86_64_overflow_pc32.o "2>$@"
#	@if gcctestdir/ld -e bar -Tdata=0x81000000 -o x86_64_overflow_pc32 x86_64_overflow_pc32.o 2>$@; \
#	then \
#	  echo 1>&2 "Link of x86_64_overflow_pc32 should have failed"; \
#	  rm -f $@; \
#	  exit 1; \
#	fi
#pr17704a_test.o: pr17704a_test.s
#	$(TEST_AS) --64  -o $@ $<
#pr17704a_test: pr17704a_test.o gcctestdir/ld
#	gcctestdir/ld --icf=all -o $@ $<
#x32_overflow_pc32.o: x86_64_overflow_pc32.s
#	$(TEST_AS) --x32 -o $@ $<
#x32_overflow_pc32.err: x32_overflow_pc32.o gcctestdir/ld
#	@echo gcctestdir/ld -e bar -Tdata=0x81000000 -o x32_overflow_pc32 x32_overflow_pc32.o "2>$@"
#	@if gcctestdir/ld -e bar -Tdata=0x81000000 -o x32_overflow_pc32 x32_overflow_pc32.o 2>$@; \
#	then \
#	  echo 1>&2 "Link of x32_overflow_pc32 should have failed"; \
#	  rm -f $@; \
#	  exit 1; \
#	fi

#pr20216a.so: pr20216_gd.o pr20216_ld.o gcctestdir/ld
#	$(LINK) -Bgcctestdir/ -shared pr20216_gd.o pr20216_ld.o

#pr20216b.so: pr20216_def.o gcctestdir/ld
#	$(LINK) -Bgcctestdir/ -shared pr20216_def.o

#pr20216_gd.o: pr20216_gd.S gcctestdir/as
#	$(COMPILE) -Bgcctestdir/ -c -o $@ $<

#pr20216_ld.o: pr20216_ld.S gcctestdir/as
#	$(COMPILE) -Bgcctestdir/ -c -o $@ $<

#i386_mov_to_lea1.o: i386_mov_to_lea1.s
#	$(TEST_AS) --32 -o $@ $<
#i386_mov_to_lea2.o: i386_mov_to_lea2.s
#	$(TEST_AS) --32 -o $@ $<
#i386_mov_to_lea3.o: i386_mov_to_lea3.s
#	$(TEST_AS) --32 -o $@ $<
#i386_mov_to_lea4.o: i386_mov_to_lea4.s
#	$(TEST_AS) --32 -o $@ $<
#i386_mov_to_lea5.o: i386_mov_to_lea5.s
#	$(TEST_AS) --32 -o $@ $<
#i386_mov_to_lea1: i386_mov_to_lea1.o ../ld-new
#	../ld-new -Bsymbolic -shared -melf_i386  -o $@ $<
#i386_mov_to_lea2: i386_mov_to_lea1.o ../ld-new
#	../ld-new  -pie -melf_i386  -o $@ $<
#i386_mov_to_lea3: i386_mov_to_lea1.o ../ld-new
#	../ld-new -melf_i386  -o $@ $<
#i386_mov_to_lea4: i386_mov_to_lea1.o ../ld-new
#	../ld-new -melf_i386 -shared  -o $@ $<
#i386_mov_to_lea5: i386_mov_to_lea2.o ../ld-new
#	../ld-new -melf_i386 -shared  -o $@ $<
#i386_mov_to_lea6: i386_mov_to_lea3.o ../ld-new
#	../ld-new -melf_i386 -shared  -o $@ $<
#i386_mov_to_lea7: i386_mov_to_lea4.o ../ld-new
#	../ld-new -melf_i386 -shared  -o $@ $<
#i386_mov_to_lea8: i386_mov_to_lea5.o ../ld-new
#	../ld-new -melf_i386 -shared  -o $@ $<
#i386_mov_to_lea1.stdout: i386_mov_to_lea1
#	$(TEST_OBJDUMP) -dw $< > $@
#i386_mov_to_lea2.stdout: i386_mov_to_lea2
#	$(TEST_OBJDUMP) -dw $< > $@
#i386_mov_to_lea3.stdout: i386_mov_to_lea3
#	$(TEST_OBJDUMP) -dw $< > $@
#i386_mov_to_lea4.stdout: i386_mov_to_lea4
#	$(TEST_OBJDUMP) -dw $< > $@
#i386_mov_to_lea5.stdout: i386_mov_to_lea5
#	$(TEST_OBJDUMP) -dw $< > $@
#i386_mov_to_lea6.stdout: i386_mov_to_lea6
#	$(TEST_OBJDUMP) -dw $< > $@
#i386_mov_to_lea7.stdout: i386_mov_to_lea7
#	$(TEST_OBJDUMP) -dw $< > $@
#i386_mov_to_lea8.stdout: i386_mov_to_lea8
#	$(TEST_OBJDUMP) -dw $< > $@

#pr20308a.so: pr20308_gd.o pr20308_ld.o gcctestdir/ld
#	$(LINK) -Bgcctestdir/ -shared pr20308_gd.o pr20308_ld.o

#pr20308b.so: pr20308_def.o gcctestdir/ld
#	$(LINK) -Bgcctestdir/ -shared pr20308_def.o

#pr20308_gd.o: pr20308_gd.S gcctestdir/as
#	$(COMPILE) -Bgcctestdir/ -c -o $@ $<

#pr20308_ld.o: pr20308_ld.S gcctestdir/as
#	$(COMPILE) -Bgcctestdir/ -c -o $@ $<
many_sections_define.h:
	(for i in `seq 1 70000`; do \
	   echo "int var_$$i __attribute__((section(\"section_$$i\"))) = $$i;"; \
	 done) > $@.tmp
	mv -f $@.tmp $@
many_sections_check.h:
	(for i in `seq 1 1000 70000`; do \
	   echo "assert(var_$$i == $$i);"; \
	 done) > $@.tmp
	mv -f $@.tmp $@
many_sections_r_test.o: many_sections_test.o gcctestdir/ld
	gcctestdir/ld -r -o $@ many_sections_test.o
many_sections_r_test: many_sections_r_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ many_sections_r_test.o $(LIBS)
file_in_many_sections.o: file_in_many_sections.c many_sections_define.h
	$(COMPILE) -c -fdata-sections -o $@ $(srcdir)/file_in_many_sections.c
file_in_many_sections: file_in_many_sections.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ file_in_many_sections.o -Wl,--gc-sections
file_in_many_sections.stdout: file_in_many_sections
	$(TEST_READELF) -s $< > $@
debug_msg.o: debug_msg.cc
	$(CXXCOMPILE) -O0 -g -c -w -o $@ $(srcdir)/debug_msg.cc
odr_violation1.o: odr_violation1.cc
	$(CXXCOMPILE) -O0 -g -c -w -o $@ $(srcdir)/odr_violation1.cc
# Compile with different optimization flags to check that rearranged
# instructions don't cause a false positive.
odr_violation2.o: odr_violation2.cc
	$(CXXCOMPILE) -O2 -g -c -w -o $@ $(srcdir)/odr_violation2.cc
debug_msg.err: debug_msg.o odr_violation1.o odr_violation2.o gcctestdir/ld
	@echo $(CXXLINK) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg debug_msg.o odr_violation1.o odr_violation2.o "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg debug_msg.o odr_violation1.o odr_violation2.o 2>$@; \
	then \
	  echo 1>&2 "Link of debug_msg should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
missing_key_func.o: missing_key_func.cc
	$(CXXCOMPILE) -O0 -g -c -o $@ $(srcdir)/missing_key_func.cc
missing_key_func.err: missing_key_func.o gcctestdir/ld
	@echo $(CXXLINK) -Bgcctestdir/ -o missing_key_func missing_key_func.o "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -o missing_key_func missing_key_func.o 2>$@; \
	then \
	  echo 1>&2 "Link of missing_key_func should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
debug_msg_cdebug.o: debug_msg.cc gcctestdir/as
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g -Wa,--compress-debug-sections -c -w -o $@ $(srcdir)/debug_msg.cc
odr_violation1_cdebug.o: odr_violation1.cc gcctestdir/as
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g -Wa,--compress-debug-sections -c -w -o $@ $(srcdir)/odr_violation1.cc
odr_violation2_cdebug.o: odr_violation2.cc gcctestdir/as
	$(CXXCOMPILE) -Bgcctestdir/ -O2 -g -Wa,--compress-debug-sections -c -w -o $@ $(srcdir)/odr_violation2.cc
debug_msg_cdebug.err: debug_msg_cdebug.o odr_violation1_cdebug.o odr_violation2_cdebug.o gcctestdir/ld
	@echo $(CXXLINK) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg_cdebug debug_msg_cdebug.o odr_violation1_cdebug.o odr_violation2_cdebug.o "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg_cdebug debug_msg_cdebug.o odr_violation1_cdebug.o odr_violation2_cdebug.o 2>$@; \
	then \
	  echo 1>&2 "Link of debug_msg_cdebug should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
debug_msg_cdebug_gabi.o: debug_msg.cc gcctestdir/as
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g -Wa,--compress-debug-sections=zlib-gabi -c -w -o $@ $(srcdir)/debug_msg.cc
odr_violation1_cdebug_gabi.o: odr_violation1.cc gcctestdir/as
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g -Wa,--compress-debug-sections=zlib-gabi -c -w -o $@ $(srcdir)/odr_violation1.cc
odr_violation2_cdebug_gabi.o: odr_violation2.cc gcctestdir/as
	$(CXXCOMPILE) -Bgcctestdir/ -O2 -g -Wa,--compress-debug-sections=zlib-gabi -c -w -o $@ $(srcdir)/odr_violation2.cc
debug_msg_cdebug_gabi.err: debug_msg_cdebug_gabi.o odr_violation1_cdebug_gabi.o odr_violation2_cdebug_gabi.o gcctestdir/ld
	@echo $(CXXLINK) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg_cdebug debug_msg_cdebug_gabi.o odr_violation1_cdebug_gabi.o odr_violation2_cdebug_gabi.o "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg_cdebug_gabi debug_msg_cdebug_gabi.o odr_violation1_cdebug_gabi.o odr_violation2_cdebug_gabi.o 2>$@; \
	then \
	  echo 1>&2 "Link of debug_msg_cdebug_gabi should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
debug_msg.so: debug_msg.cc gcctestdir/ld
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g -shared -fPIC -w -o $@ $(srcdir)/debug_msg.cc
odr_violation1.so: odr_violation1.cc gcctestdir/ld
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g -shared -fPIC -w -o $@ $(srcdir)/odr_violation1.cc
odr_violation2.so: odr_violation2.cc gcctestdir/ld
	$(CXXCOMPILE) -Bgcctestdir/ -O2 -g -shared -fPIC -w -o $@ $(srcdir)/odr_violation2.cc
debug_msg_so.err: debug_msg.so odr_violation1.so odr_violation2.so gcctestdir/ld
	@echo $(CXXLINK_S) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg_so debug_msg.so odr_violation1.so odr_violation2.so "2>$@"
	@if $(CXXLINK_S) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg_so debug_msg.so odr_violation1.so odr_violation2.so 2>$@; \
	then \
	  echo 1>&2 "Link of debug_msg_so should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
debug_msg_ndebug.so: debug_msg.cc gcctestdir/ld
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g0 -shared -fPIC -w -o $@ $(srcdir)/debug_msg.cc
odr_violation1_ndebug.so: odr_violation1.cc gcctestdir/ld
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g0 -shared -fPIC -w -o $@ $(srcdir)/odr_violation1.cc
odr_violation2_ndebug.so: odr_violation2.cc gcctestdir/ld
	$(CXXCOMPILE) -Bgcctestdir/ -O2 -g0 -shared -fPIC -w -o $@ $(srcdir)/odr_violation2.cc
debug_msg_ndebug.err: debug_msg_ndebug.so odr_violation1_ndebug.so odr_violation2_ndebug.so gcctestdir/ld
	@echo $(CXXLINK_S) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg_ndebug debug_msg_ndebug.so odr_violation1_ndebug.so odr_violation2_ndebug.so -shared-libgcc -Bdynamic -lstdc++ "2>$@"
	@if $(CXXLINK_S) -Bgcctestdir/ -Wl,--detect-odr-violations -o debug_msg_ndebug debug_msg_ndebug.so odr_violation1_ndebug.so odr_violation2_ndebug.so -shared-libgcc -Bdynamic -lstdc++ 2>$@; \
	then \
	  echo 1>&2 "Link of debug_msg_ndebug should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
undef_symbol.o: undef_symbol.cc
	$(CXXCOMPILE) -O0 -g -c -fPIC $<
undef_symbol.so: undef_symbol.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared undef_symbol.o
undef_symbol.err: undef_symbol_main.o undef_symbol.so gcctestdir/ld
	@echo $(CXXLINK) -Bgcctestdir/ -o undef_symbol_test undef_symbol_main.o undef_symbol.so "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -o undef_symbol_test undef_symbol_main.o undef_symbol.so 2>$@; \
	then \
	  echo 1>&2 "Link of undef_symbol_test should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
flagstest_o_specialfile: flagstest_debug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o /dev/stdout $< 2>&1 | cat > $@
	chmod a+x $@
	test -s $@
flagstest_compress_debug_sections_none: flagstest_debug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o $@ $< -Wl,--compress-debug-sections=none
	test -s $@

# Dump DWARF debug sections.
flagstest_compress_debug_sections_none.stdout: flagstest_compress_debug_sections_none
	$(TEST_READELF) -w $< > $@.tmp
	mv -f $@.tmp $@
flagstest_compress_debug_sections: flagstest_debug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o $@ $< -Wl,--compress-debug-sections=zlib
	test -s $@
flagstest_compress_debug_sections_and_build_id_tree: flagstest_debug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o $@ $< -Wl,--compress-debug-sections=zlib \
		-Wl,--build-id=tree \
		-Wl,--build-id-chunk-size-for-treehash=4096 \
		-Wl,--build-id-min-file-size-for-treehash=0
	test -s $@

# Dump compressed DWARF debug sections.
flagstest_compress_debug_sections.stdout: flagstest_compress_debug_sections
	$(TEST_READELF) -w $< | sed -e "s/.zdebug_/.debug_/" > $@.tmp
	mv -f $@.tmp $@

# Check there are compressed DWARF .debug_* sections.
flagstest_compress_debug_sections.check: flagstest_compress_debug_sections
	$(TEST_READELF) -SW $< | egrep ".debug_.* C *" > $@.tmp
	mv -f $@.tmp $@

# Compare DWARF debug info.
flagstest_compress_debug_sections.cmp: flagstest_compress_debug_sections.stdout \
	flagstest_compress_debug_sections_none.stdout
	cmp flagstest_compress_debug_sections.stdout \
		flagstest_compress_debug_sections_none.stdout > $@.tmp
	mv -f $@.tmp $@
flagstest_compress_debug_sections_gnu: flagstest_debug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o $@ $< -Wl,--compress-debug-sections=zlib-gnu
	test -s $@

# Dump compressed DWARF debug sections.
flagstest_compress_debug_sections_gnu.stdout: flagstest_compress_debug_sections_gnu
	$(TEST_READELF) -w $< | sed -e "s/.zdebug_/.debug_/" > $@.tmp
	mv -f $@.tmp $@

# Check there are compressed DWARF .zdebug_* sections.
flagstest_compress_debug_sections_gnu.check: flagstest_compress_debug_sections_gnu
	$(TEST_READELF) -SW $< | grep ".zdebug_" > $@.tmp
	mv -f $@.tmp $@

# Compare DWARF debug info.
flagstest_compress_debug_sections_gnu.cmp: flagstest_compress_debug_sections_gnu.stdout \
	flagstest_compress_debug_sections_none.stdout
	cmp flagstest_compress_debug_sections_gnu.stdout \
		flagstest_compress_debug_sections_none.stdout > $@.tmp
	mv -f $@.tmp $@
flagstest_compress_debug_sections_gabi: flagstest_debug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o $@ $< -Wl,--compress-debug-sections=zlib-gabi
	test -s $@

# Dump compressed DWARF debug sections.
flagstest_compress_debug_sections_gabi.stdout: flagstest_compress_debug_sections_gabi
	$(TEST_READELF) -w $< > $@.tmp
	mv -f $@.tmp $@

# Check there are compressed DWARF .debug_* sections.
flagstest_compress_debug_sections_gabi.check: flagstest_compress_debug_sections_gabi
	$(TEST_READELF) -tW $< | grep "COMPRESSED" > $@.tmp
	mv -f $@.tmp $@

# Compare DWARF debug info.
flagstest_compress_debug_sections_gabi.cmp: flagstest_compress_debug_sections_gabi.stdout \
	flagstest_compress_debug_sections_none.stdout
	cmp flagstest_compress_debug_sections_gabi.stdout \
		flagstest_compress_debug_sections_none.stdout > $@.tmp
	mv -f $@.tmp $@
flagstest_o_specialfile_and_compress_debug_sections: flagstest_debug.o \
		gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o /dev/stdout $< -Wl,--compress-debug-sections=zlib 2>&1 | cat > $@
	chmod a+x $@
	test -s $@

pr18689.stdout: pr18689b.o
	$(TEST_READELF) -SW $< > $@

pr18689a.o: pr18689.o ../ld-new
	../ld-new -r -o $@ $<

pr18689b.o: pr18689a.o ../ld-new
	../ld-new -r -o $@ $<

pr18689.o: pr18689.c gcctestdir/as
	$(COMPILE) -Bgcctestdir/ -ggdb3 -g -Wa,--compress-debug-sections=zlib-gabi -c -w -o $@ $(srcdir)/pr18689.c
flagstest_o_ttext_1: flagstest_debug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o $@ $< -Wl,-Ttext,0x400000 -Wl,-Tdata,0x800000
flagstest_o_ttext_2: flagstest_debug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -o $@ $< -Wl,-Ttext,0x400010 -Wl,-Tdata,0x800010
ver_test_1.so: ver_test_1.o ver_test_2.so ver_test_3.o ver_test_4.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared ver_test_1.o ver_test_2.so ver_test_3.o ver_test_4.so
ver_test_2.so: ver_test_2.o $(srcdir)/ver_test_2.script ver_test_4.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,--version-script,$(srcdir)/ver_test_2.script -Wl,-R,. ver_test_2.o ver_test_4.so
ver_test_4.so: ver_test_4.o $(srcdir)/ver_test_4.script gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,--version-script,$(srcdir)/ver_test_4.script ver_test_4.o
ver_test_1.o: ver_test_1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
ver_test_2.o: ver_test_2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
ver_test_3.o: ver_test_3.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
ver_test_4.o: ver_test_4.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
ver_test_1.syms: ver_test_1.so
	$(TEST_READELF) -s $< >$@ 2>/dev/null
ver_test_2.syms: ver_test_2
	$(TEST_READELF) -s $< >$@ 2>/dev/null
ver_test_4.syms: ver_test_4.so
	$(TEST_READELF) -s $< >$@ 2>/dev/null

ver_test_5.so: ver_test_5.o $(srcdir)/ver_test_5.script ver_test_4.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,--version-script,$(srcdir)/ver_test_5.script ver_test_5.o ver_test_4.so
ver_test_5.o: ver_test_5.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
ver_test_5.syms: ver_test_5.so
	$(TEST_READELF) -s $< >$@ 2>/dev/null

ver_test_7.so: ver_test_4.o $(srcdir)/ver_test_4.script ver_test_7.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,--version-script,$(srcdir)/ver_test_4.script ver_test_4.o ver_test_7.o
ver_test_7.o: ver_test_7.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
ver_test_7.syms: ver_test_7.so
	$(TEST_READELF) -s $< >$@ 2>/dev/null
ver_test_8_1.so: two_file_test_1_pic.o two_file_test_1b_pic.o ver_test_8_2.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared two_file_test_1_pic.o two_file_test_1b_pic.o ver_test_8_2.so
ver_test_8_2.so: two_file_test_2_pic.o $(srcdir)/ver_test_8.script gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,--version-script,$(srcdir)/ver_test_8.script two_file_test_2_pic.o
ver_test_8_2.so.syms: ver_test_8_2.so
	$(TEST_READELF) -s $< >$@ 2>/dev/null
ver_test_9.so: ver_test_9.o ver_test_4.so ver_test_5.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,-R,. ver_test_9.o ver_test_5.so ver_test_4.so
ver_test_9.o: ver_test_9.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
ver_test_10.syms: ver_test_10.so
	$(TEST_READELF) -s $< >$@ 2>/dev/null
ver_test_10.so: gcctestdir/ld ver_test_2.o ver_test_10.script
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,--version-script,$(srcdir)/ver_test_10.script ver_test_2.o
ver_test_11.a: ver_test_1.o ver_test_2.o ver_test_4.o
	$(TEST_AR) rc $@ $^
ver_test_12.o: gcctestdir/ld ver_test_1.o ver_test_2.o ver_test_4.o
	gcctestdir/ld -r -o $@ ver_test_1.o ver_test_2.o ver_test_4.o
ver_test_13.syms: ver_test_13.so
	$(TEST_READELF) -s $< >$@ 2>/dev/null
ver_test_13.so: gcctestdir/ld ver_test_13.o ver_test_13.script
	$(LINK) -Bgcctestdir/ -shared -Wl,--version-script,$(srcdir)/ver_test_13.script ver_test_13.o
ver_test_13.o: ver_test_13.c
	$(COMPILE) -c -fpic -o $@ $<

protected_1.so: gcctestdir/ld protected_1_pic.o protected_2_pic.o protected_3_pic.o
	$(CXXLINK) -Bgcctestdir/ -shared protected_1_pic.o protected_2_pic.o protected_3_pic.o
protected_1_pic.o: protected_1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
protected_2_pic.o: protected_2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
protected_3_pic.o: protected_3.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
protected_4_pic.o: protected_4.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
protected_3.err: protected_4_pic.o gcctestdir/ld
	@echo $(CXXLINK) -Bgcctestdir/ -shared -o protected_4.so protected_4_pic.o "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -shared -o protected_4.so protected_4_pic.o 2>$@; then \
	  echo 1>&2 "Link of protected_4.so should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
relro_test.so: gcctestdir/ld relro_test_pic.o
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,-z,relro relro_test_pic.o
relro_test_pic.o: relro_test.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<
relro_test.stdout: relro_test.so
	$(TEST_READELF) -SlW relro_test.so > relro_test.stdout
relro_now_test.so: gcctestdir/ld relro_test_pic.o
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,-z,relro -Wl,-z,now relro_test_pic.o
relro_strip_test.so: relro_test.so
	$(TEST_STRIP) -o $@ $<
relro_script_test.so: gcctestdir/ld relro_script_test.t relro_test_pic.o
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,-z,relro -Wl,-T,$(srcdir)/relro_script_test.t relro_test_pic.o
justsyms_2.o: justsyms_2.cc
	$(CXXCOMPILE) -c -o $@ $<
justsyms_2r.o: justsyms_2.o gcctestdir/ld $(srcdir)/justsyms.t
	gcctestdir/ld -o $@ -r -T $(srcdir)/justsyms.t justsyms_2.o
justsyms_lib.o: justsyms_lib.c
	$(COMPILE) -c -o $@ $<
justsyms_lib: justsyms_lib.o gcctestdir/ld
	gcctestdir/ld -o $@ -Ttext=0x1000200 -Tdata=0x2000000 -e exported_func justsyms_lib.o
# Copy the file to the build directory to avoid worrying about the
# full pathname in the generated symbols.
binary.txt: $(srcdir)/binary.in
	rm -f $@
	$(LN_S) $< $@
ver_matching_def.so: ver_matching_def_pic.o $(srcdir)/version_script.map gcctestdir/ld
	$(CXXLINK) -O0 -Bgcctestdir/ -shared ver_matching_def_pic.o -Wl,--version-script=$(srcdir)/version_script.map
ver_matching_def_pic.o: ver_matching_def.cc
	$(CXXCOMPILE) -O0 -c -fpic -o $@ $<
ver_matching_test.stdout: ver_matching_def.so
	$(TEST_OBJDUMP) -T ver_matching_def.so | $(TEST_CXXFILT) > ver_matching_test.stdout
script_test_3: basic_test.o gcctestdir/ld script_test_3.t
	$(CXXLINK) -Bgcctestdir/ basic_test.o -Wl,-T,$(srcdir)/script_test_3.t
script_test_3.stdout: script_test_3
	$(TEST_READELF) -SlW script_test_3 > script_test_3.stdout
script_test_4: basic_test.o gcctestdir/ld $(srcdir)/script_test_4.t
	$(CXXLINK) -Bgcctestdir/ basic_test.o -Wl,-T,$(srcdir)/script_test_4.t
script_test_4.stdout: script_test_4
	$(TEST_READELF) -SlW script_test_4 > script_test_4.stdout
script_test_5: script_test_5.o gcctestdir/ld $(srcdir)/script_test_5.t
	$(CXXLINK) -Bgcctestdir/ script_test_5.o -Wl,-T,$(srcdir)/script_test_5.t
script_test_5.stdout: script_test_5
	$(TEST_READELF) -SW script_test_5 > script_test_5.stdout
script_test_6: basic_test.o gcctestdir/ld $(srcdir)/script_test_6.t
	$(CXXLINK) -Bgcctestdir/ basic_test.o -Wl,-T,$(srcdir)/script_test_6.t \
	-Wl,-Ttext=0x10001000 -Wl,-Tdata=0x10200000 -Wl,-Tbss=0x10400000
script_test_6.stdout: script_test_6
	$(TEST_READELF) -SlW script_test_6 > script_test_6.stdout
script_test_7: basic_test.o gcctestdir/ld $(srcdir)/script_test_7.t
	$(CXXLINK) -Bgcctestdir/ basic_test.o -Wl,-T,$(srcdir)/script_test_7.t
script_test_7.stdout: script_test_7
	$(TEST_READELF) -SlW script_test_7 > script_test_7.stdout
script_test_8: basic_test.o gcctestdir/ld $(srcdir)/script_test_7.t
	$(CXXLINK) -Bgcctestdir/ basic_test.o -Wl,-T,$(srcdir)/script_test_7.t \
	-Wl,-Ttext=0x20001000 -Wl,-Tdata=0x20200000 -Wl,-Tbss=0x20400000
script_test_8.stdout: script_test_8
	$(TEST_READELF) -SlW script_test_8 > script_test_8.stdout
script_test_9.o: script_test_9.cc
	$(CXXCOMPILE) -O0 -c -o $@ $<
script_test_9: gcctestdir/ld $(srcdir)/script_test_9.t script_test_9.o
	$(CXXLINK) -Bgcctestdir/ script_test_9.o -Wl,-T,$(srcdir)/script_test_9.t
script_test_9.stdout: script_test_9
	$(TEST_READELF) -lW script_test_9 > script_test_9.stdout
script_test_11: gcctestdir/ld script_test_11_r.o
	$(LINK) -Bgcctestdir/ script_test_11_r.o
script_test_11_r.o: gcctestdir/ld $(srcdir)/script_test_11.t script_test_11a.o script_test_11b.o
	gcctestdir/ld -r -o $@ -T $(srcdir)/script_test_11.t script_test_11a.o script_test_11b.o
script_test_11a.o: script_test_11a.c
	$(COMPILE) -c -g -o $@ $<
script_test_11b.o: script_test_11b.c
	$(COMPILE) -c -g -o $@ $<
script_test_12: gcctestdir/ld $(srcdir)/script_test_12.t script_test_12a.o script_test_12b.o
	$(LINK) -Bgcctestdir/ -Wl,-T,$(srcdir)/script_test_12.t script_test_12a.o script_test_12b.o
script_test_12i: gcctestdir/ld $(srcdir)/script_test_12i.t script_test_12a.o script_test_12b.o
	$(LINK) -Bgcctestdir/ -Wl,-T,$(srcdir)/script_test_12i.t script_test_12a.o script_test_12b.o
script_test_12a.o: script_test_12a.c
	$(COMPILE) -O0 -c -o $@ $<
script_test_12b.o: script_test_12b.c
	$(COMPILE) -O0 -c -o $@ $<
script_test_13.o: script_test_13.c
	$(COMPILE) -O0 -c -fPIC -o $@ $<
script_test_13: $(srcdir)/script_test_13.t script_test_13.o gcctestdir/ld
	gcctestdir/ld -shared -o $@ script_test_13.o -T $(srcdir)/script_test_13.t
script_test_13.stdout: script_test_13
	$(TEST_READELF) -SW script_test_13 > $@
script_test_14.o: script_test_14.s
	$(TEST_AS) -o $@ $<
script_test_14: $(srcdir)/script_test_14.t script_test_14.o gcctestdir/ld
	gcctestdir/ld -o $@ script_test_14.o -T $(srcdir)/script_test_14.t
script_test_14.stdout: script_test_14
	$(TEST_OBJDUMP) -s script_test_14 > $@
script_test_15a: $(srcdir)/script_test_15a.t script_test_15.o gcctestdir/ld
	gcctestdir/ld -o $@ script_test_15.o -T $(srcdir)/script_test_15a.t
script_test_15a.stdout: script_test_15a
	$(TEST_READELF) -lSW script_test_15a > $@
script_test_15b: $(srcdir)/script_test_15b.t script_test_15.o gcctestdir/ld
	gcctestdir/ld -o $@ script_test_15.o -T $(srcdir)/script_test_15b.t
script_test_15b.stdout: script_test_15b
	$(TEST_READELF) -lSW script_test_15b > $@
script_test_15c: $(srcdir)/script_test_15c.t script_test_15.o gcctestdir/ld
	gcctestdir/ld -o $@ script_test_15.o -T $(srcdir)/script_test_15c.t
script_test_15c.stdout: script_test_15c
	$(TEST_READELF) -lSW script_test_15c > $@
dynamic_list: basic_test.o gcctestdir/ld $(srcdir)/dynamic_list.t
	$(CXXLINK) -Bgcctestdir/ basic_test.o \
	  -Wl,--dynamic-list $(srcdir)/dynamic_list.t \
	  -Wl,--dynamic-list-data \
	  -Wl,--dynamic-list-cpp-new \
	  -Wl,--dynamic-list-cpp-typeinfo
dynamic_list.stdout: dynamic_list
	$(TEST_READELF) -W --dyn-syms dynamic_list > dynamic_list.stdout

dynamic_list_lib1.so: gcctestdir/ld dynamic_list_lib1.o
	$(CXXLINK) -Bgcctestdir/ -shared dynamic_list_lib1.o
dynamic_list_lib1.o: dynamic_list_lib1.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<

dynamic_list_lib2.so: gcctestdir/ld dynamic_list_lib2.o $(srcdir)/dynamic_list_2.t
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,-Bsymbolic-functions -Wl,--dynamic-list,$(srcdir)/dynamic_list_2.t dynamic_list_lib2.o
dynamic_list_lib2.o: dynamic_list_lib2.cc
	$(CXXCOMPILE) -c -fpic -o $@ $<

libthin1.a: thin_archive_test_1.o alt/thin_archive_test_2.o
	rm -f $@
	$(TEST_AR) crT $@ $^
alt/libthin2.a: thin_archive_test_3.o alt/thin_archive_test_4.o
	rm -f $@
	$(TEST_AR) crT $@ $^
libthin3.a: thin_archive_test_1.o alt/thin_archive_test_4.o
	rm -f $@
	$(TEST_AR) crT $@ $^
alt/libthin4.a: alt/thin_archive_test_2.o thin_archive_test_3.o
	rm -f $@
	$(TEST_AR) crT $@ $^
libthinall.a: libthin3.a alt/libthin4.a
	rm -f $@
	$(TEST_AR) crT $@ $^
alt/thin_archive_test_2.o: thin_archive_test_2.cc
	test -d alt || mkdir -p alt
	$(CXXCOMPILE) -c -o $@ $<
alt/thin_archive_test_4.o: thin_archive_test_4.cc
	test -d alt || mkdir -p alt
	$(CXXCOMPILE) -c -o $@ $<
plugin_test_1: two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o.syms empty.o.syms gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_Z4f13iv" two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o.syms empty.o.syms 2>plugin_test_1.err
plugin_test_1.err: plugin_test_1
	@touch plugin_test_1.err
plugin_test_2: two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_shared_2.so gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,-R,.,--plugin,"./plugin_test.so" two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_shared_2.so 2>plugin_test_2.err
plugin_test_2.err: plugin_test_2
	@touch plugin_test_2.err
plugin_test_3: two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o.syms empty.o.syms gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--export-dynamic -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_Z4f13iv" two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o.syms empty.o.syms 2>plugin_test_3.err
plugin_test_3.err: plugin_test_3
	@touch plugin_test_3.err
plugin_test_4: two_file_test_main.o plugin_test_4.a gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_Z4f13iv" two_file_test_main.o -Wl,--whole-archive,plugin_test_4.a,--no-whole-archive 2>plugin_test_4.err
plugin_test_4.err: plugin_test_4
	@touch plugin_test_4.err

plugin_test_4.a: two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o.syms
	$(TEST_AR) cr $@ $^
plugin_test_5: two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o.syms unused.o.syms gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_Z4f13iv",--gc-sections two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o.syms unused.o.syms
plugin_test_6: plugin_common_test_1.o.syms plugin_common_test_2.o.syms gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so" plugin_common_test_1.o.syms plugin_common_test_2.o.syms 2>plugin_test_6.err
plugin_test_6.err: plugin_test_6
	@touch plugin_test_6.err
plugin_test_7: plugin_test_7_1.o plugin_test_7_1.o.syms plugin_test_7_2.o gcctestdir/ld plugin_test.so
	$(LINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so",--gc-sections,--print-gc-sections plugin_test_7_1.o.syms plugin_test_7_2.o 2>plugin_test_7.err
plugin_test_7.o.syms: plugin_test_7
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
plugin_test_7_1.o: plugin_test_7_1.c
	$(COMPILE) -DLTO -O0 -c -ffunction-sections -fdata-sections -o $@ $<
plugin_test_7_1_orig.o: plugin_test_7_1.c
	$(COMPILE) -O0 -c -ffunction-sections -fdata-sections -o $@ $<
plugin_test_7_1.o.syms: plugin_test_7_1_orig.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
plugin_test_7_2.o: plugin_test_7_2.c
	$(COMPILE) -O0 -c -ffunction-sections -fdata-sections -o $@ $<
plugin_test_7.err: plugin_test_7
plugin_test_8.o: two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o ../ld-new plugin_test.so
	../ld-new -r -o $@ --no-demangle --plugin "./plugin_test.so" two_file_test_main.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2.o
plugin_test_8: plugin_test_8.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle plugin_test_8.o
plugin_test_9.err: two_file_test_main.o two_file_test_1c.o.syms two_file_test_2.o.syms gcctestdir/ld plugin_test.so
	@echo $(CXXLINK) -Bgcctestdir/ -o plugin_test_9 -Wl,--no-demangle,--plugin,"./plugin_test.so" two_file_test_main.o two_file_test_1c.o.syms two_file_test_2.o.syms "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -o plugin_test_9 -Wl,--no-demangle,--plugin,"./plugin_test.so" two_file_test_main.o two_file_test_1c.o.syms two_file_test_2.o.syms 2>$@; then \
	  echo 1>&2 "Link of plugin_test_9 should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
# Make a .syms file that claims to define the symbol _Z4t16av.
two_file_test_1c.o.syms: two_file_test_1.o.syms two_file_test_1c.o
	cp two_file_test_1.o.syms $@.tmp
	grep "_Z4t16av" two_file_test_1b.o.syms >> $@.tmp
	mv -f $@.tmp $@
two_file_test_1c.o: two_file_test_1.o
	cp two_file_test_1.o $@
plugin_test_9b.err: plugin_test_9b_ir.o.syms plugin_test_9b_ir.o plugin_test_9b_elf.o gcctestdir/ld plugin_test.so
	@echo $(CXXLINK) -Bgcctestdir/ -o plugin_test_9b -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_ZN1A5printEv" plugin_test_9b_ir.o plugin_test_9b_elf.o "2>$@"
	@if $(CXXLINK) -Bgcctestdir/ -o plugin_test_9b -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_ZN1A5printEv" plugin_test_9b_ir.o plugin_test_9b_elf.o 2>$@; then \
	  echo 1>&2 "Link of plugin_test_9b should have failed"; \
	  rm -f $@; \
	  exit 1; \
	fi
# Make a .syms file that claims to define a method in class A in a COMDAT group.
# The real plugin_test_9b_ir.o will be compiled without the -D, and will not
# define any methods in class A.
plugin_test_9b_ir.o.syms: plugin_test_9b_ir_witha.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
plugin_test_9b_ir_witha.o: plugin_test_9b_ir.cc
	$(CXXCOMPILE) -c -DUSE_CLASS_A -o $@ $<
plugin_test_10: plugin_common_test_1.o.syms plugin_common_test_2.o  gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so" plugin_common_test_1.o.syms plugin_common_test_2.o
plugin_test_10.sections: plugin_test_10
	$(TEST_READELF) -SW $< >$@ 2>/dev/null
plugin_test_11: two_file_test_main.o plugin_test_thin.a gcctestdir/ld plugin_test.so $(PLUGIN_TEST_11_SYMS)
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_Z4f13iv" two_file_test_main.o plugin_test_thin.a 2>plugin_test_11.err
plugin_test_11.err: plugin_test_11
	@touch plugin_test_11.err
plugin_test_thin.a: two_file_test_1.o two_file_test_1b.o two_file_test_2.o
	rm -f $@
	$(TEST_AR) crT $@ $^
export_dynamic_plugin.o.syms: export_dynamic_plugin.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
export_dynamic_plugin.o: export_dynamic_plugin.cc
	$(COMPILE) -c -o $@ $<
plugin_test_12: export_dynamic_plugin.o gcctestdir/ld plugin_test.so export_dynamic_plugin.o.syms
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_Z3foov" -Wl,--export-dynamic-symbol,"_Z3foov" export_dynamic_plugin.o.syms 2>plugin_test_12.err
plugin_test_12.err: plugin_test_12
	@touch plugin_test_12.err
plugin_test_start_lib: unused.o plugin_start_lib_test.o plugin_start_lib_test_2.syms gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so" plugin_start_lib_test.o \
		-Wl,--start-lib plugin_start_lib_test_2.syms -Wl,--end-lib 2>plugin_test_start_lib.err
plugin_test_start_lib.err: plugin_test_start_lib
	@touch plugin_test_start_lib.err

plugin_start_lib_test_2.syms: plugin_start_lib_test_2.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null

plugin_test.so: plugin_test.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared plugin_test.o
plugin_test.o: plugin_test.c
	$(COMPILE) -O0 -c -fpic -o $@ $<

two_file_test_main.o.syms: two_file_test_main.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
two_file_test_1.o.syms: two_file_test_1.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
two_file_test_1b.o.syms: two_file_test_1b.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
two_file_test_2.o.syms: two_file_test_2.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
plugin_common_test_1.o.syms: plugin_common_test_1.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
plugin_common_test_2.o.syms: plugin_common_test_2.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null

empty.o.syms:
	@echo "" >$@
	@echo "Symbol table" >>$@
plugin_test_tls: two_file_test_tls.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2_tls.o.syms gcctestdir/ld plugin_test.so
	$(CXXLINK) -Bgcctestdir/ -Wl,--no-demangle,--plugin,"./plugin_test.so",--plugin-opt,"_Z4f13iv" two_file_test_tls.o two_file_test_1.o.syms two_file_test_1b.o.syms two_file_test_2_tls.o.syms 2>plugin_test_tls.err
plugin_test_tls.err: plugin_test_tls
	@touch plugin_test_tls.err

two_file_test_2_tls.o.syms: two_file_test_2_tls.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
unused.o.syms: unused.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
	@echo "     1: 00000000     4 FUNC    GLOBAL DEFAULT    1 UNUSED" >>$@
unused.o: unused.c
	$(COMPILE) -c -o $@ $<
unused.c:
	@cp /dev/null $@
plugin_final_layout.o: plugin_final_layout.cc
	$(CXXCOMPILE) -O0 -c -ffunction-sections  -fdata-sections -g -o $@ $<
plugin_final_layout: plugin_final_layout.o plugin_section_order.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--plugin,"./plugin_section_order.so" plugin_final_layout.o
plugin_final_layout.stdout: plugin_final_layout
	$(TEST_NM) -n --synthetic plugin_final_layout > plugin_final_layout.stdout
plugin_final_layout_readelf.stdout: plugin_final_layout
	$(TEST_READELF) -Wl plugin_final_layout > plugin_final_layout_readelf.stdout

plugin_section_order.so: plugin_section_order.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared plugin_section_order.o
plugin_section_order.o: plugin_section_order.c
	$(COMPILE) -O0 -c -fpic -o $@ $<
plugin_final_layout.o.syms: plugin_final_layout.o
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
plugin_layout_new_file: plugin_final_layout.o.syms plugin_test.so plugin_new_section_layout.so gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--plugin,"./plugin_test.so"  -Wl,--plugin,"./plugin_new_section_layout.so" plugin_final_layout.o.syms
plugin_layout_new_file.stdout: plugin_layout_new_file
	$(TEST_NM) -n --synthetic plugin_layout_new_file > plugin_layout_new_file.stdout
plugin_layout_new_file_readelf.stdout: plugin_layout_new_file
	$(TEST_READELF) -Wl plugin_layout_new_file > plugin_layout_new_file_readelf.stdout

plugin_new_section_layout.so: plugin_new_section_layout.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared plugin_new_section_layout.o
plugin_new_section_layout.o: plugin_new_section_layout.c
	$(COMPILE) -O0 -c -fpic -o $@ $<
plugin_layout_with_alignment.o: plugin_layout_with_alignment.c
	$(COMPILE) -O0 -c -ffunction-sections  -fdata-sections -g -o $@ $<
plugin_layout_with_alignment: plugin_layout_with_alignment.o plugin_section_alignment.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ -Wl,--plugin,"./plugin_section_alignment.so" plugin_layout_with_alignment.o
plugin_layout_with_alignment.stdout: plugin_layout_with_alignment
	$(TEST_NM) -n --synthetic plugin_layout_with_alignment > plugin_layout_with_alignment.stdout

plugin_section_alignment.so: plugin_section_alignment.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -shared plugin_section_alignment.o
plugin_section_alignment.o: plugin_section_alignment.cc
	$(CXXCOMPILE) -O0 -c -fpic -o $@ $<
exclude_libs_test.syms: exclude_libs_test
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
libexclude_libs_test_1.a: exclude_libs_test_1.o
	$(TEST_AR) rc $@ $^
libexclude_libs_test_2.a: exclude_libs_test_2.o
	$(TEST_AR) rc $@ $^
alt/libexclude_libs_test_3.a: exclude_libs_test_3.o
	test -d alt || mkdir -p alt
	$(TEST_AR) rc $@ $^
local_labels_test.o: ver_test_6.c
	$(COMPILE) -g -c -Wa,-L -o $@ $<
local_labels_test: local_labels_test.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ local_labels_test.o
discard_locals_test.syms: discard_locals_test
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
# '-Wa,-L' is required to preserve the local label used for testing.
discard_locals_test.o: discard_locals_test.c
	$(COMPILE) -c -Wa,-L -o $@ $<

discard_locals_relocatable_test1.syms: discard_locals_relocatable_test1.out
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
discard_locals_relocatable_test.o: discard_locals_relocatable_test.c
	$(COMPILE) -c -Wa,-L -fPIC -o $@ $<
discard_locals_relocatable_test1.out: discard_locals_relocatable_test.o ../ld-new
	../ld-new --discard-locals -relocatable -o $@ $<

discard_locals_relocatable_test2.syms: discard_locals_relocatable_test2.out
	$(TEST_READELF) -sW $< >$@ 2>/dev/null
discard_locals_relocatable_test2.out: discard_locals_relocatable_test.o ../ld-new
	../ld-new --discard-all -relocatable -o $@ $<
libhidden.so: hidden_test_1.c gcctestdir/ld
	$(COMPILE) -Bgcctestdir/ -g -shared -fPIC -w -o $@ $(srcdir)/hidden_test_1.c
hidden_test: hidden_test_main.o libhidden.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ -Wl,-R,. hidden_test_main.o libhidden.so 2>hidden_test.err
hidden_test.syms: hidden_test
	$(TEST_NM) -D hidden_test > $@
hidden_test.err: hidden_test
	@touch hidden_test.err
retain_symbols_file_test.so: basic_pic_test.o gcctestdir/ld
	echo 'main' > retain_symbols_file_test.in
	echo 't1' >> retain_symbols_file_test.in
	echo '_ZNK4t20a3getEv' >> retain_symbols_file_test.in
	echo '_Z3t18v' >> retain_symbols_file_test.in
	echo '__tcf_0' >> retain_symbols_file_test.in
	$(CXXLINK) -Bgcctestdir/ -shared -Wl,-retain-symbols-file,retain_symbols_file_test.in basic_pic_test.o
retain_symbols_file_test.stdout: retain_symbols_file_test.so
	$(TEST_NM) -C retain_symbols_file_test.so > $@
permission_test: basic_test.o gcctestdir/ld
	umask 022; \
	rm -f $@; \
	touch $@; \
	chmod 600 $@; \
	$(CXXLINK) -Bgcctestdir/ basic_test.o
searched_file_test_lib.o: searched_file_test_lib.cc
	$(CXXCOMPILE) -c -o $@ $<
alt/searched_file_test_lib.a: searched_file_test_lib.o
	test -d alt || mkdir -p alt
	$(TEST_AR) rc $@ $^
# We invoke the linker directly since gcc may include additional objects that
# uses symbol versioning.
libno_version_test.so: no_version_test.o gcctestdir/ld
	gcctestdir/ld -shared -o $@ no_version_test.o
no_version_test.o: no_version_test.c
	$(COMPILE) -o $@ -c -fPIC $<
no_version_test.stdout: libno_version_test.so
	$(TEST_OBJDUMP) -h $< > $@

# Test STT_GNU_IFUNC symbols.

ifuncmod1.o: ifuncmod1.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncmod1.so: ifuncmod1.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared ifuncmod1.o

ifuncdep1.o: ifuncmod1.c
	$(COMPILE) -c -o $@ $<

ifuncmain1pic.o: ifuncmain1.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncmain1pie.o: ifuncmain1.c
	$(COMPILE) -c -fPIE -o $@ $<
ifuncmain1picstatic: ifuncmain1pic.o ifuncmod1.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -static ifuncmain1pic.o ifuncmod1.o
ifuncmod1.so.stderr: ifuncmod1.so
	$(TEST_READELF) -s $< > /dev/null 2> $@
ifuncmain1pic: ifuncmain1pic.o ifuncmod1.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ ifuncmain1pic.o ifuncmod1.so -Wl,-R,.
ifuncmain1vispic.o: ifuncmain1vis.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncmain1vispic: ifuncmain1vispic.o ifuncmod1.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ ifuncmain1pic.o ifuncmod1.so -Wl,-R,.
ifuncmain1staticpic: ifuncmain1pic.o ifuncmod1.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ ifuncmain1pic.o ifuncmod1.o
ifuncmain1pie: ifuncmain1pie.o ifuncmod1.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ -pie ifuncmain1pie.o ifuncmod1.so -Wl,-R,.
ifuncmain1vispie.o: ifuncmain1vis.c
	$(COMPILE) -c -fPIE -o $@ $<
ifuncmain1vispie: ifuncmain1vispie.o ifuncmod1.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ -pie ifuncmain1vispie.o ifuncmod1.so -Wl,-R,.
ifuncmain1staticpie: ifuncmain1pie.o ifuncmod1.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -pie ifuncmain1pie.o ifuncmod1.o

ifuncmain2pic.o: ifuncmain2.c
	$(COMPILE) -c -fPIC -o $@ $<

ifuncdep2pic.o: ifuncdep2.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncmain2picstatic: ifuncmain2pic.o ifuncdep2pic.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -static ifuncmain2pic.o ifuncdep2pic.o
ifuncmain2pic: ifuncmain2pic.o ifuncdep2pic.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ ifuncmain2pic.o ifuncdep2pic.o

ifuncmod3.o: ifuncmod3.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncmod3.so: ifuncmod3.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared ifuncmod3.o

ifuncmain4pic.o: ifuncmain4.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncmain4picstatic: ifuncmain4pic.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -static ifuncmain4pic.o

ifuncmain5pic.o: ifuncmain5.c
	$(COMPILE) -c -fPIC -o $@ $<

ifuncmain5pie.o: ifuncmain5.c
	$(COMPILE) -c -fPIE -o $@ $<

ifuncmod5.o: ifuncmod5.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncmod5.so: ifuncmod5.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared ifuncmod5.o

ifuncdep5.o: ifuncmod5.c
	$(COMPILE) -c -o $@ $<
ifuncmain5picstatic: ifuncmain5pic.o ifuncmod5.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -static ifuncmain5pic.o ifuncmod5.o
ifuncmain5pic: ifuncmain5pic.o ifuncmod5.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ ifuncmain5pic.o ifuncmod5.so -Wl,-R,.
ifuncmain5staticpic: ifuncmain5pic.o ifuncmod5.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ ifuncmain5pic.o ifuncmod5.o
ifuncmain5pie: ifuncmain5pie.o ifuncmod5.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ -pie ifuncmain5pie.o ifuncmod5.so -Wl,-R,.

ifuncmain6pie.o: ifuncmain6pie.c
	$(COMPILE) -c -fPIE -o $@ $<

ifuncmod6.o: ifuncmod6.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncmod6.so: ifuncmod6.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared ifuncmod6.o
ifuncmain6pie: ifuncmain6pie.o ifuncmod6.so gcctestdir/ld
	$(LINK) -Bgcctestdir/ -pie ifuncmain6pie.o ifuncmod6.so -Wl,-R,.

ifuncmain7pic.o: ifuncmain7.c
	$(COMPILE) -c -fPIC -o $@ $<

ifuncmain7pie.o: ifuncmain7.c
	$(COMPILE) -c -fPIE -o $@ $<
ifuncmain7picstatic: ifuncmain7pic.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -static ifuncmain7pic.o
ifuncmain7pic: ifuncmain7pic.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ ifuncmain7pic.o
ifuncmain7pie: ifuncmain7pie.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -pie ifuncmain7pie.o
ifuncvar1_pic.o: ifuncvar1.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncvar2_pic.o: ifuncvar2.c
	$(COMPILE) -c -fPIC -o $@ $<
ifuncvar.so: ifuncvar1_pic.o ifuncvar2_pic.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -shared ifuncvar1_pic.o ifuncvar2_pic.o
strong_ref_weak_def_2.o: strong_ref_weak_def_2.c
	$(COMPILE) -o $@ -c -fPIC $<
strong_ref_weak_def_2.so: strong_ref_weak_def_2.o gcctestdir/ld
	gcctestdir/ld -shared -o $@ strong_ref_weak_def_2.o
strong_ref_weak_def_1.o: strong_ref_weak_def_1.c
	$(COMPILE) -o $@ -c -fPIC $<
strong_ref_weak_def_1.so: strong_ref_weak_def_1.o strong_ref_weak_def_2.so \
	gcctestdir/ld
	gcctestdir/ld -shared -o $@ strong_ref_weak_def_1.o \
		strong_ref_weak_def_2.so
strong_ref_weak_def.stdout: strong_ref_weak_def_1.so
	$(TEST_READELF) -sWD $< > $@
dyn_weak_ref_2.o: dyn_weak_ref_2.c
	$(COMPILE) -o $@ -c -fPIC $<
dyn_weak_ref_2.so: dyn_weak_ref_2.o gcctestdir/ld
	gcctestdir/ld -shared -o $@ dyn_weak_ref_2.o
dyn_weak_ref_1.o: dyn_weak_ref_1.c
	$(COMPILE) -o $@ -c -fPIC $<
# We intentionally put dyn_weak_ref_2.so in front of dyn_weak_ref_1.o
# so that the weak ref there goes to gold's symbol table first.
dyn_weak_ref_1.so: dyn_weak_ref_1.o dyn_weak_ref_2.so gcctestdir/ld
	gcctestdir/ld -shared -o $@ dyn_weak_ref_2.so dyn_weak_ref_1.o
dyn_weak_ref.stdout: dyn_weak_ref_1.so
	$(TEST_READELF) -sWD $< > $@
start_lib_test: start_lib_test_main.o libstart_lib_test.a start_lib_test_2.o start_lib_test_3.o \
	gcctestdir/ld
	$(LINK) -Bgcctestdir/ -o $@ start_lib_test_main.o -L. -lstart_lib_test \
		-Wl,--start-lib start_lib_test_2.o start_lib_test_3.o -Wl,--end-lib
libstart_lib_test.a: start_lib_test_1.o
	$(TEST_AR) rc $@ $^
memory_test.o: memory_test.s
	$(COMPILE) -o $@ -c $<
memory_test: memory_test.o gcctestdir/ld $(srcdir)/memory_test.t
	$(LINK) -Bgcctestdir/ -nostartfiles -nostdlib -Wl,-z,max-page-size=0x1000 -Wl,-z,common-page-size=0x1000 -Wl,-T,$(srcdir)/memory_test.t -o $@ memory_test.o
memory_test.stdout: memory_test
	$(TEST_READELF) -lWS  $< > $@
memory_test_inc_1.t: $(srcdir)/memory_test_inc_1.t.src
	cp $< $@
memory_test_inc_2.t: $(srcdir)/memory_test_inc_2.t.src
	cp $< $@
memory_test_inc_3.t: $(srcdir)/memory_test_inc_3.t.src
	cp $< $@
memory_test_2: memory_test.o gcctestdir/ld $(srcdir)/memory_test.t memory_test_inc_1.t memory_test_inc_2.t memory_test_inc_3.t
	$(LINK) -Bgcctestdir/ -nostartfiles -nostdlib -Wl,-z,max-page-size=0x1000 -Wl,-z,common-page-size=0x1000 -Wl,-T,$(srcdir)/memory_test.t -o $@ memory_test.o
gdb_index_test.o: gdb_index_test.cc
	$(CXXCOMPILE) -O0 -g -gno-pubnames -c -o $@ $<
gdb_index_test_1: gdb_index_test.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--gdb-index $<
gdb_index_test_1.stdout: gdb_index_test_1
	$(TEST_READELF) --debug-dump=gdb_index $< > $@
gdb_index_test_cdebug.o: gdb_index_test.cc
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g -Wa,--compress-debug-sections -c -o $@ $<
gdb_index_test_2: gdb_index_test_cdebug.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--gdb-index $<
gdb_index_test_2.stdout: gdb_index_test_2
	$(TEST_READELF) --debug-dump=gdb_index $< > $@
gdb_index_test_cdebug_gabi.o: gdb_index_test.cc
	$(CXXCOMPILE) -Bgcctestdir/ -O0 -g -Wa,--compress-debug-sections=zlib-gabi -c -o $@ $<
gdb_index_test_2_gabi: gdb_index_test_cdebug_gabi.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--gdb-index $<
gdb_index_test_2_gabi.stdout: gdb_index_test_2_gabi
	$(TEST_READELF) --debug-dump=gdb_index $< > $@
gdb_index_test_3.o: gdb_index_test_3.c
	$(COMPILE) -O0 -g -c -o $@ $<
gdb_index_test_3: gdb_index_test_3.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -Wl,--gdb-index,--fatal-warnings $<
gdb_index_test_3.stdout: gdb_index_test_3
	$(TEST_READELF) --debug-dump=gdb_index $< > $@
gdb_index_test_pub.o: gdb_index_test.cc
	$(CXXCOMPILE) -O0 -g -gpubnames -c -o $@ $<
gdb_index_test_4: gdb_index_test_pub.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,--gdb-index $<
gdb_index_test_4.stdout: gdb_index_test_4
	$(TEST_READELF) --debug-dump=gdb_index $< > $@
ehdr_start_test_4.syms: ehdr_start_test_4
	$(TEST_NM) ehdr_start_test_4 > $@
ehdr_start_test_4: ehdr_start_test_4.o gcctestdir/ld
	$(CXXLINK) -Bgcctestdir/ -Wl,-Ttext=0x100100 $<
ehdr_start_test_4.o: ehdr_start_test.cc
	$(CXXCOMPILE) -c -DEHDR_START_WEAK -o $@ $<
defsym_test.syms: defsym_test
	$(TEST_READELF) -sW $< > $@
defsym_test: defsym_test.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ -Wl,--defsym=bar=foo defsym_test.o
defsym_test.o: defsym_test.c
	$(COMPILE) -c -o $@ $<
pr20976: pr20976-d.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ pr20976-d.o
pr20976-d.o: pr20976.o gcctestdir/ld
	gcctestdir/ld -r -d -o $@ pr20976.o

# End-to-end incremental linking tests.
# Incremental linking is currently supported only on the x86_64 target.

#two_file_test_1_v1_ndebug.o: two_file_test_1_v1.cc
#	$(CXXCOMPILE) -O0 -g0 -fno-exceptions -fno-asynchronous-unwind-tables -c -o $@ $<
#two_file_test_1_ndebug.o: two_file_test_1.cc
#	$(CXXCOMPILE) -O0 -g0 -fno-exceptions -fno-asynchronous-unwind-tables -c -o $@ $<
#two_file_test_1b_ndebug.o: two_file_test_1b.cc
#	$(CXXCOMPILE) -O0 -g0 -c -o $@ $<
#two_file_test_2_ndebug.o: two_file_test_2.cc
#	$(CXXCOMPILE) -O0 -g0 -c -o $@ $<
#two_file_test_main_ndebug.o: two_file_test_main.cc
#	$(CXXCOMPILE) -O0 -g0 -c -o $@ $<
#incremental_test_2: two_file_test_1_v1_ndebug.o two_file_test_1_ndebug.o two_file_test_1b_ndebug.o \
#		    two_file_test_2_ndebug.o two_file_test_main_ndebug.o gcctestdir/ld
#	cp -f two_file_test_1_v1_ndebug.o two_file_test_tmp_2.o
#	$(CXXLINK) -Wl,--incremental-full,--incremental-patch=100 -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_tmp_2.o two_file_test_1b_ndebug.o two_file_test_2_ndebug.o two_file_test_main_ndebug.o
#	@sleep 1
#	cp -f two_file_test_1_ndebug.o two_file_test_tmp_2.o
#	$(CXXLINK) -Wl,--incremental-update -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_tmp_2.o two_file_test_1b_ndebug.o two_file_test_2_ndebug.o two_file_test_main_ndebug.o
#incremental_test_3: two_file_test_1.o two_file_test_1b_v1.o two_file_test_1b.o \
#		    two_file_test_2.o two_file_test_main.o gcctestdir/ld
#	cp -f two_file_test_1b_v1.o two_file_test_tmp_3.o
#	$(CXXLINK) -Wl,--incremental-full,--incremental-patch=100 -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_1.o two_file_test_tmp_3.o two_file_test_2.o two_file_test_main.o
#	@sleep 1
#	cp -f two_file_test_1b.o two_file_test_tmp_3.o
#	$(CXXLINK) -Wl,--incremental-update -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_1.o two_file_test_tmp_3.o two_file_test_2.o two_file_test_main.o
#incremental_test_4: two_file_test_1.o two_file_test_1b.o two_file_test_2_v1.o \
#		    two_file_test_2.o two_file_test_main.o gcctestdir/ld
#	cp -f two_file_test_2_v1.o two_file_test_tmp_4.o
#	$(CXXLINK) -Wl,--incremental-full,--incremental-patch=100 -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_1.o two_file_test_1b.o two_file_test_tmp_4.o two_file_test_main.o
#	mv -f incremental_test_4 incremental_test_4.base
#	@sleep 1
#	cp -f two_file_test_2.o two_file_test_tmp_4.o
#	$(CXXLINK) -Wl,--incremental-update,--incremental-base=incremental_test_4.base -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_1.o two_file_test_1b.o two_file_test_tmp_4.o two_file_test_main.o
#incremental_test_5: two_file_test_1.o two_file_test_1b_v1.o two_file_test_1b.o \
#		    two_file_test_2.o two_file_test_main.o gcctestdir/ld
#	cp -f two_file_test_1b_v1.o two_file_test_tmp_5.o
#	$(TEST_AR) rc two_file_test_5.a two_file_test_1.o two_file_test_tmp_5.o two_file_test_2.o
#	$(CXXLINK) -Wl,--incremental-full,--incremental-patch=100 -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_main.o two_file_test_5.a
#	@sleep 1
#	cp -f two_file_test_1b.o two_file_test_tmp_5.o
#	$(TEST_AR) rc two_file_test_5.a two_file_test_1.o two_file_test_tmp_5.o two_file_test_2.o
#	$(CXXLINK) -Wl,--incremental-update -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_main.o two_file_test_5.a
#incremental_test_6: two_file_test_1.o two_file_test_1b_v1.o two_file_test_1b.o \
#		    two_file_test_2.o two_file_test_main.o gcctestdir/ld
#	cp -f two_file_test_1b.o two_file_test_tmp_6.o
#	$(TEST_AR) rc two_file_test_6.a two_file_test_1.o two_file_test_tmp_6.o two_file_test_2.o
#	$(CXXLINK) -Wl,--incremental-full,--incremental-patch=100 -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_main.o two_file_test_6.a
#	@sleep 1
#	cp -f two_file_test_1b_v1.o two_file_test_tmp_6.o
#	$(TEST_AR) rc two_file_test_6.a two_file_test_1.o two_file_test_tmp_6.o two_file_test_2.o
#	$(CXXLINK) -Wl,--incremental-update -Wl,-z,norelro,-no-pie -Bgcctestdir/ two_file_test_main.o -Wl,--incremental-unchanged two_file_test_6.a -Wl,--incremental-unknown
#incremental_copy_test: copy_test_v1.o copy_test.o copy_test_1.so copy_test_2.so
#	cp -f copy_test_v1.o copy_test_tmp.o
#	$(CXXLINK) -Wl,--incremental-full,--incremental-patch=100 -Wl,-z,norelro,-no-pie -Bgcctestdir/ -Wl,-R,. -Wl,--no-as-needed copy_test_tmp.o copy_test_1.so copy_test_2.so
#	@sleep 1
#	cp -f copy_test.o copy_test_tmp.o
#	$(CXXLINK) -Wl,--incremental-update -Wl,-z,norelro,-no-pie -Bgcctestdir/ -Wl,-R,. -Wl,--no-as-needed copy_test_tmp.o copy_test_1.so copy_test_2.so
#incremental_common_test_1: common_test_1_v1.o common_test_1_v2.o gcctestdir/ld
#	cp -f common_test_1_v1.o common_test_1_tmp.o
#	$(CXXLINK) -Wl,--incremental-full,--incremental-patch=100 -Wl,-z,norelro,-no-pie -Bgcctestdir/ common_test_1_tmp.o
#	@sleep 1
#	cp -f common_test_1_v2.o common_test_1_tmp.o
#	$(CXXLINK) -Wl,--incremental-update -Wl,-z,norelro,-no-pie -Bgcctestdir/ common_test_1_tmp.o
#incremental_comdat_test_1: incr_comdat_test_1.o incr_comdat_test_2_v1.o incr_comdat_test_2_v2.o incr_comdat_test_2_v3.o gcctestdir/ld
#	cp -f incr_comdat_test_2_v1.o incr_comdat_test_1_tmp.o
#	$(CXXLINK) -Wl,--incremental-full,--incremental-patch=100 -Wl,-z,norelro,-no-pie -Bgcctestdir/ incr_comdat_test_1.o incr_comdat_test_1_tmp.o
#	@sleep 1
#	cp -f incr_comdat_test_2_v2.o incr_comdat_test_1_tmp.o
#	$(CXXLINK) -Wl,--incremental-update -Wl,-z,norelro,-no-pie -Bgcctestdir/ incr_comdat_test_1.o incr_comdat_test_1_tmp.o
#	@sleep 1
#	cp -f incr_comdat_test_2_v3.o incr_comdat_test_1_tmp.o
#	$(CXXLINK) -Wl,--incremental-update -Wl,-z,norelro,-no-pie -Bgcctestdir/ incr_comdat_test_1.o incr_comdat_test_1_tmp.o
#exception_x86_64_bnd_1.o: exception_test_1.cc gcctestdir/as
#	$(CXXCOMPILE) -c -fpic -Bgcctestdir/ -Wa,-madd-bnd-prefix -o $@ $<
#exception_x86_64_bnd_2.o: exception_test_2.cc gcctestdir/as
#	$(CXXCOMPILE) -c -Bgcctestdir/ -Wa,-madd-bnd-prefix -o $@ $<
pr22266: pr22266_main.o pr22266_ar.o gcctestdir/ld
	$(LINK) -Bgcctestdir/ pr22266_main.o pr22266_ar.o
pr22266_ar.o: pr22266_a.o gcctestdir/ld
	gcctestdir/ld -r -T $(srcdir)/pr22266_script.t -o $@ pr22266_a.o
script_test_10.o: script_test_10.s
	$(TEST_AS) -o $@ $<
script_test_10: $(srcdir)/script_test_10.t script_test_10.o gcctestdir/ld
	gcctestdir/ld -o $@ script_test_10.o -T $(srcdir)/script_test_10.t
script_test_10.stdout: script_test_10
	$(TEST_READELF) -SW script_test_10 > $@
#split_i386_1.o: split_i386_1.s
#	$(TEST_AS) -o $@ $<
#split_i386_2.o: split_i386_2.s
#	$(TEST_AS) -o $@ $<
#split_i386_3.o: split_i386_3.s
#	$(TEST_AS) -o $@ $<
#split_i386_4.o: split_i386_4.s
#	$(TEST_AS) -o $@ $<
#split_i386_n.o: split_i386_n.s
#	$(TEST_AS) -o $@ $<
#split_i386_1: split_i386_1.o split_i386_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_i386_1.o split_i386_n.o
#split_i386_1.stdout: split_i386_1
#	$(TEST_OBJDUMP) -d $< > $@
#split_i386_2: split_i386_2.o split_i386_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_i386_2.o split_i386_n.o
#split_i386_2.stdout: split_i386_2
#	$(TEST_OBJDUMP) -d $< > $@
#split_i386_3.stdout: split_i386_3.o split_i386_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o split_i386_3 split_i386_3.o split_i386_n.o > $@ 2>&1 || exit 0
#split_i386_4: split_i386_4.o split_i386_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_i386_4.o split_i386_n.o
#split_i386_4.stdout: split_i386_4
#	$(TEST_OBJDUMP) -d $< > $@
#split_i386_r.stdout: split_i386_1.o split_i386_n.o ../ld-new
#	../ld-new -r split_i386_1.o split_i386_n.o -o split_i386_r > $@ 2>&1 || exit 0
#split_x86_64_1.o: split_x86_64_1.s
#	$(TEST_AS) -o $@ $<
#split_x86_64_2.o: split_x86_64_2.s
#	$(TEST_AS) -o $@ $<
#split_x86_64_3.o: split_x86_64_3.s
#	$(TEST_AS) -o $@ $<
#split_x86_64_4.o: split_x86_64_4.s
#	$(TEST_AS) -o $@ $<
#split_x86_64_n.o: split_x86_64_n.s
#	$(TEST_AS) -o $@ $<
#split_x86_64_1: split_x86_64_1.o split_x86_64_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_x86_64_1.o split_x86_64_n.o
#split_x86_64_1.stdout: split_x86_64_1
#	$(TEST_OBJDUMP) -d $< > $@
#split_x86_64_2: split_x86_64_2.o split_x86_64_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_x86_64_2.o split_x86_64_n.o
#split_x86_64_2.stdout: split_x86_64_2
#	$(TEST_OBJDUMP) -d $< > $@
#split_x86_64_3.stdout: split_x86_64_3.o split_x86_64_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o split_x86_64_3 split_x86_64_3.o split_x86_64_n.o > $@ 2>&1 || exit 0
#split_x86_64_4: split_x86_64_4.o split_x86_64_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_x86_64_4.o split_x86_64_n.o
#split_x86_64_4.stdout: split_x86_64_4
#	$(TEST_OBJDUMP) -d $< > $@
#split_x86_64_r.stdout: split_x86_64_1.o split_x86_64_n.o ../ld-new
#	../ld-new -r split_x86_64_1.o split_x86_64_n.o -o split_x86_64_r > $@ 2>&1 || exit 0
#bnd_plt_1.o: bnd_plt_1.s
#	$(TEST_AS) --64 -o $@ $<
#bnd_plt_1.so: bnd_plt_1.o ../ld-new
#	../ld-new -shared -z bndplt bnd_plt_1.o -o $@
#bnd_plt_1.stdout: bnd_plt_1.so
#	$(TEST_OBJDUMP) -dw $< > $@
#bnd_ifunc_1.o: bnd_ifunc_1.s
#	$(TEST_AS) --64 -madd-bnd-prefix -o $@ $<
#bnd_ifunc_1.so: bnd_ifunc_1.o ../ld-new
#	../ld-new -shared -z bndplt bnd_ifunc_1.o -o $@
#bnd_ifunc_1.stdout: bnd_ifunc_1.so
#	$(TEST_OBJDUMP) -dw $< > $@
#bnd_ifunc_2.o: bnd_ifunc_2.s
#	$(TEST_AS) --64 -madd-bnd-prefix -o $@ $<
#bnd_ifunc_2.so: bnd_ifunc_2.o ../ld-new
#	../ld-new -shared -z bndplt bnd_ifunc_2.o -o $@
#bnd_ifunc_2.stdout: bnd_ifunc_2.so
#	$(TEST_OBJDUMP) -dw $< > $@
#split_x32_1.o: split_x32_1.s
#	$(TEST_AS) -o $@ $<
#split_x32_2.o: split_x32_2.s
#	$(TEST_AS) -o $@ $<
#split_x32_3.o: split_x32_3.s
#	$(TEST_AS) -o $@ $<
#split_x32_4.o: split_x32_4.s
#	$(TEST_AS) -o $@ $<
#split_x32_n.o: split_x32_n.s
#	$(TEST_AS) -o $@ $<
#split_x32_1: split_x32_1.o split_x32_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_x32_1.o split_x32_n.o
#split_x32_1.stdout: split_x32_1
#	$(TEST_OBJDUMP) -d $< > $@
#split_x32_2: split_x32_2.o split_x32_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_x32_2.o split_x32_n.o
#split_x32_2.stdout: split_x32_2
#	$(TEST_OBJDUMP) -d $< > $@
#split_x32_3.stdout: split_x32_3.o split_x32_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o split_x32_3 split_x32_3.o split_x32_n.o > $@ 2>&1 || exit 0
#split_x32_4: split_x32_4.o split_x32_n.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_x32_4.o split_x32_n.o
#split_x32_4.stdout: split_x32_4
#	$(TEST_OBJDUMP) -d $< > $@
#split_x32_r.stdout: split_x32_1.o split_x32_n.o ../ld-new
#	../ld-new -r split_x32_1.o split_x32_n.o -o split_x32_r > $@ 2>&1 || exit 0
arm_abs_lib.o: arm_abs_lib.s
	$(TEST_AS) -march=armv7-a -o $@ $<
libarm_abs.so: arm_abs_lib.o ../ld-new
	../ld-new -shared -o $@ arm_abs_lib.o
arm_abs_global.o: arm_abs_global.s
	$(TEST_AS) -march=armv7-a -o $@ $<
arm_abs_global: arm_abs_global.o libarm_abs.so ../ld-new
	../ld-new -o $@ arm_abs_global.o -L. -larm_abs
arm_abs_global.stdout: arm_abs_global
	$(TEST_READELF) -r $< > $@

arm_bl_in_range.stdout: arm_bl_in_range
	$(TEST_OBJDUMP) -D $< > $@

arm_bl_in_range: arm_bl_in_range.o ../ld-new
	../ld-new -T $(srcdir)/arm_branch_range.t -o $@ $<

arm_bl_in_range.o: arm_bl_in_range.s
	$(TEST_AS) -o $@ $<

arm_bl_out_of_range.stdout: arm_bl_out_of_range
	$(TEST_OBJDUMP) -S $< > $@

arm_bl_out_of_range: arm_bl_out_of_range.o ../ld-new
	../ld-new -T $(srcdir)/arm_branch_range.t -o $@ $<

arm_bl_out_of_range.o: arm_bl_out_of_range.s
	$(TEST_AS) -o $@ $<

thumb_bl_in_range.stdout: thumb_bl_in_range
	$(TEST_OBJDUMP) -D $< > $@

thumb_bl_in_range: thumb_bl_in_range.o ../ld-new
	../ld-new --no-fix-arm1176 -T $(srcdir)/thumb_branch_range.t -o $@ $<

thumb_bl_in_range.o: thumb_bl_in_range.s
	$(TEST_AS) -o $@ -march=armv5te $<

thumb_bl_out_of_range.stdout: thumb_bl_out_of_range
	$(TEST_OBJDUMP) -D $< > $@

thumb_bl_out_of_range: thumb_bl_out_of_range.o ../ld-new
	../ld-new --no-fix-arm1176 -T $(srcdir)/thumb_branch_range.t -o $@ $<

thumb_bl_out_of_range.o: thumb_bl_out_of_range.s
	$(TEST_AS) -o $@ -march=armv5te $<

thumb2_bl_in_range.stdout: thumb2_bl_in_range
	$(TEST_OBJDUMP) -D $< > $@

thumb2_bl_in_range: thumb2_bl_in_range.o ../ld-new
	../ld-new -T $(srcdir)/thumb2_branch_range.t -o $@ $<

thumb2_bl_in_range.o: thumb_bl_in_range.s
	$(TEST_AS) -o $@ -march=armv7-a $<

thumb2_bl_out_of_range.stdout: thumb2_bl_out_of_range
	$(TEST_OBJDUMP) -D $< > $@

thumb2_bl_out_of_range: thumb2_bl_out_of_range.o ../ld-new
	../ld-new -T $(srcdir)/thumb2_branch_range.t -o $@ $<

thumb2_bl_out_of_range.o: thumb_bl_out_of_range.s
	$(TEST_AS) -o $@ -march=armv7-a $<

thumb_blx_in_range.stdout: thumb_blx_in_range
	$(TEST_OBJDUMP) -D $< > $@

thumb_blx_in_range: thumb_blx_in_range.o ../ld-new
	../ld-new --no-fix-arm1176 -T $(srcdir)/thumb_branch_range.t -o $@ $<

thumb_blx_in_range.o: thumb_blx_in_range.s
	$(TEST_AS) -o $@ -march=armv5te $<

thumb_blx_out_of_range.stdout: thumb_blx_out_of_range
	$(TEST_OBJDUMP) -D $< > $@

thumb_blx_out_of_range: thumb_blx_out_of_range.o ../ld-new
	../ld-new --no-fix-arm1176 -T $(srcdir)/thumb_branch_range.t -o $@ $<

thumb_blx_out_of_range.o: thumb_blx_out_of_range.s
	$(TEST_AS) -o $@ -march=armv5te $<

thumb2_blx_in_range.stdout: thumb2_blx_in_range
	$(TEST_OBJDUMP) -D $< > $@

thumb2_blx_in_range: thumb2_blx_in_range.o ../ld-new
	../ld-new -T $(srcdir)/thumb2_branch_range.t -o $@ $<

thumb2_blx_in_range.o: thumb_blx_in_range.s
	$(TEST_AS) -o $@ -march=armv7-a $<

thumb2_blx_out_of_range.stdout: thumb2_blx_out_of_range
	$(TEST_OBJDUMP) -D $< > $@

thumb2_blx_out_of_range: thumb2_blx_out_of_range.o ../ld-new
	../ld-new -T $(srcdir)/thumb2_branch_range.t -o $@ $<

thumb2_blx_out_of_range.o: thumb_blx_out_of_range.s
	$(TEST_AS) -o $@ -march=armv7-a $<

thumb_bl_out_of_range_local.stdout: thumb_bl_out_of_range_local
	$(TEST_OBJDUMP) -D $< > $@

thumb_bl_out_of_range_local: thumb_bl_out_of_range_local.o ../ld-new
	../ld-new --no-fix-arm1176 -T $(srcdir)/thumb_branch_range.t -o $@ $<

thumb_bl_out_of_range_local.o: thumb_bl_out_of_range_local.s
	$(TEST_AS) -o $@ -march=armv5te $<

arm_thm_jump11.stdout: arm_thm_jump11
	$(TEST_OBJDUMP) -D $< > $@

arm_thm_jump11: arm_thm_jump11.o ../ld-new
	../ld-new -T $(srcdir)/arm_thm_jump11.t -o $@ $<

arm_thm_jump11.o: arm_thm_jump11.s
	$(TEST_AS) -o $@ $<

arm_thm_jump8.stdout: arm_thm_jump8
	$(TEST_OBJDUMP) -D $< > $@

arm_thm_jump8: arm_thm_jump8.o ../ld-new
	../ld-new -T $(srcdir)/arm_thm_jump8.t -o $@ $<

arm_thm_jump8.o: arm_thm_jump8.s
	$(TEST_AS) -o $@ $<

arm_fix_v4bx.stdout: arm_fix_v4bx
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_fix_v4bx: arm_fix_v4bx.o ../ld-new
	../ld-new --no-fix-arm1176 --fix-v4bx -o $@ $<

arm_fix_v4bx.o: arm_fix_v4bx.s
	$(TEST_AS) -o $@ $<

arm_fix_v4bx_interworking.stdout: arm_fix_v4bx_interworking
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_fix_v4bx_interworking: arm_fix_v4bx.o ../ld-new
	../ld-new --no-fix-arm1176 --fix-v4bx-interworking -o $@ $<

arm_no_fix_v4bx.stdout: arm_no_fix_v4bx
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_no_fix_v4bx: arm_fix_v4bx.o ../ld-new
	../ld-new --no-fix-arm1176 -o $@ $<

arm_attr_merge_6.stdout: arm_attr_merge_6
	$(TEST_READELF) -A $< > $@

arm_attr_merge_6: arm_attr_merge_6a.o arm_attr_merge_6b.o ../ld-new
	../ld-new -o $@ arm_attr_merge_6a.o arm_attr_merge_6b.o

arm_attr_merge_6a.o: arm_attr_merge_6a.s
	$(TEST_AS) -o $@ $<

arm_attr_merge_6b.o: arm_attr_merge_6b.s
	$(TEST_AS) -o $@ $<

arm_attr_merge_6r.stdout: arm_attr_merge_6r
	$(TEST_READELF) -A $< > $@

arm_attr_merge_6r: arm_attr_merge_6b.o arm_attr_merge_6a.o ../ld-new
	../ld-new -o $@ arm_attr_merge_6b.o arm_attr_merge_6a.o

arm_attr_merge_7.stdout: arm_attr_merge_7
	$(TEST_READELF) -A $< > $@

arm_attr_merge_7: arm_attr_merge_7a.o arm_attr_merge_7b.o ../ld-new
	../ld-new -o $@ arm_attr_merge_7a.o arm_attr_merge_7b.o

arm_attr_merge_7a.o: arm_attr_merge_7a.s
	$(TEST_AS) -o $@ $<

arm_attr_merge_7b.o: arm_attr_merge_7b.s
	$(TEST_AS) -o $@ $<

arm_fix_1176_default_v6z.stdout: arm_fix_1176_default_v6z
	$(TEST_OBJDUMP) -D -j.foo $< > $@

arm_fix_1176_default_v6z: arm_fix_1176_default_v6z.o ../ld-new
	../ld-new --section-start=.foo=0x2001014 -o $@ $<

arm_fix_1176_default_v6z.o: arm_fix_1176.s
	$(TEST_AS) -march=armv6z -o $@ $<

arm_fix_1176_on_v6z.stdout: arm_fix_1176_on_v6z
	$(TEST_OBJDUMP) -D -j.foo $< > $@

arm_fix_1176_on_v6z: arm_fix_1176_on_v6z.o ../ld-new
	../ld-new --section-start=.foo=0x2001014 --fix-arm1176 -o $@ $<

arm_fix_1176_on_v6z.o: arm_fix_1176.s
	$(TEST_AS) -march=armv6z -o $@ $<

arm_fix_1176_off_v6z.stdout: arm_fix_1176_off_v6z
	$(TEST_OBJDUMP) -D -j.foo $< > $@

arm_fix_1176_off_v6z: arm_fix_1176_off_v6z.o ../ld-new
	../ld-new --section-start=.foo=0x2001014 --no-fix-arm1176 -o $@ $<

arm_fix_1176_off_v6z.o: arm_fix_1176.s
	$(TEST_AS) -march=armv6z -o $@ $<

arm_fix_1176_default_v5te.stdout: arm_fix_1176_default_v5te
	$(TEST_OBJDUMP) -D -j.foo $< > $@

arm_fix_1176_default_v5te: arm_fix_1176_default_v5te.o ../ld-new
	../ld-new --section-start=.foo=0x2001014 -o $@ $<

arm_fix_1176_default_v5te.o: arm_fix_1176.s
	$(TEST_AS) -march=armv5te -o $@ $<

arm_fix_1176_default_v7a.stdout: arm_fix_1176_default_v7a
	$(TEST_OBJDUMP) -D -j.foo $< > $@

arm_fix_1176_default_v7a: arm_fix_1176_default_v7a.o ../ld-new
	../ld-new --section-start=.foo=0x2001014 -o $@ $<

arm_fix_1176_default_v7a.o: arm_fix_1176.s
	$(TEST_AS) -march=armv7-a -o $@ $<

arm_fix_1176_default_1156t2f_s.stdout: arm_fix_1176_default_1156t2f_s
	$(TEST_OBJDUMP) -D -j.foo $< > $@

arm_fix_1176_default_1156t2f_s: arm_fix_1176_default_1156t2f_s.o ../ld-new
	../ld-new --section-start=.foo=0x2001014 -o $@ $<

arm_fix_1176_default_1156t2f_s.o: arm_fix_1176.s
	$(TEST_AS) -mcpu=arm1156t2f-s -o $@ $<

arm_cortex_a8_b_cond.stdout: arm_cortex_a8_b_cond
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_cortex_a8_b_cond: arm_cortex_a8_b_cond.o ../ld-new
	../ld-new -o $@ $<

arm_cortex_a8_b_cond.o: arm_cortex_a8_b_cond.s
	$(TEST_AS) -o $@ $<

arm_cortex_a8_b.stdout: arm_cortex_a8_b
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_cortex_a8_b: arm_cortex_a8_b.o ../ld-new
	../ld-new --fix-cortex-a8 -o $@ $<

arm_cortex_a8_b.o: arm_cortex_a8_b.s
	$(TEST_AS) -o $@ $<

arm_cortex_a8_bl.stdout: arm_cortex_a8_bl
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_cortex_a8_bl: arm_cortex_a8_bl.o ../ld-new
	../ld-new -o $@ $<

arm_cortex_a8_bl.o: arm_cortex_a8_bl.s
	$(TEST_AS) -o $@ $<

arm_cortex_a8_blx.stdout: arm_cortex_a8_blx
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_cortex_a8_blx: arm_cortex_a8_blx.o ../ld-new
	../ld-new -o $@ $<

arm_cortex_a8_blx.o: arm_cortex_a8_blx.s
	$(TEST_AS) -o $@ $<

arm_cortex_a8_local.stdout: arm_cortex_a8_local
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_cortex_a8_local: arm_cortex_a8_local.o ../ld-new
	../ld-new -o $@ $<

arm_cortex_a8_local.o: arm_cortex_a8_local.s
	$(TEST_AS) -o $@ $<

arm_cortex_a8_local_reloc.stdout: arm_cortex_a8_local_reloc
	$(TEST_OBJDUMP) -D -j.text $< > $@

arm_cortex_a8_local_reloc: arm_cortex_a8_local_reloc.o ../ld-new
	../ld-new -o $@ $<

arm_cortex_a8_local_reloc.o: arm_cortex_a8_local_reloc.s
	$(TEST_AS) -o $@ $<

arm_exidx_test.stdout: arm_exidx_test.so
	$(TEST_READELF) -Sr $< > $@

arm_exidx_test.so: arm_exidx_test.o ../ld-new
	../ld-new -shared -o $@ $<

arm_exidx_test.o: arm_exidx_test.s
	$(TEST_AS) -o $@ $<

pr12826.stdout: pr12826.so
	$(TEST_READELF) -A $< > $@

pr12826.so: pr12826_1.o pr12826_2.o ../ld-new
	../ld-new -shared -o $@ $<

pr12826_1.o: pr12826_1.s
	$(TEST_AS) -o $@ $<

pr12826_2.o: pr12826_2.s
	$(TEST_AS) -o $@ $<

arm_unaligned_reloc.stdout: arm_unaligned_reloc
	$(TEST_OBJDUMP) -D $< > $@

arm_unaligned_reloc_r.stdout: arm_unaligned_reloc_r
	$(TEST_OBJDUMP) -Dr $< > $@

arm_unaligned_reloc: arm_unaligned_reloc.o ../ld-new
	../ld-new -o $@ $<

arm_unaligned_reloc_r: arm_unaligned_reloc.o ../ld-new
	../ld-new -r -o $@ $<

arm_unaligned_reloc.o: arm_unaligned_reloc.s
	$(TEST_AS) -o $@ $<

arm_farcall_arm_arm.stdout: arm_farcall_arm_arm
	$(TEST_OBJDUMP) -d $< > $@

arm_farcall_arm_arm: arm_farcall_arm_arm.o ../ld-new
	../ld-new --no-fix-arm1176 --section-start .text=0x1000 --section-start .foo=0x2001020 -o $@ $<

arm_farcall_arm_arm.o: arm_farcall_arm_arm.s
	$(TEST_AS) -o $@ $<

arm_farcall_arm_thumb.stdout: arm_farcall_arm_thumb
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_arm_thumb: arm_farcall_arm_thumb.o ../ld-new
	../ld-new --section-start .text=0x1000 --section-start .foo=0x2001014 -o $@ $<

arm_farcall_arm_thumb.o: arm_farcall_arm_thumb.s
	$(TEST_AS) -o $@ $<

arm_farcall_arm_thumb_5t.stdout: arm_farcall_arm_thumb_5t
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_arm_thumb_5t: arm_farcall_arm_thumb_5t.o ../ld-new
	../ld-new --no-fix-arm1176 --section-start .text=0x1000 --section-start .foo=0x2001014 -o $@ $<

arm_farcall_arm_thumb_5t.o: arm_farcall_arm_thumb.s
	$(TEST_AS) -march=armv5t -o $@ $<

arm_farcall_thumb_thumb.stdout: arm_farcall_thumb_thumb
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_thumb_thumb: arm_farcall_thumb_thumb.o ../ld-new
	../ld-new --section-start .text=0x1000 --section-start .foo=0x2001014 -o $@ $<

arm_farcall_thumb_thumb.o: arm_farcall_thumb_thumb.s
	$(TEST_AS) -march=armv4t -o $@ $<

arm_farcall_thumb_thumb_5t.stdout: arm_farcall_thumb_thumb_5t
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_thumb_thumb_5t: arm_farcall_thumb_thumb_5t.o ../ld-new
	../ld-new --no-fix-arm1176 --section-start .text=0x1000 --section-start .foo=0x2001014 -o $@ $<

arm_farcall_thumb_thumb_5t.o: arm_farcall_thumb_thumb.s
	$(TEST_AS) -march=armv5t -o $@ $<

arm_farcall_thumb_thumb_7m.stdout: arm_farcall_thumb_thumb_7m
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_thumb_thumb_7m: arm_farcall_thumb_thumb_7m.o ../ld-new
	../ld-new --section-start .text=0x1000 --section-start .foo=0x2001014 -o $@ $<

arm_farcall_thumb_thumb_7m.o: arm_farcall_thumb_thumb.s
	$(TEST_AS) -march=armv7-m -o $@ $<

arm_farcall_thumb_thumb_6m.stdout: arm_farcall_thumb_thumb_6m
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_thumb_thumb_6m: arm_farcall_thumb_thumb_6m.o ../ld-new
	../ld-new --section-start .text=0x1000 --section-start .foo=0x2001014 -o $@ $<

arm_farcall_thumb_thumb_6m.o: arm_farcall_thumb_thumb.s
	$(TEST_AS) -march=armv6-m -o $@ $<

arm_farcall_arm_arm_be8.stdout: arm_farcall_arm_arm_be8
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_arm_arm_be8: arm_farcall_arm_arm_be8.o ../ld-new
	../ld-new --no-fix-arm1176 --section-start .text=0x1000 --section-start .foo=0x2001020 -EB --be8 -o $@ $<

arm_farcall_arm_arm_be8.o: arm_farcall_arm_arm.s
	$(TEST_AS) -EB -o $@ $<

arm_farcall_thumb_thumb_be8.stdout: arm_farcall_thumb_thumb_be8
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_thumb_thumb_be8: arm_farcall_thumb_thumb_be8.o ../ld-new
	../ld-new --section-start .text=0x1000 --section-start .foo=0x2001014 -EB --be8 -o $@ $<

arm_farcall_thumb_thumb_be8.o: arm_farcall_thumb_thumb.s
	$(TEST_AS) -march=armv7-m -EB -o $@ $<

arm_farcall_thumb_arm.stdout: arm_farcall_thumb_arm
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_thumb_arm: arm_farcall_thumb_arm.o ../ld-new
	../ld-new --section-start .text=0x1c01010 --section-start .foo=0x2001014 -o $@ $<

arm_farcall_thumb_arm.o: arm_farcall_thumb_arm.s
	$(TEST_AS) -o $@ $<

arm_farcall_thumb_arm_5t.stdout: arm_farcall_thumb_arm_5t
	$(TEST_OBJDUMP) -D $< > $@

arm_farcall_thumb_arm_5t: arm_farcall_thumb_arm_5t.o ../ld-new
	../ld-new --no-fix-arm1176 --section-start .text=0x1c01010 --section-start .foo=0x2001014 -o $@ $<

arm_farcall_thumb_arm_5t.o: arm_farcall_thumb_arm.s
	$(TEST_AS) -march=armv5t -o $@ $<

arm_target1_abs.stdout: arm_target1_abs
	$(TEST_OBJDUMP) -s $< > $@

arm_target1_abs: arm_target1.o ../ld-new
	../ld-new --target1-abs --section-start .text=0x8000 -o $@ $<

arm_target1_rel.stdout: arm_target1_rel
	$(TEST_OBJDUMP) -s $< > $@

arm_target1_rel: arm_target1.o ../ld-new
	../ld-new --target1-rel --section-start .text=0x8000 -o $@ $<

arm_target1.o: arm_target1.s
	$(TEST_AS) -o $@ $<

arm_target2_rel.stdout: arm_target2_rel
	$(TEST_OBJDUMP) -s $< > $@

arm_target2_rel: arm_target2.o ../ld-new
	../ld-new --target2=rel --section-start .text=0x8000 -o $@ $<

arm_target2_abs.stdout: arm_target2_abs
	$(TEST_OBJDUMP) -s $< > $@

arm_target2_abs: arm_target2.o ../ld-new
	../ld-new --target2=abs --section-start .text=0x8000 -o $@ $<

arm_target2_got_rel.stdout: arm_target2_got_rel
	$(TEST_OBJDUMP) -s $< > $@

arm_target2_got_rel: arm_target2.o ../ld-new
	../ld-new --target2=got-rel --section-start .text=0x8000 --section-start .got=0x9000 -o $@ $<

arm_target2.o: arm_target2.s
	$(TEST_AS) -o $@ $<
arm_target_lazy_init: arm_target_lazy_init.o arm_target_lazy_init.t ../ld-new
	../ld-new -T $(srcdir)/arm_target_lazy_init.t -o $@ $<
arm_target_lazy_init.o: arm_target_lazy_init.s
	$(TEST_AS) -EL -o $@ $<
#aarch64_reloc_none.o: aarch64_reloc_none.s
#	$(TEST_AS) -o $@ $<
#aarch64_reloc_none: aarch64_reloc_none.o ../ld-new
#	../ld-new -o $@ aarch64_reloc_none.o --gc-sections
#aarch64_reloc_none.stdout: aarch64_reloc_none
#	$(TEST_NM) $< > $@
#aarch64_globals.o: aarch64_globals.s
#	$(TEST_AS) -o $@ $<
#aarch64_relocs.o: aarch64_relocs.s
#	$(TEST_AS) -o $@ $<
#aarch64_relocs: aarch64_relocs.o aarch64_globals.o ../ld-new
#	../ld-new -o $@ aarch64_relocs.o aarch64_globals.o -e0 --emit-relocs
#aarch64_relocs.stdout: aarch64_relocs
#	$(TEST_OBJDUMP) -dr $< > $@
#pr21430.o: pr21430.s
#	$(TEST_AS) -o $@ $<
#pr21430: pr21430.o ../ld-new
#	../ld-new -o $@ $<
#pr21430.stdout: pr21430
#	$(TEST_NM) -S $< > $@
#aarch64_tlsdesc.o: aarch64_tlsdesc.s
#	$(TEST_AS) -o $@ $<
#aarch64_tlsdesc: aarch64_tlsdesc.o $(srcdir)/aarch64_tlsdesc.t ../ld-new
#	../ld-new $< -shared -T $(srcdir)/aarch64_tlsdesc.t -o $@
#aarch64_tlsdesc.stdout: aarch64_tlsdesc
#	$(TEST_OBJDUMP) -dR -j.text -j.got.plt $< > $@
#split_s390_1_z1.o: split_s390_1_z1.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_1_z2.o: split_s390_1_z2.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_1_z3.o: split_s390_1_z3.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_1_z4.o: split_s390_1_z4.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_1_n1.o: split_s390_1_n1.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_1_n2.o: split_s390_1_n2.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_1_a1.o: split_s390_1_a1.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_1_a2.o: split_s390_1_a2.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_2_s.o: split_s390_2_s.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_2_ns.o: split_s390_2_ns.s
#	$(TEST_AS) -m31 -o $@ $<
#split_s390_z1: split_s390_1_z1.o split_s390_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_z1.o split_s390_2_s.o
#split_s390_z1.stdout: split_s390_z1
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390_z2: split_s390_1_z2.o split_s390_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_z2.o split_s390_2_s.o
#split_s390_z2.stdout: split_s390_z2
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390_z3: split_s390_1_z3.o split_s390_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_z3.o split_s390_2_s.o
#split_s390_z3.stdout: split_s390_z3
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390_z4: split_s390_1_z4.o split_s390_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_z4.o split_s390_2_s.o
#split_s390_z4.stdout: split_s390_z4
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390_n1: split_s390_1_n1.o split_s390_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_n1.o split_s390_2_s.o
#split_s390_n1.stdout: split_s390_n1
#	$(TEST_OBJDUMP) -d $< > $@
#split_s390_n2: split_s390_1_n2.o split_s390_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_n2.o split_s390_2_s.o
#split_s390_n2.stdout: split_s390_n2
#	$(TEST_OBJDUMP) -d $< > $@
#split_s390_z1_ns: split_s390_1_z1.o split_s390_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_z1.o split_s390_2_ns.o
#split_s390_z1_ns.stdout: split_s390_z1_ns
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390_z2_ns: split_s390_1_z2.o split_s390_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_z2.o split_s390_2_ns.o
#split_s390_z2_ns.stdout: split_s390_z2_ns
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390_z3_ns: split_s390_1_z3.o split_s390_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_z3.o split_s390_2_ns.o
#split_s390_z3_ns.stdout: split_s390_z3_ns
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390_z4_ns: split_s390_1_z4.o split_s390_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_z4.o split_s390_2_ns.o
#split_s390_z4_ns.stdout: split_s390_z4_ns
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390_n1_ns: split_s390_1_n1.o split_s390_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_n1.o split_s390_2_ns.o
#split_s390_n1_ns.stdout: split_s390_n1_ns
#	$(TEST_OBJDUMP) -d $< > $@
#split_s390_n2_ns.stdout: split_s390_1_n2.o split_s390_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o split_s390_n2 split_s390_1_n2.o split_s390_2_ns.o > $@ 2>&1 || exit 0
#split_s390_a1.stdout: split_s390_1_a1.o split_s390_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o split_s390_a1 split_s390_1_a1.o split_s390_2_ns.o > $@ 2>&1 || exit 0
#split_s390_a2: split_s390_1_a2.o split_s390_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390_1_a2.o split_s390_2_ns.o
#split_s390_a2.stdout: split_s390_a2
#	$(TEST_OBJDUMP) -d $< > $@
#split_s390_r.stdout: split_s390_1_z1.o split_s390_2_ns.o ../ld-new
#	../ld-new -r split_s390_1_z1.o split_s390_2_ns.o -o split_s390_r > $@ 2>&1 || exit 0
#split_s390x_1_z1.o: split_s390x_1_z1.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_1_z2.o: split_s390x_1_z2.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_1_z3.o: split_s390x_1_z3.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_1_z4.o: split_s390x_1_z4.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_1_n1.o: split_s390x_1_n1.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_1_n2.o: split_s390x_1_n2.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_1_a1.o: split_s390x_1_a1.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_1_a2.o: split_s390x_1_a2.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_2_s.o: split_s390x_2_s.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_2_ns.o: split_s390x_2_ns.s
#	$(TEST_AS) -m64 -o $@ $<
#split_s390x_z1: split_s390x_1_z1.o split_s390x_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_z1.o split_s390x_2_s.o
#split_s390x_z1.stdout: split_s390x_z1
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390x_z2: split_s390x_1_z2.o split_s390x_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_z2.o split_s390x_2_s.o
#split_s390x_z2.stdout: split_s390x_z2
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390x_z3: split_s390x_1_z3.o split_s390x_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_z3.o split_s390x_2_s.o
#split_s390x_z3.stdout: split_s390x_z3
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390x_z4: split_s390x_1_z4.o split_s390x_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_z4.o split_s390x_2_s.o
#split_s390x_z4.stdout: split_s390x_z4
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390x_n1: split_s390x_1_n1.o split_s390x_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_n1.o split_s390x_2_s.o
#split_s390x_n1.stdout: split_s390x_n1
#	$(TEST_OBJDUMP) -d $< > $@
#split_s390x_n2: split_s390x_1_n2.o split_s390x_2_s.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_n2.o split_s390x_2_s.o
#split_s390x_n2.stdout: split_s390x_n2
#	$(TEST_OBJDUMP) -d $< > $@
#split_s390x_z1_ns: split_s390x_1_z1.o split_s390x_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_z1.o split_s390x_2_ns.o
#split_s390x_z1_ns.stdout: split_s390x_z1_ns
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390x_z2_ns: split_s390x_1_z2.o split_s390x_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_z2.o split_s390x_2_ns.o
#split_s390x_z2_ns.stdout: split_s390x_z2_ns
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390x_z3_ns: split_s390x_1_z3.o split_s390x_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_z3.o split_s390x_2_ns.o
#split_s390x_z3_ns.stdout: split_s390x_z3_ns
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390x_z4_ns: split_s390x_1_z4.o split_s390x_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_z4.o split_s390x_2_ns.o
#split_s390x_z4_ns.stdout: split_s390x_z4_ns
#	$(TEST_OBJDUMP) -j .rodata -j .text -D $< > $@
#split_s390x_n1_ns: split_s390x_1_n1.o split_s390x_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_n1.o split_s390x_2_ns.o
#split_s390x_n1_ns.stdout: split_s390x_n1_ns
#	$(TEST_OBJDUMP) -d $< > $@
#split_s390x_n2_ns.stdout: split_s390x_1_n2.o split_s390x_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o split_s390x_n2 split_s390x_1_n2.o split_s390x_2_ns.o > $@ 2>&1 || exit 0
#split_s390x_a1.stdout: split_s390x_1_a1.o split_s390x_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o split_s390x_a1 split_s390x_1_a1.o split_s390x_2_ns.o > $@ 2>&1 || exit 0
#split_s390x_a2: split_s390x_1_a2.o split_s390x_2_ns.o ../ld-new
#	../ld-new $(SPLIT_DEFSYMS) -o $@ split_s390x_1_a2.o split_s390x_2_ns.o
#split_s390x_a2.stdout: split_s390x_a2
#	$(TEST_OBJDUMP) -d $< > $@
#split_s390x_r.stdout: split_s390x_1_z1.o split_s390x_2_ns.o ../ld-new
#	../ld-new -r split_s390x_1_z1.o split_s390x_2_ns.o -o split_s390x_r > $@ 2>&1 || exit 0

# Tests for the dwp tool.
# We don't want to rely yet on GCC support for -gsplit-dwarf,
# so we use (for now) test cases in x86 assembly language,
# compiled from the dwp_test_*.cc sources.

#dwp_test_main.o: dwp_test_main.s
#	$(TEST_AS) -o $@ $<
#dwp_test_1.o: dwp_test_1.s
#	$(TEST_AS) -o $@ $<
#dwp_test_1b.o: dwp_test_1b.s
#	$(TEST_AS) -o $@ $<
#dwp_test_2.o: dwp_test_2.s
#	$(TEST_AS) -o $@ $<

#dwp_test_main.dwo: dwp_test_main.o
#	$(TEST_OBJCOPY) --extract-dwo $< $@
#dwp_test_1.dwo: dwp_test_1.o
#	$(TEST_OBJCOPY) --extract-dwo $< $@
#dwp_test_1b.dwo: dwp_test_1b.o
#	$(TEST_OBJCOPY) --extract-dwo $< $@
#dwp_test_2.dwo: dwp_test_2.o
#	$(TEST_OBJCOPY) --extract-dwo $< $@
#dwp_test_1.stdout: dwp_test_1.dwp
#	$(TEST_READELF) -wi $< > $@
#dwp_test_1.dwp: ../dwp dwp_test_main.dwo dwp_test_1.dwo dwp_test_1b.dwo dwp_test_2.dwo
#	../dwp -o $@ dwp_test_main.dwo dwp_test_1.dwo dwp_test_1b.dwo dwp_test_2.dwo
#dwp_test_2.stdout: dwp_test_2.dwp
#	$(TEST_READELF) -wi $< > $@
#dwp_test_2.dwp: ../dwp dwp_test_2a.dwp dwp_test_2b.dwp
#	../dwp -o $@ dwp_test_2a.dwp dwp_test_2b.dwp
#dwp_test_2a.dwp: ../dwp dwp_test_main.dwo dwp_test_1.dwo
#	../dwp -o $@ dwp_test_main.dwo dwp_test_1.dwo
#dwp_test_2b.dwp: ../dwp dwp_test_1b.dwo dwp_test_2.dwo
#	../dwp -o $@ dwp_test_1b.dwo dwp_test_2.dwo

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
